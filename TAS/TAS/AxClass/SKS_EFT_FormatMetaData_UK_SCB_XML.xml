<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_UK_SCB_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_UK_SCB_XML Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_UK_SCB_XML Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20230302';
        dataContractVersion = '1.0';
        conFormatID = ['UK-SCB-XML','UK-SCB-XML-SO','UK-SCB-XML-PK','UK-SCB-XML-UG','UK-SCB-XML-SL','UK-SCB-XML-MY','UK-SCB-XML-CI','UK-SCB-XML-JO','UK-SCB-XML-SY','UK-SCB-XML-US','UK-SCB-XML-GE','UK-SCB-XML-AE','UK-SCB-XML-KE','UK-SCB-XML-JP','UK-SCB-XML-ZA','UK-SCB-XML-CA','UK-SCB-XML-PL'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'UK - Standard Chartered Bank - XML',0,'','','UK-SCB-XML',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-SCB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'UK - Standard Chartered Bank - XML - Somalia',0,'','','UK-SCB-XML-SO',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-SCB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'UK - Standard Chartered Bank - XML - Pakistan',0,'','','UK-SCB-XML-PK',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-SCB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,1,1,'','','','',0,'','','','',0,'UK - Standard Chartered Bank - XML - Uganda',0,'','','UK-SCB-XML-UG',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-SCB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'UK - Standard Chartered Bank - XML - Sierra Leone',0,'','','UK-SCB-XML-SL',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-SCB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'UK - Standard Chartered Bank - XML - Malaysia',0,'','','UK-SCB-XML-MY',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-SCB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'UK - Standard Chartered Bank - XML - Ivory Coast',0,'','','UK-SCB-XML-CI',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-SCB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'UK - Standard Chartered Bank - XML - Jordan',0,'','','UK-SCB-XML-JO',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-SCB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'UK - Standard Chartered Bank - XML - Syria',0,'','','UK-SCB-XML-SY',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-SCB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'UK - Standard Chartered Bank - XML - USA',0,'','','UK-SCB-XML-US',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-SCB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'UK - Standard Chartered Bank - XML - Georgia',0,'','','UK-SCB-XML-GE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-SCB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'UK - Standard Chartered Bank - XML - UAE',0,'','','UK-SCB-XML-AE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-SCB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,1,1,'','','','',0,'','','','',0,'UK - Standard Chartered Bank - XML - Kenya',0,'','','UK-SCB-XML-KE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-SCB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'UK - Standard Chartered Bank - XML - Japan',0,'','','UK-SCB-XML-JP',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-SCB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'UK - Standard Chartered Bank - XML - South Africa',0,'','','UK-SCB-XML-ZA',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-SCB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'UK - Standard Chartered Bank - XML - Canada',0,'','','UK-SCB-XML-CA',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-SCB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'UK - Standard Chartered Bank - XML - Poland',0,'','','UK-SCB-XML-PL',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-SCB-XML',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('UK-SCB-XML'):
                paymSpecList = this.getPaymSpecsMetaData_UK_SCB_XML();
                break;

            case ('UK-SCB-XML-SO'):
                paymSpecList = this.getPaymSpecsMetaData_UK_SCB_XML_SO();
                break;

            case ('UK-SCB-XML-PK'):
                paymSpecList = this.getPaymSpecsMetaData_UK_SCB_XML_PK();
                break;

            case ('UK-SCB-XML-UG'):
                paymSpecList = this.getPaymSpecsMetaData_UK_SCB_XML_UG();
                break;

            case ('UK-SCB-XML-SL'):
                paymSpecList = this.getPaymSpecsMetaData_UK_SCB_XML_SL();
                break;

            case ('UK-SCB-XML-MY'):
                paymSpecList = this.getPaymSpecsMetaData_UK_SCB_XML_MY();
                break;

            case ('UK-SCB-XML-CI'):
                paymSpecList = this.getPaymSpecsMetaData_UK_SCB_XML_CI();
                break;

            case ('UK-SCB-XML-JO'):
                paymSpecList = this.getPaymSpecsMetaData_UK_SCB_XML_JO();
                break;

            case ('UK-SCB-XML-SY'):
                paymSpecList = this.getPaymSpecsMetaData_UK_SCB_XML_SY();
                break;

            case ('UK-SCB-XML-US'):
                paymSpecList = this.getPaymSpecsMetaData_UK_SCB_XML_US();
                break;

            case ('UK-SCB-XML-GE'):
                paymSpecList = this.getPaymSpecsMetaData_UK_SCB_XML_GE();
                break;

            case ('UK-SCB-XML-AE'):
                paymSpecList = this.getPaymSpecsMetaData_UK_SCB_XML_AE();
                break;

            case ('UK-SCB-XML-KE'):
                paymSpecList = this.getPaymSpecsMetaData_UK_SCB_XML_KE();
                break;

            case ('UK-SCB-XML-JP'):
                paymSpecList = this.getPaymSpecsMetaData_UK_SCB_XML_JP();
                break;

            case ('UK-SCB-XML-ZA'):
                paymSpecList = this.getPaymSpecsMetaData_UK_SCB_XML_ZA();
                break;

            case ('UK-SCB-XML-CA'):
                paymSpecList = this.getPaymSpecsMetaData_UK_SCB_XML_CA();
                break;

            case ('UK-SCB-XML-PL'):
                paymSpecList = this.getPaymSpecsMetaData_UK_SCB_XML_PL();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_SCB_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_SCB_XML()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Telegraphic Transfer',1,'TT','','TT','TRADE PAY',0,'UK-SCB-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_SCB_XML_SO</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_SCB_XML_SO()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Telegraphic Transfer',1,'TT','','TT','TRADE PAY',0,'UK-SCB-XML-SO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_SCB_XML_PK</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_SCB_XML_PK()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Telegraphic Transfer',1,'TT','','TT','TRADE PAY',0,'UK-SCB-XML-PK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_SCB_XML_UG</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_SCB_XML_UG()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Telegraphic Transfer',1,'TT','','TT','TRADE PAY',0,'UK-SCB-XML-UG',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,' Domestic non-Urgent payment',1,'ACH','','ACH','TRADE PAY',0,'UK-SCB-XML-UG',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,0,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Urgent payment for high value',1,'RTGS','','RTGS','TRADE PAY',0,'UK-SCB-XML-UG',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,0,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Mobile Wallet Payment',1,'MWP','','MWP','TRADE PAY',0,'UK-SCB-XML-UG',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,0,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_SCB_XML_SL</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_SCB_XML_SL()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Telegraphic Transfer',1,'TT','','TT','TRADE PAY',0,'UK-SCB-XML-SL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_SCB_XML_MY</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_SCB_XML_MY()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Telegraphic Transfer',1,'TT','','TT','TRADE PAY',0,'UK-SCB-XML-MY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_SCB_XML_CI</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_SCB_XML_CI()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Telegraphic Transfer',1,'TT','','TT','TRADE PAY',0,'UK-SCB-XML-CI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_SCB_XML_JO</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_SCB_XML_JO()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Telegraphic Transfer',1,'TT','','TT','TRADE PAY',0,'UK-SCB-XML-JO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_SCB_XML_SY</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_SCB_XML_SY()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Telegraphic Transfer',1,'TT','','TT','TRADE PAY',0,'UK-SCB-XML-SY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_SCB_XML_US</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_SCB_XML_US()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Telegraphic Transfer',1,'TT','','TT','TRADE PAY',0,'UK-SCB-XML-US',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_SCB_XML_GE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_SCB_XML_GE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Telegraphic Transfer',1,'TT','','TT','TRADE PAY',0,'UK-SCB-XML-GE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_SCB_XML_AE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_SCB_XML_AE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Telegraphic Transfer',1,'TT','','TT','TRADE PAY',0,'UK-SCB-XML-AE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Book Transfer',1,'BT','','BT','TRADE PAY',0,'UK-SCB-XML-AE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Real Time Gross Settlements',1,'RTGS','','RTGS','TRADE PAY',0,'UK-SCB-XML-AE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_SCB_XML_KE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_SCB_XML_KE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Telegraphic Transfer',1,'TT','','TT','TRADE PAY',0,'UK-SCB-XML-KE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,' Domestic non-Urgent payment',1,'ACH','','ACH','TRADE PAY',0,'UK-SCB-XML-KE',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,0,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Urgent payment for high value',1,'RTGS','','RTGS','TRADE PAY',0,'UK-SCB-XML-KE',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,0,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Mobile Wallet Payment',1,'MWP','','MWP','TRADE PAY',0,'UK-SCB-XML-KE',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,0,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_SCB_XML_JP</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_SCB_XML_JP()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Telegraphic Transfer',1,'TT','','TT','TRADE PAY',0,'UK-SCB-XML-JP',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_SCB_XML_ZA</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_SCB_XML_ZA()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Telegraphic Transfer',1,'TT','','TT','TRADE PAY',0,'UK-SCB-XML-ZA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_SCB_XML_CA</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_SCB_XML_CA()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Telegraphic Transfer',1,'TT','','TT','TRADE PAY',0,'UK-SCB-XML-CA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_SCB_XML_PL</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_SCB_XML_PL()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Telegraphic Transfer',1,'TT','','TT','TRADE PAY',0,'UK-SCB-XML-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('UK-SCB-XML'):
                notesList = this.getNotesMetaData_UK_SCB_XML();
                break;

            case ('UK-SCB-XML-SO'):
                notesList = this.getNotesMetaData_UK_SCB_XML_SO();
                break;

            case ('UK-SCB-XML-PK'):
                notesList = this.getNotesMetaData_UK_SCB_XML_PK();
                break;

            case ('UK-SCB-XML-UG'):
                notesList = this.getNotesMetaData_UK_SCB_XML_UG();
                break;

            case ('UK-SCB-XML-SL'):
                notesList = this.getNotesMetaData_UK_SCB_XML_SL();
                break;

            case ('UK-SCB-XML-MY'):
                notesList = this.getNotesMetaData_UK_SCB_XML_MY();
                break;

            case ('UK-SCB-XML-CI'):
                notesList = this.getNotesMetaData_UK_SCB_XML_CI();
                break;

            case ('UK-SCB-XML-JO'):
                notesList = this.getNotesMetaData_UK_SCB_XML_JO();
                break;

            case ('UK-SCB-XML-SY'):
                notesList = this.getNotesMetaData_UK_SCB_XML_SY();
                break;

            case ('UK-SCB-XML-US'):
                notesList = this.getNotesMetaData_UK_SCB_XML_US();
                break;

            case ('UK-SCB-XML-GE'):
                notesList = this.getNotesMetaData_UK_SCB_XML_GE();
                break;

            case ('UK-SCB-XML-AE'):
                notesList = this.getNotesMetaData_UK_SCB_XML_AE();
                break;

            case ('UK-SCB-XML-KE'):
                notesList = this.getNotesMetaData_UK_SCB_XML_KE();
                break;

            case ('UK-SCB-XML-JP'):
                notesList = this.getNotesMetaData_UK_SCB_XML_JP();
                break;

            case ('UK-SCB-XML-ZA'):
                notesList = this.getNotesMetaData_UK_SCB_XML_ZA();
                break;

            case ('UK-SCB-XML-CA'):
                notesList = this.getNotesMetaData_UK_SCB_XML_CA();
                break;

            case ('UK-SCB-XML-PL'):
                notesList = this.getNotesMetaData_UK_SCB_XML_PL();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UK_SCB_XML</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UK_SCB_XML()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML','TT','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UK_SCB_XML_SO</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UK_SCB_XML_SO()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-SO','TT','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UK_SCB_XML_PK</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UK_SCB_XML_PK()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-PK','TT','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UK_SCB_XML_UG</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UK_SCB_XML_UG()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-UG','TT','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-UG','ACH','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-UG','RTGS','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-UG','MWP','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UK_SCB_XML_SL</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UK_SCB_XML_SL()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-SL','TT','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UK_SCB_XML_MY</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UK_SCB_XML_MY()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-MY','TT','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UK_SCB_XML_CI</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UK_SCB_XML_CI()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-CI','TT','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UK_SCB_XML_JO</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UK_SCB_XML_JO()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-JO','TT','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UK_SCB_XML_SY</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UK_SCB_XML_SY()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-SY','TT','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UK_SCB_XML_US</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UK_SCB_XML_US()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-US','TT','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UK_SCB_XML_GE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UK_SCB_XML_GE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-GE','TT','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UK_SCB_XML_AE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UK_SCB_XML_AE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-AE','TT','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-AE','BT','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-AE','RTGS','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UK_SCB_XML_KE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UK_SCB_XML_KE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-KE','TT','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-KE','ACH','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-KE','RTGS','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-KE','MWP','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UK_SCB_XML_JP</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UK_SCB_XML_JP()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-JP','TT','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UK_SCB_XML_ZA</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UK_SCB_XML_ZA()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-ZA','TT','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UK_SCB_XML_CA</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UK_SCB_XML_CA()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-CA','TT','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UK_SCB_XML_PL</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UK_SCB_XML_PL()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UK-SCB-XML-PL','TT','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('UK-SCB-XML'):
                validationsList = this.getValidationsMetaData_UK_SCB_XML();
                break;

            case ('UK-SCB-XML-SO'):
                validationsList = this.getValidationsMetaData_UK_SCB_XML_SO();
                break;

            case ('UK-SCB-XML-PK'):
                validationsList = this.getValidationsMetaData_UK_SCB_XML_PK();
                break;

            case ('UK-SCB-XML-UG'):
                validationsList = this.getValidationsMetaData_UK_SCB_XML_UG();
                break;

            case ('UK-SCB-XML-SL'):
                validationsList = this.getValidationsMetaData_UK_SCB_XML_SL();
                break;

            case ('UK-SCB-XML-MY'):
                validationsList = this.getValidationsMetaData_UK_SCB_XML_MY();
                break;

            case ('UK-SCB-XML-CI'):
                validationsList = this.getValidationsMetaData_UK_SCB_XML_CI();
                break;

            case ('UK-SCB-XML-JO'):
                validationsList = this.getValidationsMetaData_UK_SCB_XML_JO();
                break;

            case ('UK-SCB-XML-SY'):
                validationsList = this.getValidationsMetaData_UK_SCB_XML_SY();
                break;

            case ('UK-SCB-XML-US'):
                validationsList = this.getValidationsMetaData_UK_SCB_XML_US();
                break;

            case ('UK-SCB-XML-GE'):
                validationsList = this.getValidationsMetaData_UK_SCB_XML_GE();
                break;

            case ('UK-SCB-XML-AE'):
                validationsList = this.getValidationsMetaData_UK_SCB_XML_AE();
                break;

            case ('UK-SCB-XML-KE'):
                validationsList = this.getValidationsMetaData_UK_SCB_XML_KE();
                break;

            case ('UK-SCB-XML-JP'):
                validationsList = this.getValidationsMetaData_UK_SCB_XML_JP();
                break;

            case ('UK-SCB-XML-ZA'):
                validationsList = this.getValidationsMetaData_UK_SCB_XML_ZA();
                break;

            case ('UK-SCB-XML-CA'):
                validationsList = this.getValidationsMetaData_UK_SCB_XML_CA();
                break;

            case ('UK-SCB-XML-PL'):
                validationsList = this.getValidationsMetaData_UK_SCB_XML_PL();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_SCB_XML</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_SCB_XML()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML','TT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML','TT','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML','TT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML','TT','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML','TT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML','TT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML','TT','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML','TT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML','TT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML','TT','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML','TT','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML','TT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML','TT','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML','TT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML','TT','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML','TT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML','TT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML','TT','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML','TT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML','TT','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML','TT','','Branch','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Branch','PmtInf > CdTrfTxInf > CdtrAgt > BrnchId > ID ','Beneficiary Branch Name ','16','WBenBankBranch','','','3',0,0,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_SCB_XML_SO</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_SCB_XML_SO()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SO','TT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SO','TT','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SO','TT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SO','TT','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SO','TT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SO','TT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SO','TT','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SO','TT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SO','TT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SO','TT','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SO','TT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SO','TT','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SO','TT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SO','TT','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SO','TT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SO','TT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SO','TT','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SO','TT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SO','TT','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_SCB_XML_PK</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_SCB_XML_PK()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PK','TT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PK','TT','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PK','TT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PK','TT','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PK','TT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PK','TT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PK','TT','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PK','TT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PK','TT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PK','TT','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PK','TT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PK','TT','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PK','TT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PK','TT','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PK','TT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PK','TT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PK','TT','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PK','TT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PK','TT','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_SCB_XML_UG</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_SCB_XML_UG()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);


        //B2B
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','23','WOrdPartyName','','',0,0,1,'140',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Bank Zip/postal code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','23','WOrdPartyZipCode','','',1,1,0,0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Bank Country code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','23','WOrdPartyCountryRegionId','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Bank City','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','23','WOrdPartyCity','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Address 1','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','23','WOrdPartyAddr','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','23','WOrdPartyAddr2','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','23','WOrdPartyState','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',3,0,1,'30',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Bank(offset account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank Account Number','PmtInf > DbtrAcct > Othr > Id','Account Number related to Bank(offset account)','24','AccountNum','','',3,0,1,'34',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',3,0,1,'30',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',3,0,1,'34',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','28','Name','','',0,0,1,'140',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Company(account LE) ZIP/Postal Code','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','ZIP/Postal code  related to Company(account LE)','34','ZipCode','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Company(account LE) City','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to Company(account LE)','34','City','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Company(account LE) Address 1','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Street','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to Company(account LE)','34','Street','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Company(account LE) Country/Region','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Company(account LE)','34','CountryRegionId','','',0,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Company(account LE) State','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > State','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to Company(account LE)','34','State','','',0,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','23','WOrdPartyName','','',0,0,1,'140',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Bank Zip/postal code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','23','WOrdPartyZipCode','','',1,1,0,0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Bank Country code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','23','WOrdPartyCountryRegionId','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Bank City','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','23','WOrdPartyCity','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Address 1','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','23','WOrdPartyAddr','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','23','WOrdPartyAddr2','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','23','WOrdPartyState','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',3,0,1,'30',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Bank(offset account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank Account Number','PmtInf > DbtrAcct > Othr > Id','Account Number related to Bank(offset account)','24','AccountNum','','',3,0,1,'34',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',3,0,1,'30',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',3,0,1,'34',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','28','Name','','',0,0,1,'140',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Company(account LE) ZIP/Postal Code','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','ZIP/Postal code  related to Company(account LE)','34','ZipCode','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Company(account LE) City','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to Company(account LE)','34','City','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Company(account LE) Address 1','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Street','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to Company(account LE)','34','Street','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Company(account LE) Country/Region','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Company(account LE)','34','CountryRegionId','','',0,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Company(account LE) State','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > State','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to Company(account LE)','34','State','','',0,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','23','WOrdPartyName','','',0,0,1,'140',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Bank Zip/postal code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','23','WOrdPartyZipCode','','',1,1,0,0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Bank Country code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','23','WOrdPartyCountryRegionId','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Bank City','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','23','WOrdPartyCity','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Address 1','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','23','WOrdPartyAddr','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','23','WOrdPartyAddr2','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','23','WOrdPartyState','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',3,0,1,'30',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Bank(offset account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank Account Number','PmtInf > DbtrAcct > Othr > Id','Account Number related to Bank(offset account)','24','AccountNum','','',3,0,1,'34',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',3,0,1,'30',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',3,0,1,'34',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','28','Name','','',0,0,1,'140',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Company(account LE) ZIP/Postal Code','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','ZIP/Postal code  related to Company(account LE)','34','ZipCode','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Company(account LE) City','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to Company(account LE)','34','City','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Company(account LE) Address 1','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Street','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to Company(account LE)','34','Street','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Company(account LE) Country/Region','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Company(account LE)','34','CountryRegionId','','',0,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Company(account LE) State','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > State','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to Company(account LE)','34','State','','',0,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','23','WOrdPartyName','','',0,0,1,'140',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Bank Zip/postal code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','23','WOrdPartyZipCode','','',1,1,0,0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Bank Country code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','23','WOrdPartyCountryRegionId','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Bank City','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','23','WOrdPartyCity','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Address 1','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','23','WOrdPartyAddr','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','23','WOrdPartyAddr2','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','23','WOrdPartyState','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',3,0,1,'30',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Bank(offset account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank Account Number','PmtInf > DbtrAcct > Othr > Id','Account Number related to Bank(offset account)','24','AccountNum','','',3,0,1,'34',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',3,0,1,'30',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',3,0,1,'34',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','28','Name','','',0,0,1,'140',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Company(account LE) ZIP/Postal Code','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','ZIP/Postal code  related to Company(account LE)','34','ZipCode','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Company(account LE) City','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to Company(account LE)','34','City','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Company(account LE) Address 1','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Street','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to Company(account LE)','34','Street','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Company(account LE) Country/Region','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Company(account LE)','34','CountryRegionId','','',0,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Company(account LE) State','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > State','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to Company(account LE)','34','State','','',0,1,'',0,0,'4','',0]);
        
        //CNP
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'140',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Bank Zip/postal code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','37','WOrdPartyZipCode','','',1,1,0,0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Bank City','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','37','WOrdPartyCity','','',1,'2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Bank Country code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Address 1','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','37','WOrdPartyAddr','','',1,'2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','State','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > State','State related to bank','37','WOrdPartyState','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',3,0,1,'30',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,0,1,'140',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine ','ZIP/Postal code  related to Customer','35','WBeneZipPostal','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine','Customer city','35','WBeneCity','','',1,1,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Customer Country Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Customer','35','WBeneCountryRegionId','','',0,1,'',0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Customer Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Customer Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr2','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','TT','','Customer State','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','State related to Customer','35','WBeneState','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'140',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Bank Zip/postal code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','37','WOrdPartyZipCode','','',1,1,0,0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Bank City','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','37','WOrdPartyCity','','',1,'2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Bank Country code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Address 1','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','37','WOrdPartyAddr','','',1,'2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','State','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > State','State related to bank','37','WOrdPartyState','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',3,0,1,'30',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,0,1,'140',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine ','ZIP/Postal code  related to Customer','35','WBeneZipPostal','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine','Customer city','35','WBeneCity','','',1,1,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Customer Country Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Customer','35','WBeneCountryRegionId','','',0,1,'',0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Customer Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Customer Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr2','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','ACH','','Customer State','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','State related to Customer','35','WBeneState','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'140',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Bank Zip/postal code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','37','WOrdPartyZipCode','','',1,1,0,0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Bank City','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','37','WOrdPartyCity','','',1,'2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Bank Country code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Address 1','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','37','WOrdPartyAddr','','',1,'2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','State','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > State','State related to bank','37','WOrdPartyState','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',3,0,1,'30',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,0,1,'140',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine ','ZIP/Postal code  related to Customer','35','WBeneZipPostal','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine','Customer city','35','WBeneCity','','',1,1,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Customer Country Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Customer','35','WBeneCountryRegionId','','',0,1,'',0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Customer Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Customer Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr2','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','MWP','','Customer State','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','State related to Customer','35','WBeneState','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'140',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Bank Zip/postal code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','37','WOrdPartyZipCode','','',1,1,0,0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Bank City','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','37','WOrdPartyCity','','',1,'2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Bank Country code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Address 1','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','37','WOrdPartyAddr','','',1,'2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','State','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > State','State related to bank','37','WOrdPartyState','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',3,0,1,'30',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,0,1,'140',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine ','ZIP/Postal code  related to Customer','35','WBeneZipPostal','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine','Customer city','35','WBeneCity','','',1,1,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Customer Country Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Customer','35','WBeneCountryRegionId','','',0,1,'',0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Customer Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Customer Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr2','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-UG','RTGS','','Customer State','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','State related to Customer','35','WBeneState','','',1,'1',1,'35',0,'6']);


        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_SCB_XML_SL</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_SCB_XML_SL()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SL','TT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SL','TT','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SL','TT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SL','TT','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SL','TT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SL','TT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SL','TT','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SL','TT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SL','TT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SL','TT','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SL','TT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SL','TT','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SL','TT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SL','TT','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SL','TT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SL','TT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SL','TT','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SL','TT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SL','TT','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_SCB_XML_MY</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_SCB_XML_MY()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-MY','TT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-MY','TT','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-MY','TT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-MY','TT','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-MY','TT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-MY','TT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-MY','TT','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-MY','TT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-MY','TT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-MY','TT','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-MY','TT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-MY','TT','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-MY','TT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-MY','TT','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-MY','TT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-MY','TT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-MY','TT','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-MY','TT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-MY','TT','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_SCB_XML_CI</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_SCB_XML_CI()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CI','TT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CI','TT','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CI','TT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CI','TT','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CI','TT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CI','TT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CI','TT','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CI','TT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CI','TT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CI','TT','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CI','TT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CI','TT','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CI','TT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CI','TT','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CI','TT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CI','TT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CI','TT','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CI','TT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CI','TT','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_SCB_XML_JO</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_SCB_XML_JO()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JO','TT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JO','TT','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JO','TT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JO','TT','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JO','TT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JO','TT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JO','TT','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JO','TT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JO','TT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JO','TT','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JO','TT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JO','TT','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JO','TT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JO','TT','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JO','TT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JO','TT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JO','TT','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JO','TT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JO','TT','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_SCB_XML_SY</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_SCB_XML_SY()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SY','TT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SY','TT','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SY','TT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SY','TT','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SY','TT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SY','TT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SY','TT','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SY','TT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SY','TT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SY','TT','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SY','TT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SY','TT','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SY','TT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SY','TT','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SY','TT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SY','TT','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SY','TT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-SY','TT','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_SCB_XML_US</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_SCB_XML_US()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-US','TT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-US','TT','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-US','TT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-US','TT','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-US','TT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-US','TT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-US','TT','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-US','TT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-US','TT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-US','TT','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-US','TT','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-US','TT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-US','TT','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-US','TT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-US','TT','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-US','TT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-US','TT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-US','TT','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-US','TT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-US','TT','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_SCB_XML_GE</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_SCB_XML_GE()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-GE','TT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-GE','TT','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-GE','TT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-GE','TT','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-GE','TT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-GE','TT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-GE','TT','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-GE','TT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-GE','TT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-GE','TT','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-GE','TT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-GE','TT','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-GE','TT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-GE','TT','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-GE','TT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-GE','TT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-GE','TT','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-GE','TT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-GE','TT','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_SCB_XML_AE</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_SCB_XML_AE()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','TT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','TT','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','TT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','TT','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','TT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','TT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','TT','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','TT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','TT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','TT','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','TT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','TT','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','TT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','TT','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','TT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','TT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','TT','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','TT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','TT','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','BT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','BT','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','BT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','BT','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','BT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','BT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','BT','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','BT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','BT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','BT','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','BT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','BT','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','BT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','BT','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','BT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','BT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','BT','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','BT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','BT','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','RTGS','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','RTGS','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','RTGS','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','RTGS','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','RTGS','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','RTGS','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','RTGS','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','RTGS','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','RTGS','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','RTGS','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','RTGS','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','RTGS','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','RTGS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','RTGS','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','RTGS','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','RTGS','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','RTGS','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','RTGS','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-AE','RTGS','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_SCB_XML_KE</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_SCB_XML_KE()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);


        //B2B
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','23','WOrdPartyName','','',0,0,1,'140',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Bank Zip/postal code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','23','WOrdPartyZipCode','','',1,1,0,0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Bank Country code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','23','WOrdPartyCountryRegionId','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Bank City','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','23','WOrdPartyCity','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Address 1','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','23','WOrdPartyAddr','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','23','WOrdPartyAddr2','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','23','WOrdPartyState','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',3,0,1,'30',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Bank(offset account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank Account Number','PmtInf > DbtrAcct > Othr > Id','Account Number related to Bank(offset account)','24','AccountNum','','',3,0,1,'34',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',3,0,1,'30',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',3,0,1,'34',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','28','Name','','',0,0,1,'140',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Company(account LE) ZIP/Postal Code','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','ZIP/Postal code  related to Company(account LE)','34','ZipCode','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Company(account LE) City','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to Company(account LE)','34','City','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Company(account LE) Address 1','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Street','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to Company(account LE)','34','Street','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Company(account LE) Country/Region','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Company(account LE)','34','CountryRegionId','','',0,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Company(account LE) State','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > State','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to Company(account LE)','34','State','','',0,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','23','WOrdPartyName','','',0,0,1,'140',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Bank Zip/postal code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','23','WOrdPartyZipCode','','',1,1,0,0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Bank Country code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','23','WOrdPartyCountryRegionId','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Bank City','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','23','WOrdPartyCity','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Address 1','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','23','WOrdPartyAddr','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','23','WOrdPartyAddr2','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','23','WOrdPartyState','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',3,0,1,'30',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Bank(offset account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank Account Number','PmtInf > DbtrAcct > Othr > Id','Account Number related to Bank(offset account)','24','AccountNum','','',3,0,1,'34',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',3,0,1,'30',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',3,0,1,'34',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','28','Name','','',0,0,1,'140',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Company(account LE) ZIP/Postal Code','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','ZIP/Postal code  related to Company(account LE)','34','ZipCode','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Company(account LE) City','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to Company(account LE)','34','City','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Company(account LE) Address 1','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Street','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to Company(account LE)','34','Street','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Company(account LE) Country/Region','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Company(account LE)','34','CountryRegionId','','',0,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Company(account LE) State','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > State','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to Company(account LE)','34','State','','',0,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','23','WOrdPartyName','','',0,0,1,'140',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Bank Zip/postal code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','23','WOrdPartyZipCode','','',1,1,0,0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Bank Country code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','23','WOrdPartyCountryRegionId','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Bank City','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','23','WOrdPartyCity','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Address 1','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','23','WOrdPartyAddr','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','23','WOrdPartyAddr2','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','23','WOrdPartyState','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',3,0,1,'30',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Bank(offset account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank Account Number','PmtInf > DbtrAcct > Othr > Id','Account Number related to Bank(offset account)','24','AccountNum','','',3,0,1,'34',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',3,0,1,'30',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',3,0,1,'34',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','28','Name','','',0,0,1,'140',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Company(account LE) ZIP/Postal Code','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','ZIP/Postal code  related to Company(account LE)','34','ZipCode','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Company(account LE) City','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to Company(account LE)','34','City','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Company(account LE) Address 1','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Street','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to Company(account LE)','34','Street','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Company(account LE) Country/Region','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Company(account LE)','34','CountryRegionId','','',0,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Company(account LE) State','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > State','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to Company(account LE)','34','State','','',0,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','23','WOrdPartyName','','',0,0,1,'140',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Bank Zip/postal code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','23','WOrdPartyZipCode','','',1,1,0,0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Bank Country code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','23','WOrdPartyCountryRegionId','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Bank City','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','23','WOrdPartyCity','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Address 1','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','23','WOrdPartyAddr','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','23','WOrdPartyAddr2','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','23','WOrdPartyState','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',3,0,1,'30',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Bank(offset account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank Account Number','PmtInf > DbtrAcct > Othr > Id','Account Number related to Bank(offset account)','24','AccountNum','','',3,0,1,'34',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',3,0,1,'30',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',3,0,1,'34',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','28','Name','','',0,0,1,'140',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Company(account LE) ZIP/Postal Code','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','ZIP/Postal code  related to Company(account LE)','34','ZipCode','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Company(account LE) City','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to Company(account LE)','34','City','','',1,1,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Company(account LE) Address 1','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Street','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to Company(account LE)','34','Street','','',1,'1',1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Company(account LE) Country/Region','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Company(account LE)','34','CountryRegionId','','',0,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Company(account LE) State','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > State','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to Company(account LE)','34','State','','',0,1,'',0,0,'4','',0]);

        //CNP
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'140',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Bank Zip/postal code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','37','WOrdPartyZipCode','','',1,1,0,0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Bank City','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','37','WOrdPartyCity','','',1,'2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Bank Country code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Address 1','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','37','WOrdPartyAddr','','',1,'2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','State','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > State','State related to bank','37','WOrdPartyState','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',3,0,1,'30',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,0,1,'140',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine ','ZIP/Postal code  related to Customer','35','WBeneZipPostal','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine','Customer city','35','WBeneCity','','',1,1,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Customer Country Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Customer','35','WBeneCountryRegionId','','',0,1,'',0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Customer Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Customer Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr2','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','TT','','Customer State','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','State related to Customer','35','WBeneState','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'140',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Bank Zip/postal code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','37','WOrdPartyZipCode','','',1,1,0,0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Bank City','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','37','WOrdPartyCity','','',1,'2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Bank Country code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Address 1','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','37','WOrdPartyAddr','','',1,'2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','State','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > State','State related to bank','37','WOrdPartyState','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',3,0,1,'30',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,0,1,'140',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine ','ZIP/Postal code  related to Customer','35','WBeneZipPostal','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine','Customer city','35','WBeneCity','','',1,1,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Customer Country Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Customer','35','WBeneCountryRegionId','','',0,1,'',0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Customer Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Customer Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr2','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','ACH','','Customer State','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','State related to Customer','35','WBeneState','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'140',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Bank Zip/postal code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','37','WOrdPartyZipCode','','',1,1,0,0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Bank City','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','37','WOrdPartyCity','','',1,'2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Bank Country code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Address 1','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','37','WOrdPartyAddr','','',1,'2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','State','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > State','State related to bank','37','WOrdPartyState','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',3,0,1,'30',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,0,1,'140',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine ','ZIP/Postal code  related to Customer','35','WBeneZipPostal','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine','Customer city','35','WBeneCity','','',1,1,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Customer Country Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Customer','35','WBeneCountryRegionId','','',0,1,'',0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Customer Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Customer Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr2','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','MWP','','Customer State','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','State related to Customer','35','WBeneState','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'140',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Bank Zip/postal code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','37','WOrdPartyZipCode','','',1,1,0,0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Bank City','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','37','WOrdPartyCity','','',1,'2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Bank Country code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Address 1','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','37','WOrdPartyAddr','','',1,'2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','State','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > State','State related to bank','37','WOrdPartyState','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',3,0,1,'30',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,0,1,'140',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine ','ZIP/Postal code  related to Customer','35','WBeneZipPostal','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine','Customer city','35','WBeneCity','','',1,1,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Customer Country Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Customer','35','WBeneCountryRegionId','','',0,1,'',0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Customer Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Customer Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr2','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-KE','RTGS','','Customer State','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','State related to Customer','35','WBeneState','','',1,'1',1,'35',0,'6']);


        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_SCB_XML_JP</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_SCB_XML_JP()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JP','TT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JP','TT','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JP','TT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JP','TT','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JP','TT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JP','TT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JP','TT','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JP','TT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JP','TT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JP','TT','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JP','TT','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'4',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JP','TT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JP','TT','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JP','TT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JP','TT','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JP','TT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JP','TT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JP','TT','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JP','TT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JP','TT','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-JP','TT','','Branch','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Branch','PmtInf > CdTrfTxInf > CdtrAgt > BrnchId > ID ','Beneficiary Branch Name ','16','WBenBankBranch','','','3',0,0,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_SCB_XML_ZA</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_SCB_XML_ZA()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-ZA','TT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-ZA','TT','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-ZA','TT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-ZA','TT','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-ZA','TT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-ZA','TT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-ZA','TT','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > State','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-ZA','TT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-ZA','TT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-ZA','TT','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-ZA','TT','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-ZA','TT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-ZA','TT','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-ZA','TT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-ZA','TT','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-ZA','TT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-ZA','TT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-ZA','TT','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-ZA','TT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-ZA','TT','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-ZA','TT','','Branch','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Branch','PmtInf > CdTrfTxInf > CdtrAgt > BrnchId > ID ','Beneficiary Branch Name ','16','WBenBankBranch','','','3',0,0,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_SCB_XML_CA</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_SCB_XML_CA()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CA','TT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CA','TT','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CA','TT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CA','TT','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CA','TT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CA','TT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CA','TT','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CA','TT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CA','TT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CA','TT','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CA','TT','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CA','TT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CA','TT','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CA','TT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CA','TT','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CA','TT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CA','TT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CA','TT','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CA','TT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-CA','TT','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_SCB_XML_PL</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_SCB_XML_PL()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PL','TT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PL','TT','','ZIP/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ZIP/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PL','TT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PL','TT','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PL','TT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Street name related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PL','TT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > BldgNb','Building number related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PL','TT','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > mRemittanceState','Country sub division related to bank','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PL','TT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PL','TT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PL','TT','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PL','TT','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PL','TT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PL','TT','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PL','TT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,0,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PL','TT','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PL','TT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PL','TT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PL','TT','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PL','TT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Building number related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-SCB-XML-PL','TT','','Country sub division','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','Country sub division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UK-SCB-XML','CtgyPurp','Category Purpose Code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UK-SCB-XML','ChrgBr','Charge Bearer']);
        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','CashManagementTransfer','CASH']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','Credit Card Payment','CCRD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','TradeSettlementPayment','CORT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','Debit Card Payment','DCRD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','Dividend','DIVI']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','GovernmentPayment','GOVT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','Hedging','HEDG']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','Irrevocable Credit Card Payment','ICCP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','Irrevocable Debit Card Payment','IDCP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','IntraCompanyPayment','INTC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','Interest','INTE']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','Loan','LOAN']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','Pension Payment','PENS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','Salary Payment','SALA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','Securities','SECU']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','Social Security Benefit','SSBE']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','Supplier Payment','SUPP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','Tax Payment','TAXS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','Treasury Payment','TREA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','Value Added Tax Payment','VATX']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','Withholding','WHLD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','CtgyPurp','ePayment','EPAY']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','ChrgBr','Borne By Debtor','DEBT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','ChrgBr','Borne By Creditor','CRED']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-SCB-XML','ChrgBr','Shared','SHAR']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('UK-SCB-XML'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_SCB_XML();
                break;

            case ('UK-SCB-XML-SO'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_SCB_XML_SO();
                break;

            case ('UK-SCB-XML-PK'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_SCB_XML_PK();
                break;

            case ('UK-SCB-XML-UG'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_SCB_XML_UG();
                break;

            case ('UK-SCB-XML-SL'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_SCB_XML_SL();
                break;

            case ('UK-SCB-XML-MY'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_SCB_XML_MY();
                break;

            case ('UK-SCB-XML-CI'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_SCB_XML_CI();
                break;

            case ('UK-SCB-XML-JO'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_SCB_XML_JO();
                break;

            case ('UK-SCB-XML-SY'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_SCB_XML_SY();
                break;

            case ('UK-SCB-XML-US'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_SCB_XML_US();
                break;

            case ('UK-SCB-XML-GE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_SCB_XML_GE();
                break;

            case ('UK-SCB-XML-AE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_SCB_XML_AE();
                break;

            case ('UK-SCB-XML-KE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_SCB_XML_KE();
                break;

            case ('UK-SCB-XML-JP'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_SCB_XML_JP();
                break;

            case ('UK-SCB-XML-ZA'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_SCB_XML_ZA();
                break;

            case ('UK-SCB-XML-CA'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_SCB_XML_CA();
                break;

            case ('UK-SCB-XML-PL'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_SCB_XML_PL();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_SCB_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_SCB_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML','TT','CtgyPurp','Category Purpose Code',0,'CtgyPurp','CashManagementTransfer',0,'','','PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML','TT','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_SCB_XML_SO</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_SCB_XML_SO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-SO','TT','CtgyPurp','Category Purpose Code',0,'CtgyPurp','CashManagementTransfer',0,'','','PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-SO','TT','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_SCB_XML_PK</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_SCB_XML_PK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-PK','TT','CtgyPurp','Category Purpose Code',0,'CtgyPurp','CashManagementTransfer',0,'','','PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-PK','TT','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_SCB_XML_UG</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_SCB_XML_UG()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-UG','TT','CtgyPurp','Category Purpose Code',0,'CtgyPurp','CashManagementTransfer',0,'','','PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-UG','TT','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-UG','MWP','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-UG','RTGS','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-UG','ACH','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-UG','MWP','LclInstrm','Local Instrument',1,'LclInstrm','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtTpInf > LclInstrm > Prtry']);


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_SCB_XML_SL</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_SCB_XML_SL()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-SL','TT','CtgyPurp','Category Purpose Code',0,'CtgyPurp','CashManagementTransfer',0,'','','PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-SL','TT','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_SCB_XML_MY</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_SCB_XML_MY()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-MY','TT','CtgyPurp','Category Purpose Code',0,'CtgyPurp','CashManagementTransfer',0,'','','PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-MY','TT','PurpCd','Purpose Code',1,'PurpCd','',0,'','XXXX','CdtTrfTxInf > Purp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-MY','TT','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_SCB_XML_CI</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_SCB_XML_CI()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-CI','TT','CtgyPurp','Category Purpose Code',0,'CtgyPurp','CashManagementTransfer',0,'','','PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-CI','TT','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_SCB_XML_JO</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_SCB_XML_JO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-JO','TT','CtgyPurp','Category Purpose Code',0,'CtgyPurp','CashManagementTransfer',0,'','','PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-JO','TT','PurpCd','Purpose Code',1,'PurpCd','',0,'','XXXX','CdtTrfTxInf > Purp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-JO','TT','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_SCB_XML_SY</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_SCB_XML_SY()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-SY','TT','CtgyPurp','Category Purpose Code',0,'CtgyPurp','CashManagementTransfer',0,'','','PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-SY','TT','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_SCB_XML_US</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_SCB_XML_US()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-US','TT','CtgyPurp','Category Purpose Code',0,'CtgyPurp','CashManagementTransfer',0,'','','PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-US','TT','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_SCB_XML_GE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_SCB_XML_GE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-GE','TT','CtgyPurp','Category Purpose Code',0,'CtgyPurp','CashManagementTransfer',0,'','','PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-GE','TT','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_SCB_XML_AE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_SCB_XML_AE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-AE','TT','CtgyPurp','Category Purpose Code',0,'CtgyPurp','CashManagementTransfer',0,'','','PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-AE','TT','PurpCd','Purpose Code',1,'PurpCd','',0,'','XXXX','CdtTrfTxInf > Purp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-AE','TT','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-AE','BT','CtgyPurp','Category Purpose Code',0,'CtgyPurp','CashManagementTransfer',0,'','','PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-AE','BT','PurpCd','Purpose Code',1,'PurpCd','',0,'','XXXX','CdtTrfTxInf > Purp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-AE','BT','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-AE','RTGS','CtgyPurp','Category Purpose Code',0,'CtgyPurp','CashManagementTransfer',0,'','','PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-AE','RTGS','PurpCd','Purpose Code',1,'PurpCd','',0,'','XXXX','CdtTrfTxInf > Purp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-AE','RTGS','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_SCB_XML_KE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_SCB_XML_KE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-KE','TT','CtgyPurp','Category Purpose Code',0,'CtgyPurp','CashManagementTransfer',0,'','','PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-KE','TT','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-KE','MWP','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-KE','RTGS','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-KE','ACH','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-KE','MWP','LclInstrm','Local Instrument',1,'LclInstrm','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtTpInf > LclInstrm > Prtry']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_SCB_XML_JP</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_SCB_XML_JP()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-JP','TT','CtgyPurp','Category Purpose Code',0,'CtgyPurp','CashManagementTransfer',0,'','','PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-JP','TT','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_SCB_XML_ZA</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_SCB_XML_ZA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-ZA','TT','CtgyPurp','Category Purpose Code',0,'CtgyPurp','CashManagementTransfer',0,'','','PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-ZA','TT','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_SCB_XML_CA</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_SCB_XML_CA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-CA','TT','CtgyPurp','Category Purpose Code',0,'CtgyPurp','CashManagementTransfer',0,'','','PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-CA','TT','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_SCB_XML_PL</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_SCB_XML_PL()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-PL','TT','CtgyPurp','Category Purpose Code',0,'CtgyPurp','CashManagementTransfer',0,'','','PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-SCB-XML','UK-SCB-XML-PL','TT','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-SCB-XML','*','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-SCB-XML','*','FormatValidations','*','16','WChargesIndic']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('UK-SCB-XML'):
            case ('UK-SCB-XML-AE'):
            case ('UK-SCB-XML-CA'):
            case ('UK-SCB-XML-CI'):
            case ('UK-SCB-XML-GE'):
            case ('UK-SCB-XML-JO'):
            case ('UK-SCB-XML-JP'):
            case ('UK-SCB-XML-KE'):
            case ('UK-SCB-XML-MY'):
            case ('UK-SCB-XML-PK'):
            case ('UK-SCB-XML-PL'):
            case ('UK-SCB-XML-SL'):
            case ('UK-SCB-XML-SO'):
            case ('UK-SCB-XML-SY'):
            case ('UK-SCB-XML-UG'):
            case ('UK-SCB-XML-US'):
            case ('UK-SCB-XML-ZA'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('ChrgBr', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>