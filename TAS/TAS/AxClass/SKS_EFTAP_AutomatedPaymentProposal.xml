<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFTAP_AutomatedPaymentProposal</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_EFTAP_AutomatedPaymentProposal extends RunBaseBatch
{


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>runCalendar</Name>
				<Source><![CDATA[
    delegate void runCalendar(RefRecId BatchRecID) {}

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        Batch                                   bat;
        RefRecId                                locRefRecID;
        SKS_EFTAP_AutomatedPaymentProposal      automatedPaymentProposal;

        bat = this.parmCurrentBatch();
        locRefRecID = bat.RecId;

        try
        {
            this.runCalendar(locRefRecID);
        }
        catch
        {
            throw error("@SYS21628");
        }
        finally
        {
            this.validateJournalId(); //Bug 10210
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateJournalId</Name>
				<Source><![CDATA[
    /// <summary>
    /// validates journal id and deleats the journal if lines not created.
    /// </summary>
    // Bug 10210
    private void validateJournalId()
    {
        container               checkForBlankJournalCompany;// Bug 10210
        int                     companyPosition;
        DataAreaID              changeCompanyValue;

        checkForBlankJournalCompany = this.getCompanies();
        for (companyPosition = 1; companyPosition <= conLen(checkForBlankJournalCompany); companyPosition++)
        {
            changeCompanyValue = con2Str(conPeek(checkForBlankJournalCompany, companyPosition));
            changecompany(changeCompanyValue)
            {
                LedgerJournalTable      ledgerJournalTable;
                LedgerJournalTrans      ledgerJournalTrans;

                while select forupdate ledgerJournalTable
                    where ledgerJournalTable.SKS_EFTAP_ISPaymentCalendarJournal == NoYes::Yes || ledgerJournalTable.SKS_EFTAP_IsCreatedByReqJournal == NoYes::Yes //BUG 10210
                {
                    select firstonly  ledgerJournalTrans
                        where ledgerJournalTrans.JournalNum == ledgerJournalTable.JournalNum;

                    if(!ledgerJournalTrans.RecId)
                    {
                        ttsbegin;
                        ledgerJournalTable.delete();
                        ttscommit;
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCompanies</Name>
				<Source><![CDATA[
    //Bug 10210
    public  container getCompanies()
    {
        container       allCompanies;
        CompanyInfo     companyInfo;

        while select DataArea from companyInfo
        {
            allCompanies += companyInfo.DataArea;
        }
        return allCompanies;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>