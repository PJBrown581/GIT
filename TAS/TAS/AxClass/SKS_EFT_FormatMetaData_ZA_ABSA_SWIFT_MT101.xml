<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_ZA_ABSA_SWIFT_MT101</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_ZA_ABSA_SWIFT_MT101 Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_ZA_ABSA_SWIFT_MT101 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220502';
        dataContractVersion = '1.0';
        conFormatID = ['ZA-ABSA-SWIFT-MT101'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'ZA - ABSA - SWIFT - MT101',0,'','','ZA-ABSA-SWIFT-MT101',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'ZA-ABSA-SWIFT-MT101',1]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('ZA-ABSA-SWIFT-MT101'):
                paymSpecList = this.getPaymSpecsMetaData_ZA_ABSA_SWIFT_MT101();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_ZA_ABSA_SWIFT_MT101</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_ZA_ABSA_SWIFT_MT101()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Local ZAR payments',1,'LCL-PMT','','LCL-PMT','TRADE PAY',0,'ZA-ABSA-SWIFT-MT101',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Foreign CCY & Cross Border Payments',1,'CB-PMT','','CB-PMT','TRADE PAY',0,'ZA-ABSA-SWIFT-MT101',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('ZA-ABSA-SWIFT-MT101'):
                notesList = this.getNotesMetaData_ZA_ABSA_SWIFT_MT101();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_ZA_ABSA_SWIFT_MT101</Name>
				<Source><![CDATA[
    private container getNotesMetaData_ZA_ABSA_SWIFT_MT101()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['ZA-ABSA-SWIFT-MT101','LCL-PMT','']);
        notesList = ConIns(notesList,conLen(notesList)+1,['ZA-ABSA-SWIFT-MT101','CB-PMT','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('ZA-ABSA-SWIFT-MT101'):
                validationsList = this.getValidationsMetaData_ZA_ABSA_SWIFT_MT101();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_ZA_ABSA_SWIFT_MT101</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_ZA_ABSA_SWIFT_MT101()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','LCL-PMT','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','Basic Header Block > LT Identifier','Swift code related to Bank',0,'SWIFTNo','','',0,0,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','LCL-PMT','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','Text Block > :57 : > Vendor swift number','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','LCL-PMT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Text Block > :50: > Bank Account Number','Bank account number',0,'AccountNum','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','LCL-PMT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Text Block > :50: > Bank Name','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','LCL-PMT','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','Text Block > :50: > Bank Country','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','LCL-PMT','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Text Block > :50: > Bank Address','Address related to bank','15','WOrdPartyAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','LCL-PMT','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','Text Block > :50: > Bank Address','Address related to bank','15','WOrdPartyAddr2','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','LCL-PMT','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Text Block > :50: > Bank City','City related to bank','15','WOrdPartyCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','LCL-PMT','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','Text Block > :50: > Bank postal code','ZipCode related to bank','15','WOrdPartyZipCode','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','LCL-PMT','','Vendor Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Text Block > :59: > Beneficiary Account Number','Account Number related to vendor','9','AccountNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','LCL-PMT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Text Block > :59: > Beneficiary Name','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','LCL-PMT','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Text Block > :59: > Beneficiary Country','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','LCL-PMT','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Text Block > :59: > Beneficiary Address','Address related to vendor','16','WBeneAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','LCL-PMT','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Text Block > :59: > Beneficiary Address','Address related to vendor','16','WBeneAddr2','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','LCL-PMT','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Text Block > :59: > Beneficiary postal code','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','LCL-PMT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Text Block > :59: > Beneficiary City','Vendor city','16','WBeneCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','CB-PMT','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','Basic Header Block > LT Identifier','Swift code related to Bank',0,'SWIFTNo','','',0,0,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','CB-PMT','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','Text Block > : 57 : > Vendor swift number','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','CB-PMT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Text Block > :50: > Bank Account Number','Bank account number',0,'AccountNum','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','CB-PMT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Text Block > :50: > Bank Name','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','CB-PMT','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','Text Block > :50: > Bank Country','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','CB-PMT','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Text Block > :50: > Bank Address','Address related to bank','15','WOrdPartyAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','CB-PMT','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','Text Block > :50: > Bank Address','Address related to bank','15','WOrdPartyAddr2','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','CB-PMT','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Text Block > :50: > Bank City','City related to bank','15','WOrdPartyCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','CB-PMT','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','Text Block > :50: > Bank postal code','ZipCode related to bank','15','WOrdPartyZipCode','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','CB-PMT','','Vendor Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Text Block > :59: > Beneficiary Account Number','Account Number related to vendor','9','AccountNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','CB-PMT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Text Block > :59: > Beneficiary Name','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','CB-PMT','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Text Block > :59: > Beneficiary Country','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','CB-PMT','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Text Block > :59: > Beneficiary Address','Address related to vendor','16','WBeneAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','CB-PMT','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Text Block > :59: > Beneficiary Address','Address related to vendor','16','WBeneAddr2','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','CB-PMT','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Text Block > :59: > Beneficiary postal code','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-ABSA-SWIFT-MT101','CB-PMT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Text Block > :59: > Beneficiary City','Vendor city','16','WBeneCity','','',0,0,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['ZA-ABSA-SWIFT-MT101','MsgPriority','Message Priority']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-ABSA-SWIFT-MT101','MsgPriority','Normal','N']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-ABSA-SWIFT-MT101','MsgPriority','Urgent','U']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('ZA-ABSA-SWIFT-MT101'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_ZA_ABSA_SWIFT_MT101();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_ZA_ABSA_SWIFT_MT101</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_ZA_ABSA_SWIFT_MT101()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-ABSA-SWIFT-MT101','ZA-ABSA-SWIFT-MT101','CB-PMT','MsgPriority','Message Priority',0,'MsgPriority','',1,'','','Application Header > Message Priority']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-ABSA-SWIFT-MT101','*','FormatValidations','*','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-ABSA-SWIFT-MT101','*','FormatValidations','*','15','W02']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch(_formatID)
        {
            case ('ZA-ABSA-SWIFT-MT101'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_ZA_ABSA_SWIFT_MT101();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_ZA_ABSA_SWIFT_MT101</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_ZA_ABSA_SWIFT_MT101()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-ABSA-SWIFT-MT101','ZA-ABSA-SWIFT-MT101','ClientSysRefNum','Client System Reference Number',1,'ClientSysRefNum','',0,'','XXXXXXXXXXXXXXXX','Text Block > :20: > Transaction Reference Number']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-ABSA-SWIFT-MT101','ZA-ABSA-SWIFT-MT101','AppicationHeaderBlk','Application Header Block Swift',1,'AppicationHeaderBlk','',0,'','XXXXXXXXXXXX','Text Block > : 2 : > Application Header Block Swift Code']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('ZA-ABSA-SWIFT-MT101'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('ClientSysRefNum', gSKS_EFT_Bank.W01);
                }

                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('AppicationHeaderBlk', gSKS_EFT_Bank.W02);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>