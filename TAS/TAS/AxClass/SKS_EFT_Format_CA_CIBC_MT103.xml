<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_CA_CIBC_MT103</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_CA_CIBC_MT103 for CIBC MT103 format
/// </summary>
class SKS_EFT_Format_CA_CIBC_MT103 Extends SKS_EFT_Format
{
    #define.FormatVersion('20230512')
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();
            
            this.rec_DetailBlock();
    
            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_DetailBlock</Name>
				<Source><![CDATA[
    private void rec_DetailBlock()
    {
        str amount;

        this.fileWrite(':20:' + subStr(mSKS_EFT_FileDetail.PaymentReference, 1, 16));

        this.fileWrite(':23B:CRED');

        amount = num2str(-1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 0, 2, 2, 0);
        
        this.fileWrite(':32A:' + SKS_PP_StringFormats::strDateYYMMDD(mSKS_EFT_FileDetail.EffectiveDate)
                               + mSKS_EFT_FileDetail.PaymentCurrencyCode
                               + amount);       //DevOps 18369
          
        this.rec_50K();

        this.rec_57D();

        this.rec_59();

        this.rec_70();

        if(SKS_EFT_Format::getCodelookupvalue('Charges', mSKS_EFT_FileDetail.RecId))
        {
            this.fileWrite(':71A:' + SKS_EFT_Format::getCodelookupvalue('Charges', mSKS_EFT_FileDetail.RecId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_50K</Name>
				<Source><![CDATA[
    /// <summary>
    /// REC_50 method
    /// </summary>
    /// <returns>String</returns>
    boolean rec_50K()
    {
        str address;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        sb.Append(':50K:/');
    
        //     Complete account number
        sb.Append(subStr(strUpr(mSKS_EFT_FileDetail.BankBankAcct), 1, 34));
        

        //      Ordering party's name
        if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName)
        {
            sb.AppendLine();
            sb.Append(this.CharacterReplacement(strUpr(subStr(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName, 1, 35))));
        }

        //      Address
        if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr)
        {
            sb.AppendLine();
            sb.Append(this.CharacterReplacement(strUpr(subStr(mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr, 1, 35))));
        }

        //      City, Province
        address = mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity;

        if(address && (mSKS_EFT_FileDetail_BankAccount.WOrdPartyState || mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode))
        {
            if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyState)
            {
                address = address + ',' + mSKS_EFT_FileDetail_BankAccount.WOrdPartyState;
            }

            if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode)
            {
                address = address + ' ' + mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode;
            }
        }


        if(address)
        {
            sb.AppendLine();
            sb.Append(this.CharacterReplacement(strUpr(subStr(address, 1, 35))));
        }
        
        if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId)
        {
            sb.AppendLine();
            sb.Append(strUpr(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId));
        }
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_57D</Name>
				<Source><![CDATA[
    /// <summary>
    /// REC_5TD method
    /// </summary>
    /// <returns>String</returns>
    boolean rec_57D()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        sb.Append(':57D:');

        if(mSKS_EFT_FileDetail.DepSwiftNo)
        {
            sb.Append(subStr(strUpr('//SW' + mSKS_EFT_FileDetail.DepSwiftNo), 1, 34));  //SKS#DevOps:20294
        }
        else
        {
            sb.Append('//FW' + subStr(strUpr(mSKS_EFT_FileDetail.DepBankTransit), 1, 34));
        }

        if(mSKS_EFT_FileDetail_BenBank.BenBankName ||  mSKS_EFT_FileDetail_BenBank.BenBankAddr  ||  mSKS_EFT_FileDetail_BenBank.BenBankCity  ||  mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId)
        {
            if(mSKS_EFT_FileDetail_BenBank.BenBankName)
            {
                sb.AppendLine();

                //      Beneficiary bank name
                sb.Append(subStr(strUpr(mSKS_EFT_FileDetail_BenBank.BenBankName), 1, 35));
            }

            if(mSKS_EFT_FileDetail_BenBank.BenBankAddr)
            {
                sb.AppendLine();

                //  Beneficiary bank address
                sb.Append(subStr(strUpr(mSKS_EFT_FileDetail_BenBank.BenBankAddr), 1, 35));
            }

            if(mSKS_EFT_FileDetail_BenBank.BenBankCity && mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId)
            {
                sb.AppendLine();

                sb.Append(subStr(strUpr(mSKS_EFT_FileDetail_BenBank.BenBankCity) + ' ' + this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId), 1, 35));
            }
            else if(mSKS_EFT_FileDetail_BenBank.BenBankCity)
            {
                sb.AppendLine();

                sb.Append(strUpr(mSKS_EFT_FileDetail_BenBank.BenBankCity));
            }
            else if(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId)
            {
                sb.AppendLine();

                sb.Append(strUpr(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId));
            }

            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_59</Name>
				<Source><![CDATA[
    /// <summary>
    /// REC_59 method
    /// </summary>
    /// <returns>String</returns>
    boolean rec_59()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str address;

        if(mSKS_EFT_FileDetail.DepBankAcct  ||  mSKS_EFT_FileDetail_VendAddress.BeneName   ||  mSKS_EFT_FileDetail_VendAddress.BeneAddr   ||
            mSKS_EFT_FileDetail_VendAddress.BeneAddr2 || mSKS_EFT_FileDetail_VendAddress.BeneCity || mSKS_EFT_FileDetail_VendAddress.BeneZipPostal)
        {
            //1     Tag
            sb.Append(':59:');
    
            //2     Hyphen "/"
            sb.Append('/');

            //3     Beneficiary account number
            if(mSKS_EFT_FileDetail.DepBankIBAN !="")
            {
                sb.Append(subStr(mSKS_EFT_FileDetail.DepBankIBAN, 1, 34));
            }
            else
            {
                sb.Append(subStr(mSKS_EFT_FileDetail.DepBankAcct, 1, 34));
            }
            sb.AppendLine();

            //3     Beneficiary name
            sb.Append(subStr(strUpr(mSKS_EFT_FileDetail_VendAddress.BeneName), 1, 35));
            
            sb.AppendLine();
            //4     Beneficiary address
            sb.Append(subStr(strUpr(mSKS_EFT_FileDetail_VendAddress.BeneAddr), 1, 35));

            if(mSKS_EFT_FileDetail_VendAddress.BeneAddr2)
            {
                sb.AppendLine();
                //4     Beneficiary address
                sb.Append(subStr(strUpr(mSKS_EFT_FileDetail_VendAddress.BeneAddr2), 1, 35));
            }

            if(mSKS_EFT_FileDetail_VendAddress.BeneCity)
            {
                address = mSKS_EFT_FileDetail_VendAddress.BeneCity;
            }

            if(address && (mSKS_EFT_FileDetail_VendAddress.BeneState || mSKS_EFT_FileDetail_VendAddress.BeneZipPostal))
            {              

                if(mSKS_EFT_FileDetail_VendAddress.BeneState)
                {
                    address = address + ',' + mSKS_EFT_FileDetail_VendAddress.BeneState;
                }

                if(mSKS_EFT_FileDetail_VendAddress.BeneZipPostal)
                {
                    address = address + ' ' + mSKS_EFT_FileDetail_VendAddress.BeneZipPostal;
                }
            }

            if(address)
            {
                sb.AppendLine();
                sb.Append(subStr(strUpr(address), 1, 35));
            }
        }
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_70</Name>
				<Source><![CDATA[
    /// <summary>
    /// REC_70 method
    /// </summary>
    private void rec_70()
    {
        str invNum;
        int stringlen, spaceLoc;
    
        invNum = this.getInvoiceNbrs();
    
        if(invNum != '')
        {
            invNum = 'INVOICES ' + invNum;
    
            stringlen = strLen(invNum);
    
            if (stringlen > 35)
            {
                spaceLoc = strScan(invNum, ' ', 36, -36);
    
                if (spaceLoc > 0)
                {
                    this.fileWrite(':70:' + subStr(invNum, 1, spaceLoc - 1));
                }
                else
                {
                    this.fileWrite(subStr(invNum, 1, 35));
                    spaceLoc = 35;
                }
    
                if (spaceLoc != stringlen)
                {
                    invNum = subStr(invNum, spaceLoc + 1, stringlen);
                }
                else
                {
                    invNum = '';
                }
    
                stringlen = strLen(invNum);
    
                if (stringlen > 35)
                {
                    spaceLoc = strScan(invNum, ' ', 36, -36);
    
                    if (spaceLoc > 0)
                    {
                        this.fileWrite(subStr(invNum, 1, spaceLoc - 1));
                    }
                    else
                    {
                        this.fileWrite(subStr(invNum, 1, 35));
                        spaceLoc = 35;
                    }
    
                    if (spaceLoc != stringlen)
                    {
                        invNum = subStr(invNum, spaceLoc + 1, stringlen);
                    }
                    else
                    {
                        invNum = '';
                    }
    
                    stringlen = strLen(invNum);
    
                    if (stringlen > 35)
                    {
                        spaceLoc = strScan(invNum, ' ', 36, -36);
    
                        if (spaceLoc > 0)
                        {
                            this.fileWrite(subStr(invNum, 1, spaceLoc - 1));
                        }
                        else
                        {
                            this.fileWrite(subStr(invNum, 1, 35));
                        }
                    }
                    else if(stringlen != 0)
                    {
                        this.fileWrite(subStr(invNum, 1, 35));
                    }
                }
                else if(stringlen != 0)
                {
                    this.fileWrite(subStr(invNum, 1, 35));
                }
            }
            else
            {
                this.fileWrite(':70:' + subStr(invNum, 1, 35));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceNbrs</Name>
				<Source><![CDATA[
    protected str getInvoiceNbrs()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str invString;
    
        select InvoiceNumber,InvoiceTransactionTxt from invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId;
    
        while(invSKS_EFT_FileDetail)
        {
            if(invSKS_EFT_FileDetail.InvoiceNumber == '')
            {
                // If no invoice number, go to next record
                next invSKS_EFT_FileDetail;
                continue;
            }
            sb.Append(invSKS_EFT_FileDetail.InvoiceNumber + ' ' + invSKS_EFT_FileDetail.InvoiceTransactionTxt);
    
            next invSKS_EFT_FileDetail;
    
            if(invSKS_EFT_FileDetail)
            {
                sb.Append(' ');
            }
        }
    
        invString = this.CharacterReplacement(sb.ToString());
        return invString;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
            join mSKS_EFT_FileDetail_BenBank
            join mSKS_EFT_FileDetail_Intermediary
            join mSKS_EFT_FileDetail_CreditParty
            join msKS_EFT_FileDetail_Instructions
            join mSKS_EFT_FileDetail_BankAccount
                order by mSKS_EFT_FileDetail.PaymentCompany,
                   mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_BenBank.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_Intermediary.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_CreditParty.RefRecId &&
                mSKS_EFT_FileDetail.RecId == msKS_EFT_FileDetail_Instructions.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_BankAccount.RefRecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>