<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_CITI_EDI820</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_CITI_EDI820 Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_US_CITI_EDI820 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220315';
        dataContractVersion = '1.0';
        conFormatID = ['US-CITI-EDI820'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'XXXXXXXXXX','Company Id','','',0,'US - CITIBANK - EDI820',0,'','','US-CITI-EDI820',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,1,'80',0,1,'','','',0,0,'','',0,'','',0,'','','3',1,0,0,0,0,'US-CITI-EDI820',0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-CITI-EDI820'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITI_EDI820();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITI_EDI820</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITI_EDI820()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'ACH - Prearranged Payment and Deposit (PPD)',1,'ACH-PPD','','ACH-PPD','TRADE PAY',0,'US-CITI-EDI820',0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'ACH - Cash Concentration and Disbursement (CCD)',1,'ACH-CCD','','ACH-CCD','TRADE PAY',0,'US-CITI-EDI820',0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'Wire - Freeform (FWT)',1,'FWT','','Wire-FREE','DIRECT PAY',0,'US-CITI-EDI820',0,1,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'Wire - Worldlink (WWT)',1,'WWT','','Wire-WLINK','DIRECT PAY',0,'US-CITI-EDI820',0,1,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check payment',1,'CHK','','CHK','TRADE PAY',0,'US-CITI-EDI820',0,1,0,1,1,0,0,0,0,1,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'ACH - Corporate Trade Exchange',1,'ACH-CTX','','ACH-CTX','TRADE PAY',0,'US-CITI-EDI820',0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-CITI-EDI820'):
                notesList = this.getNotesMetaData_US_CITI_EDI820();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITI_EDI820</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITI_EDI820()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITI-EDI820','ACH-CCD','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_CITI_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+ bank account. If field is blank, the bank account routing number will be used.:-BPR.10 Originating Company Identifier stored on EFT+ bank account > Account/company tab > Company Id field.:-BPR.14 Account number qualifier code is determined by the Bank account type on the Vendor Bank account.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITI-EDI820','ACH-PPD','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_CITI_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+ bank account. If field is blank, the bank account routing number will be used.:-BPR.10 Originating Company Identifier stored on EFT+ bank account > Account/company tab > Company Id field.:-BPR.14 Account number qualifier code is determined by the Bank account type on the Vendor Bank account.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITI-EDI820','Wire-FREE','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_CITI_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-BPR.10 Originating Company Identifier stored on EFT+ bank account > Account/company tab > Company Id field.:Vendor Bank account Routing number type must be set CH for CHIPS. Otherwise it will default to ABA.:-REF*54.02 E-mail is set on Vendor eBanking details.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITI-EDI820','Wire-WLINK','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_CITI_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-BPR.10 Originating Company Identifier stored on EFT+ bank account > Account/company tab > Company Id field.:--Vendor Bank SWIFT code is required for payments in Euros, and for CAD payments processed through Canada.:-REF*54.02 E-mail is set on Vendor eBanking details.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITI-EDI820','CHK','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats.Import the data with the supplied EDI820_US_CITI_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+ bank account. If field is blank, the bank account routing number will be used.:-BPR.10 Originating Company Identifier stored on EFT+ bank account > Account/company tab > Company Id field']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITI-EDI820','ACH-CTX','-ISA, IEA, GS and GE data needs setup using EDI820 subscreen on EFT+ file formats.Import the data with the supplied EDI820_US_CITI_EDI820.csv.Review any fields with a Value type of Fixed value and verify data in the Fixed value field.::-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+ bank account. If field is blank, the bank account routing number will be used.::-BPR.10 Originating Company Identifier stored on EFT+ bank account > Account/company tab > Company Id field.::-BPR.14 Account number qualifier code is determined by the Bank account type on the Vendor Bank account.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-CITI-EDI820'):
                validationsList = this.getValidationsMetaData_US_CITI_EDI820();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_CITI_EDI820</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_CITI_EDI820()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','ACH-CCD','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Name ','Ordering Party Name','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','ACH-CCD','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 DFI ID Number','DFI ID Number',0,'RegistrationNum','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','ACH-PPD','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Name ','Ordering Party Name','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','ACH-PPD','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 DFI ID Number','DFI ID Number',0,'RegistrationNum','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-FREE','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','BPR*.13 DFI ID Number','DFI ID Number','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-FREE','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','BPR*.13 DFI ID Number','DFI ID Number','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-FREE','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Name ','Ordering Party Name','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-FREE','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,1,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-FREE','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE Address Information','Payee Address','16','WBeneAddr','','',1,1,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-FREE','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE  Address Information','Payee Address','16','WBeneAddr2','','',1,1,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-FREE','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','N3*PE City Address','Vendor city','16','WBeneCity','','',1,1,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-FREE','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','N3*PE State or Province Code','State or Province Code ','16','WBeneState','','',1,1,1,1,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-FREE','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','N3*PE Postal Code','Postal Code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-FREE','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','N3*PE Country Code','Country Code','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','CHK','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Name ','Ordering Party Name','15','WOrdPartyName','','',0,0,1,'40',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','CHK','','Name','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Remittance Location','N1*PE.02 Payee Name','Payee Name','12','Name','','',0,0,1,'40',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','CHK','','Address','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N2*PE.01 and N3*PE  Address Information','Address','10','Street','','',0,1,1,'80',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','CHK','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 DFI ID Number','DFI ID Number',0,'RegistrationNum','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-WLINK','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','BPR*.13 DFI ID Number','DFI ID Number','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-WLINK','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','BPR*.13 DFI ID Number','DFI ID Number','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-WLINK','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Name ','Ordering Party Name','15','WOrdPartyName','','',0,0,1,'40',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-WLINK','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,1,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-WLINK','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE Address Information','Payee Address','16','WBeneAddr','','',1,1,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-WLINK','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE  Address Information','Payee Address','16','WBeneAddr2','','',1,1,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-WLINK','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','N3*PE City Address','Vendor city','16','WBeneCity','','',1,1,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-WLINK','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','N3*PE State or Province Code','State or Province Code ','16','WBeneState','','',1,1,1,1,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-WLINK','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','N3*PE Postal Code','Postal Code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-WLINK','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','N3*PE Country Code','Country Code','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-WLINK','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Name','N1*BK.02 Beneficiary Bank Name','Beneficiary Bank Name','16','WBenBankName','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-WLINK','','Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Address','N1*BK > N3 > 01 and 02 Beneficiary bank address > ','Beneficiary bank address','16','WBenBankAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-WLINK','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','N1*BK > N4 > Beneficiary bank City','Beneficiary bank City','16','WBenBankCity','','',1,0,1,'19',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-WLINK','','Swift code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','N1*IK > Intermediary Swift number','Intermediary Swift number ','16','WIntBankSwift','','',1,1,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-WLINK','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','N1*IK > Intermediary Bank Id','Intermediary Bank Id','16','WIntBankId','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-WLINK','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Name','N1*IK > N2 Intermediary Bank Name','Intermediary Bank Name','16','WIntBankName','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-WLINK','','Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address','N1*IK > N3 Intermediary Bank Address 1','Intermediary Bank Address','16','WIntBankAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-WLINK','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address 2','N1*IK > N3 Intermediary Bank Address 2','Intermediary Bank Address 2','16','WIntBankAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-WLINK','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > City','N1*IK > N4 > 01 City Address','City Address','16','WIntBankCity','','',1,1,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','Wire-WLINK','','Country/Region ','TAS >x Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','N1*IK > N4 > 04 Intermediary Bank Country','Intermediary Bank Country','16','WIntBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','ACH-CTX','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','BPR*.13 DFI ID Number','DFI ID Number','9','RegistrationNum','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','ACH-CTX','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','BPR* 15 Account Number','Account Number related to vendor','9','AccountNum','','',1,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','ACH-CTX','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Name ','Ordering Party Name','15','WOrdPartyName','','',0,0,1,'40',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','ACH-CTX','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,1,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','ACH-CTX','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE Address Information','Payee Address','16','WBeneAddr','','',1,1,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','ACH-CTX','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE  Address Information','Payee Address','16','WBeneAddr2','','',1,1,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','ACH-CTX','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','N3*PE City Address','Vendor city','16','WBeneCity','','',1,1,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','ACH-CTX','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','N3*PE State or Province Code','State or Province Code ','16','WBeneState','','',1,1,1,1,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','ACH-CTX','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','N3*PE Postal Code','Postal Code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITI-EDI820','ACH-CTX','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','N3*PE Country Code','Country Code','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITI-EDI820','US-CITI-EDI820','FormatValidations','CHK','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITI-EDI820','US-CITI-EDI820','FormatValidations','CHK','15','W02']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITI-EDI820','US-CITI-EDI820','FormatValidations','Wire-WLINK','15','W03']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch(_formatID)
        {
            case ('US-CITI-EDI820'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITI_EDI820();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITI_EDI820</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITI_EDI820()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITI-EDI820','US-CITI-EDI820','CheckFromCode','Check form code',1,'CheckFromCode','',0,'','UUUUU','REF*02 > Check form code']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITI-EDI820','US-CITI-EDI820','SpclHandlingCd','Special handling code',1,'SpclHandlingCd','',0,'','XXXXX','REF*03 > Special handling code']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITI-EDI820','US-CITI-EDI820','WorldlinkClientID','Worldlink Client ID',1,'WorldlinkClientID','',0,'','XXXXXXXXX','BPR*11 > Worldlink Client ID']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('US-CITI-EDI820'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('CheckFromCode', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('SpclHandlingCd', gSKS_EFT_Bank.W02);
                }
                if(gSKS_EFT_Bank.W03)
                {
                    this.updateBankFields('WorldlinkClientID', gSKS_EFT_Bank.W03);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>