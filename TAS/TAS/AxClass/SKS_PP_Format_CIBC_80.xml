<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_CIBC_80</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_CIBC_80 Extends SKS_PP_Format_BankGroup
{
    str transitnum;
    str bankaccountnum;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtFormatHeader</Name>
				<Source><![CDATA[
    protected str txtFormatHeader()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;

        //Record type ID
        sb.Append(@'\\');

        //Filler
        sb.Append(' ');

        //File type
        sb.Append(SKS_PP_StringFormats::strFill(8,'AR',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        transitnum = SKS_PP_StringFormats::strRight(mSKS_PP_FileDetail.BnkBankTransit, 5);

        bankaccountnum = mSKS_PP_FileDetail.BnkBankAcct;

        //Legacy system identifier
        sb.Append(SKS_PP_StringFormats::strFill(5, SKS_PP_StringFormats::strRight(mSKS_PP_FileDetail.BnkBankTransit, 5), SKS_PP_FillCharacter::Zero, SKS_PP_Fillside::Left) + SKS_PP_StringFormats::strFill(5, '', SKS_PP_FillCharacter::Zero, SKS_PP_Fillside::Left)+ SKS_PP_StringFormats::strFill(12, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left) + subStr(mSKS_PP_File.FileNbr,strLen(mSKS_PP_File.FileNbr), -3) + SKS_PP_StringFormats::strFill(5, '', SKS_PP_FillCharacter::Space, SKS_PP_Fillside::Right));


        //Filler
        sb.Append(' ');

        // Record length
        sb.Append('0080');

        // PROD indicator
        sb.Append('PROD');

        //Filler.
        sb.Append(SKS_PP_StringFormats::strFill(30,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupHeader</Name>
				<Source><![CDATA[
    protected str txtGroupHeader()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
        //Bank Transit Number
        sb.Append(SKS_PP_StringFormats::strFill(5, SKS_PP_StringFormats::strRight(mSKS_PP_FileDetail.BnkBankTransit, 5), SKS_PP_FillCharacter::Zero, SKS_PP_Fillside::Left));

        // Bank Account Number
        sb.Append(SKS_PP_StringFormats::strFill(12, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // File Creation Date
        sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())));
        
        //Filler.
        sb.Append(SKS_PP_StringFormats::strFill(20,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // Record ID
        sb.Append('H');

        //Filler.
        sb.Append(SKS_PP_StringFormats::strFill(34,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
        //Bank Transit Number
        sb.Append(SKS_PP_StringFormats::strFill(5, SKS_PP_StringFormats::strRight(mSKS_PP_FileDetail.BnkBankTransit, 5), SKS_PP_FillCharacter::Zero, SKS_PP_Fillside::Left));

        // Bank Account Number
        sb.Append(SKS_PP_StringFormats::strFill(12, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // Issue Date
        sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())));
        
        // Cheque Serial Number
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // Cheque Amount
        sb.Append(SKS_PP_StringFormats::strMoney(mSKS_PP_FileDetail.ChkCuryAmt, 10));

        if(mSKS_PP_FileDetail.ChkType == SKS_PP_ChequeType::Cheque)
        {
            // Record ID
            sb.Append('D');

            //Filler.
            sb.Append(SKS_PP_StringFormats::strFill(3,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            // Short Payee Name
            sb.Append(SKS_PP_StringFormats::strFill(15, mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            //Filler.
            sb.Append(SKS_PP_StringFormats::strFill(16,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            // Record ID
            sb.Append('V');

            //Filler.
            sb.Append(SKS_PP_StringFormats::strFill(34,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        return sb.ToString();

    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupTrailer</Name>
				<Source><![CDATA[
    protected str txtGroupTrailer()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
        //Bank Transit Number
        sb.Append(SKS_PP_StringFormats::strFill(5, transitnum, SKS_PP_FillCharacter::Zero, SKS_PP_Fillside::Left));

        // Bank Account Number
        sb.Append(SKS_PP_StringFormats::strFill(12, bankaccountnum, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // Issue Date
        sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())));
        
        //Filler.
        sb.Append(SKS_PP_StringFormats::strFill(20,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // Record ID
        sb.Append('T');

        //Filler.
        sb.Append(SKS_PP_StringFormats::strFill(34,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>