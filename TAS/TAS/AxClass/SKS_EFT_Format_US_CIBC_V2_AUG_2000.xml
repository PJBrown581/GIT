<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_CIBC_V2_AUG_2000</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_CIBC_V2_AUG_2000 extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_US_CIBC_V2_AUG_2000 extends SKS_EFT_Format
{
    #define.FormatVersion('20220628')
    int         mBatchCount;
    int         mBatchEntryCount;
    int         mDetailCount;
    PaymSpec    mPrevPaymSpec;
    date        mPrevEffectiveDate;
    AmountMST   mBatchAmt;

    #define.IAT('PMT-IAT')
    #define.AP460('AP-460')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        // Get SKS_EFT_Bank
        this.getSKS_EFT_Bank();
    
        //Get/Set Sequence Number
        this.setSeqNumber(mSKS_EFT_FileFormat.NextSequenceNumber);
    
        if(mSeqNumber > 9999)
        {
            this.setSeqNumber(1);
        }
    
        // Set Batch count and amount
        mBatchCount = 0;
        mBatchAmt = 0;
    
        // File Header
        this.rec_FileHeader();
    
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();
    
            if(mPrevPaymSpec != mSKS_EFT_FileDetail.PaymSpec || mPrevEffectiveDate != mSKS_EFT_FileDetail.EffectiveDate )
            {
                this.getSKS_EFT_FileFormatPaymSpec();
                this.rec_BatchHeader();
                mPrevPaymSpec = mSKS_EFT_FileDetail.PaymSpec;
                mPrevEffectiveDate = mSKS_EFT_FileDetail.EffectiveDate;
            }
    
            //Detail Record
            this.rec_Detail();
    
            next mSKS_EFT_FileDetail;
    
            if(mPrevPaymSpec != mSKS_EFT_FileDetail.PaymSpec || mPrevEffectiveDate != mSKS_EFT_FileDetail.EffectiveDate)
            {
                //Batch Trailer
                this.rec_BatchTrailer();
            }
        }
    
        this.rec_FileTrailer();
    
        //Increment Sequence Number
        mSeqNumber++;
        this.updateSequence();
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_BatchHeader</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Position    Size
    // 1    Record Type ID                                             1       1
    // 2    Filler                                                2 - 47      46
    // 3    Transaction Type                                     48 - 50       3
    // 4    Descriptive Statement                                51 - 60      10
    // 5    Value Date                                           61 - 66       6
    // 6    Filler                                               67 - 80      14
    boolean rec_BatchHeader()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
        mBatchCount++;
    
        // 1    Record Type ID                                             1       1
        sb.Append('5');
    
        // 2    Filler                                                2 - 47      46
        sb.Append(SKS_PP_StringFormats::strFill(46,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 3    Transaction Type                                     48 - 50       3
        switch(mSKS_EFT_FileDetail.PaymSpec)
        {
            case #IAT:
                sb.Append(SKS_PP_StringFormats::strFill(3,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
                break;
            case #AP460:
                sb.Append('460');
                break;
        }
    
        // 4    Descriptive Statement                                51 - 60      10
        sb.Append(SKS_PP_StringFormats::strFill(10, strupr(mSKS_EFT_FileFormatPaymSpec.PaymSpecName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 5    Value Date                                           61 - 66       6
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(mSKS_EFT_FileDetail.EffectiveDate));
    
        // 6    Filler                                               67 - 80      14
        sb.Append(SKS_PP_StringFormats::strFill(14,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_BatchTrailer</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Position    Size
    // 1    Record Type ID                                             1       1
    // 2    Transaction Type                                      2 -  4       3
    // 3    Batch Entry Count                                     5 - 10       6
    // 4    Hash Total                                           11 - 20      10
    // 5    Filler                                               21 - 40      20
    // 6    Entry Dollar Total                                   41 - 52      12
    // 7    Filler                                               53 - 80      28
    boolean rec_BatchTrailer()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        // 1    Record Type ID                                             1       1
        sb.Append('7');
    
        // 2    Transaction Type                                      2 -  4       3
        switch(mPrevPaymSpec)
        {
            case #IAT:
                sb.Append(SKS_PP_StringFormats::strFill(3,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
                break;
            case #AP460:
                sb.Append('460');
                break;
        }
    
        // 3    Batch Entry Count                                     5 - 10       6                                                   3       1
        sb.Append(SKS_PP_StringFormats::strFill(6,int2str(mBatchEntryCount),SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 4    Hash Total                                           11 - 20      10
        sb.Append(SKS_PP_StringFormats::strFill(10,'',SKS_PP_FillCharacter::Nine,SKS_PP_FillSide::Left));
    
        // 5    Filler                                               21 - 40      20
        sb.Append(SKS_PP_StringFormats::strFill(20,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 6    Entry Dollar Total                                   41 - 52      12
        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(mBatchAmt), 12));
    
        // 7    Filler                                               53 - 80      28
        sb.Append(SKS_PP_StringFormats::strFill(28,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //Reset Batch Entry count and Batch amt
        mBatchEntryCount = 0;
        mBatchAmt = 0;
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Detail</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Position    Size
    // 1    Record Type ID                                             1       1
    // 2    Credit/Debit Indicator                                     2       1
    // 3    Filler                                                     3       1
    // 4    Institutional ID                                      4 -  7       4
    // 5    Institutional Branch No.                              8 - 12       5
    // 6    Payee/Payor's Account No.                            13 - 24      12
    // 7    Filler                                               25 - 29       5
    // 8    Amount                                               30 - 39      10
    // 9    Cross Reference No.                                  40 - 52      13
    //10    Payee/Payor's Name                                   53 - 74      22
    //11    Filler                                               75 - 80       6
    boolean rec_Detail()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
        mBatchEntryCount++;
        mDetailCount++;
    
        // 1    Record Type ID                                             1       1
        sb.Append('6');
    
        // 2    Credit/Debit Indicator                                     2       1
        if(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur > 0)
        {
            sb.Append('D');
        }
        else
        {
            sb.Append('C');
        }
    
        // 3    Filler                                                     3       1
        sb.Append(SKS_PP_StringFormats::strFill(1,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 4    Institutional ID                                      4 -  7       4
        // 5    Institutional Branch No.                              8 - 12       5                                   4 -  7       4
        sb.Append(SKS_PP_StringFormats::strFill(9,mSKS_EFT_FileDetail.DepBankTransit,SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 6    Payee/Payor's Account No.                            13 - 24      12
        sb.Append(SKS_PP_StringFormats::strFill(12,mSKS_EFT_FileDetail.DepBankAcct,SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 7    Filler                                               25 - 29       5
        sb.Append(SKS_PP_StringFormats::strFill(5,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 8    Amount                                               30 - 39      10
        mBatchAmt += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur), 10));
    
        // 9    Cross Reference No.                                  40 - 52      13
        sb.Append(SKS_PP_StringFormats::strFill(13,this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference),SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //10    Payee/Payor's Name                                   53 - 74      22
        sb.Append(SKS_PP_StringFormats::strFill(22,this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneName),SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //11    Filler                                               75 - 80       6
        sb.Append(SKS_PP_StringFormats::strFill(6,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_FileHeader</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Position    Size
    // 1    Record Type ID                                             1       1
    // 2    Filler                                                2 -  3       2
    // 3    Receiving Data Centre                                 4 -  8       5
    // 4    Filler                                                9 - 13       5
    // 5    Originator Number                                    14 - 23      10
    // 6    File Creation Date                                   24 - 29       6
    // 7    File Creation Number                                 30 - 33       4
    // 8    Filler                                                    34       1
    // 9    Bank No. (Inst. ID)                                  35 - 38       4
    //10    Branch No.                                           39 - 43       5
    //11    Account No.                                          44 - 55      12
    //12    Filler                                               56 - 57       2
    //13    Originator's Name                                    58 - 72      15
    //14    Filler                                                    73       1
    //15    Currency Indicator                                   74 - 76       3
    //16    Filler                                               77 - 80       4
    boolean rec_FileHeader()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        //Reset previous Payment Spec
        mprevPaymSpec = '';
    
        // 1    Record Type ID                                             1       1
        sb.Append('1');
    
        // 2    Filler                                                2 -  3       2
        sb.Append(SKS_PP_StringFormats::strFill(2,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 3    Receiving Data Centre                                 4 -  8       5
        sb.Append(SKS_PP_StringFormats::strFill(5,this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RcvngDataCentre', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank)),SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 4    Filler                                                9 - 13       5
        sb.Append(SKS_PP_StringFormats::strFill(5,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 5    Originator Number
        sb.Append(SKS_PP_StringFormats::strFill(10,mSKS_EFT_Bank.WOrdPartyId,SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 6    File Creation Date                                   24 - 29       6
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));
    
        // 7    File Creation Number                                 30 - 33       4
        sb.Append(SKS_PP_StringFormats::strFill(4,int2str(mSeqNumber),SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 8    Filler                                                    34       1
        sb.Append(SKS_PP_StringFormats::strFill(1,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Left));
    
        // 9    Bank No. (Inst. ID)                                  35 - 38       4
        //10    Branch No.                                           39 - 43       5
        sb.Append(SKS_PP_StringFormats::strFill(9,mSKS_EFT_FileDetail.BankBankTransit,SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //11    Account No.                                          44 - 55      12
        sb.Append(SKS_PP_StringFormats::strFill(12,mSKS_EFT_FileDetail.BankBankAcct,SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //12    Filler                                               56 - 57       2
        sb.Append(SKS_PP_StringFormats::strFill(2,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //13    Originator's Name                                    58 - 72      15
        sb.Append(SKS_PP_StringFormats::strFill(15,this.CharacterReplacement(mSKS_EFT_Bank.WOrdPartyName),SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //14    Filler                                                    73       1
        sb.Append(SKS_PP_StringFormats::strFill(1,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //15    Currency Indicator                                   74 - 76       3
        sb.Append(SKS_PP_StringFormats::strFill(3,mSKS_EFT_FileDetail.PaymentCurrencyCode,SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //16    Filler                                               77 - 80       4
        sb.Append(SKS_PP_StringFormats::strFill(4,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Left));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_FileTrailer</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Position    Size
    // 1    Record Type ID                                             1       1
    // 2    Batch Count                                           2 -  7       6
    // 3    Detail Count                                          8 - 13       6
    // 4    Filler                                               14 - 80      67
    boolean rec_FileTrailer()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        // 1    Record Type ID                                             1       1
        sb.Append('9');
    
        // 2    Batch Count                                           2 -  7       6
        sb.Append(SKS_PP_StringFormats::strFill(6,int2str(mBatchCount),SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 3    Detail Count                                          8 - 13       6
        sb.Append(SKS_PP_StringFormats::strFill(6,int2str(mDetailCount),SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 4    Filler                                               14 - 80      67
        sb.Append(SKS_PP_StringFormats::strFill(67,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSequence</Name>
				<Source><![CDATA[
    private void updateSequence()
    {
        SKS_EFT_FileFormat lSKS_EFT_FileFormat;
        ;
    
        select firstOnly forUpdate lSKS_EFT_FileFormat where lSKS_EFT_FileFormat.FormatId == mSKS_EFT_FileFormat.FormatId;
    
        if(lSKS_EFT_FileFormat)
        {
            lSKS_EFT_FileFormat.NextSequenceNumber = mSeqNumber;
            lSKS_EFT_FileFormat.update();
        }
    
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>