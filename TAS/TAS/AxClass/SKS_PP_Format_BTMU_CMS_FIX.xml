<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_BTMU_CMS_FIX</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_BTMU_CMS_FIX Extends SKS_PP_Format_BankGroup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
        // Bank of Tokyo - Mitsubishi UFJ, Ltd.
        // CMS - Fixed Field format
    
    // Pos       Len     Description
        // 01-08     8       Issue Date - (YYYYMMDD)
        // 09-18     10      Account
        // 19-19     1       Issue Type - A (issue), V (void)
        // 20-29     10      Starting Check Number
        // 30-39     10      End Serial (blank)
        // 40-44     5       Register (blank)
        // 45-58     14      Amount
        // 59-68     10      Payee (Vendor name)
        // 69-128    60      Payee 1 (Vendor name)
        // 129-188   60      Payee 2 (VendTable.Street)
    protected str txtDetail()
    {
        // Note that the Working Table has records at the Voucher level (used by EFT as well)
        // They are summarized and coded - so that you can easily get just the check records
        // See the Report | Record Selection filter -
        // These filters will give the Check Records only
        // {SKS_PP_FileDetail.ComputerName} = RIPARAM("ComputerName")  - File can be used by multiple computers at once
        // and {SKS_PP_FileDetail.RecordSummary} <> "X"                - "X" records need to be skipped over
        // and {SKS_PP_FileDetail.FileType} = "P"                      - "P" records are for Positive Pay
    
        // Below only want records with RecSection = "20P" (payment record)
        // RecSection - defines sections:
        // 10H - Header
        // 20P - Payments
        // RecType: (within Payments)
        // 10V - Voucher
        // 20P - PreNotes (should not be any with Pos Pay)
        // 30B - Blockfill
        // 40T - Trailer
    
        // The field with the summarized information for a check is RECORDSUMAMT (see below)
    
        Str Amt;
        Str IssueType;
        Int Mult;
        VendTable vendtable;
        DirPartyNamePrimaryAddressView DirPartyNamePrimaryAddressView;
        Container company;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        // Get VendTable information
        company = [mSKS_PP_FileDetail.ChkCpnyId];
        select firstonly crossCompany:company Street from DirPartyNamePrimaryAddressView join vendtable where
        DirPartyNamePrimaryAddressView.Party == vendtable.Party &&
        vendtable.AccountNum == mSKS_PP_FileDetail.VendorAccount;
    
        // Convert negative void numbers to positives
        Mult = 1;
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            IssueType = 'V';
        }
        else
        {
            IssueType = 'A';
        }
    
        Amt = SKS_PP_StringFormats::strFill(14, num2str(mSKS_PP_FileDetail.ChkCuryAmt,0,2,1,0), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right);
    
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(IssueType);
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(5, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(Amt);
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(60, mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(60, DirPartyNamePrimaryAddressView.Street, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>