<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_ZA_ABSA_SWIFT_MT101</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_ZA_ABSA_SWIFT_MT101 extends  SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_ZA_ABSA_SWIFT_MT101 extends  SKS_EFT_Format
{
    #define.FormatVersion('20220502')
    #define.LCL_PMT('LCL-PMT')
    #define.CB_PMT('CB-PMT')

    BankAccountTable mBankAccountTable;
    AmountMST mPaymentAmount;
    SKS_EFT_SequenceNumber  mSequenceNumber; 
    real numOfOrders;
    boolean firstPayment = true;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        // Get sequence number
        this.getSequence();

        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();

            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            // Get Bank account
            if(mBankAccountTable.AccountID != mSKS_EFT_FileDetail.BankAccountId)
            {
                // Get SKS_EFT_Bank
                this.getSKS_EFT_Bank();
    
                // Get Bank account
                mBankAccountTable = BankAccountTable::find(mSKS_EFT_FileDetail.BankAccountId);
            }   
            
            this.rec_HeaderInfo();
            this.rec_20();
            this.rec_28D();
            this.rec_50();
            this.rec_30();
            this.rec_21();
            this.rec_32B();
            this.rec_57A();
            this.rec_59A();           
            this.rec_70();
            this.rec_71A();

            next mSKS_EFT_FileDetail;
        }

        // Increment sequence number
        this.incrementSequenceNumber();

        // Set sequence number
        this.setSequence();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSequence</Name>
				<Source><![CDATA[
    private void setSequence()
    {
        SKS_EFT_FileFormat sks_eft_fileformat;
        ;

        select firstOnly forUpdate sks_eft_fileformat
        where sks_eft_fileformat.FormatId == mSKS_EFT_FileFormat.FormatId;

        if(sks_eft_fileformat)
        {
            sks_eft_fileformat.NextSequenceNumber = mSequenceNumber;
            sks_eft_fileformat.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSequence</Name>
				<Source><![CDATA[
    private void getSequence()
    {
        if(mSKS_EFT_FileFormat)
        {
            //Get Next Sequence Number
            mSequenceNumber = mSKS_EFT_FileFormat.NextSequenceNumber;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>incrementSequenceNumber</Name>
				<Source><![CDATA[
    private void incrementSequenceNumber()
    {
        if(mSequenceNumber >= 9999 || mSequenceNumber == 0)
        {
            mSequenceNumber = 1;
        }
        else
        {
            mSequenceNumber++;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_HeaderInfo</Name>
				<Source><![CDATA[
    boolean rec_HeaderInfo()
    {
        str value, headerblock;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        //      BASIC HEADER BLOCK
        sb.Append('{1:F01');

        sb.Append(subStr(strUpr(mBankAccountTable.SWIFTNo), 1, 12));
    
        sb.Append('XXXX');

        sb.Append(SKS_PP_StringFormats::strFill(6,num2str(mSequenceNumber,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        sb.Append('}');

        //       APPLICATION HEADER BLOCK
        sb.Append('{2:I101');

        headerblock = SKS_EFT_Format::getCodelookupvalue('AppicationHeaderBlk', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);
        sb.Append(headerblock);//SKS_VSTS_13877

        value = this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('MsgPriority', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId));
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #LCL_PMT)
        {
            sb.Append('N');
        }
        else
        {
            sb.Append(value);
        }

        //       USER HEADER BLOCK
        sb.Append('}{3:');

        sb.Append('{108:CBP}}');

        //       TEXT BLOCK
        sb.Append('{4:');

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_20</Name>
				<Source><![CDATA[
    boolean rec_20()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        sb.Append(':20:');
    
        //2     Transaction Reference Number / Client System Reference Number
        sb.Append(SKS_EFT_Format::getCodelookupvalue('ClientSysRefNum', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_28D</Name>
				<Source><![CDATA[
    boolean rec_28D()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        sb.Append(':28D:');
    
        //2     Customer Reference
        sb.Append('1/3');
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_50</Name>
				<Source><![CDATA[
    boolean rec_50()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        if(mSKS_EFT_Bank.WOrdPartyName || mSKS_EFT_Bank.WOrdPartyAddr || mSKS_EFT_Bank.WOrdPartyAddr2  ||  mSKS_EFT_Bank.WOrdPartyZipCode  ||
           mSKS_EFT_Bank.WOrdPartyCity ||  mSKS_EFT_Bank.WOrdPartyState  ||   mSKS_EFT_Bank.WOrdPartyCountryRegionId)
        {
            sb.Append(':50H:/');  
  
            sb.Append(mSKS_EFT_FileDetail.BankBankAcct);
            sb.AppendLine();
            
            sb.Append(subStr(strUpr(mSKS_EFT_Bank.WOrdPartyName), 1, 35));
            sb.AppendLine();

            sb.Append(subStr(strUpr(mSKS_EFT_Bank.WOrdPartyAddr + ',' + mSKS_EFT_Bank.WOrdPartyAddr2), 1, 35));
            sb.AppendLine();
        
            sb.Append(subStr(strUpr(mSKS_EFT_Bank.WOrdPartyZipCode + ',' + mSKS_EFT_Bank.WOrdPartyCity), 1, 35));
            sb.AppendLine();

            sb.Append(subStr(strUpr(mSKS_EFT_Bank.WOrdPartyState) + ',' + this.getLogisticsAddressCountryISO(mSKS_EFT_Bank.WOrdPartyCountryRegionId), 1, 35));

            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_30</Name>
				<Source><![CDATA[
    boolean rec_30()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        sb.Append(':30:');
    
        //2     Requested Execution Date / Value Date
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(mSKS_EFT_FileDetail.EffectiveDate));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_21</Name>
				<Source><![CDATA[
    boolean rec_21()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        sb.Append(':21:');
    
        //2     Transaction Reference
        sb.Append(strUpr(mSKS_EFT_FileDetail.PaymentReference));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_32B</Name>
				<Source><![CDATA[
    boolean rec_32B()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        //1     Tag
        sb.Append(':32B:');

        //2     Currency
        sb.Append(mSKS_EFT_FileDetail.PaymentCurrencyCode);

        //3     Transaction Amount
        sb.Append(num2str(this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur) ,0,2,2,0));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_57A</Name>
				<Source><![CDATA[
    boolean rec_57A()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        if(mSKS_EFT_FileDetail.DepSwiftNo)
        {
            sb.Append(':57A:');

            //      Beneficiary bank Swift address
            sb.Append(mSKS_EFT_FileDetail.DepSwiftNo);

            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_59A</Name>
				<Source><![CDATA[
    boolean rec_59A()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        if(mSKS_EFT_FileDetail.DepBankAcct  ||  mSKS_EFT_VendorPaym.WBeneName   ||  mSKS_EFT_VendorPaym.WBeneAddr   ||
           mSKS_EFT_VendorPaym.WBeneCity || mSKS_EFT_VendorPaym.WBeneCountryRegionId)
        {
            //1     Tag
            sb.Append(':59:');
    
            //2     Hyphen "/"
            sb.Append('/');

            //3     Beneficiary account number
            sb.Append(subStr(mSKS_EFT_FileDetail.DepBankAcct, 1, 35));
            sb.AppendLine(); 
            
            //4     Beneficiary name
            sb.Append(subStr(strUpr(mSKS_EFT_VendorPaym.WBeneName), 1, 35));            
            sb.AppendLine();

            //5     Beneficiary address
            sb.Append(subStr(strUpr(mSKS_EFT_VendorPaym.WBeneAddr + ',' + mSKS_EFT_VendorPaym.WBeneAddr2), 1, 35));
            sb.AppendLine();

            sb.Append(subStr(strUpr(mSKS_EFT_VendorPaym.WBeneZipPostal + ',' + mSKS_EFT_VendorPaym.WBeneCity), 1, 35));
            sb.AppendLine();

            sb.Append(subStr(strUpr(mSKS_EFT_VendorPaym.WBeneState) + ',' + this.getLogisticsAddressCountryISO(mSKS_EFT_VendorPaym.WBeneCountryRegionId), 1, 35));
        }
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_70</Name>
				<Source><![CDATA[
    boolean rec_70()
    {
        str invoiceDetails;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        invoiceDetails = strUpr(this.getInvoiceNbrs());
        if(invoiceDetails)
        {
            //1     Tag
            sb.Append(':70:');
    
            //2    Payment details
            sb.Append(subStr(invoiceDetails, 1, 35));

            if(strLen(invoiceDetails) > 35)
            {
                sb.AppendLine();
                sb.Append(subStr(invoiceDetails, 35, 35));
            }
            if(strLen(invoiceDetails) > 70)
            {
                sb.AppendLine();
                sb.Append(subStr(invoiceDetails, 70, 35));
            }
        
            if(strLen(invoiceDetails) > 105)
            {
                sb.AppendLine();
                sb.Append(subStr(invoiceDetails, 105, 35));
            }

            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_71A</Name>
				<Source><![CDATA[
    boolean rec_71A()
    {
        SKS_EFT_FileDetail tmpSKS_EFT_FileDetail;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();        
    
        //1     Tag
        sb.Append(':71A:');
    
        //2    cost accounting
        sb.Append('OUR');
        sb.AppendLine();

        sb.Append('-}');

        if(firstPayment)
        {
            select COUNT(InvoiceOrigAmountCur) from tmpSKS_EFT_FileDetail
                where
                    tmpSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                    tmpSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                    tmpSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary;

            numOfOrders = tmpSKS_EFT_FileDetail.InvoiceOrigAmountCur;

            firstPayment = false;
        }

        if(numOfOrders == 1)
        {
            sb.Append('{5:}}');
        }
        numOfOrders--;

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceNbrs</Name>
				<Source><![CDATA[
    protected str getInvoiceNbrs()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str invString;
    
        select InvoiceNumber from invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId;
    
        while(invSKS_EFT_FileDetail)
        {
            if(invSKS_EFT_FileDetail.InvoiceNumber == '')
            {
                // If no invoice number, go to next record
                next invSKS_EFT_FileDetail;
                continue;
            }
            sb.Append(invSKS_EFT_FileDetail.InvoiceNumber);
    
            next invSKS_EFT_FileDetail;
    
            if(invSKS_EFT_FileDetail)
            {
                sb.Append(', ');
            }
        }
    
        invString = this.CharacterReplacement(sb.ToString());
        return invString;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>