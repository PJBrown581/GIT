<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_CA_BMO_EDI820</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_CA_BMO_EDI820 Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_CA_BMO_EDI820 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220929';
        dataContractVersion = '1.0';
        conFormatID = ['CA-BMO-EDI820'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,1,1,0,0,'','','','',0,'XXXXXXXXXX','Company Id','','',1,'CA - Bank of Montreal - EDI820',0,'','','CA-BMO-EDI820',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,1,'','','',0,0,'','',0,'','',0,'','',0,1,0,0,0,0,'CA-BMO-EDI820',1,1,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('CA-BMO-EDI820'):
                paymSpecList = this.getPaymSpecsMetaData_CA_BMO_EDI820();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_CA_BMO_EDI820</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_CA_BMO_EDI820()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'ACH - Cash Concentration and Disbursement (CCD)',1,'ACH-CCD','','ACH-CCD','TRADE PAY',0,'CA-BMO-EDI820',0,0,0,1,1,0,0,0,1,0,1,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'ACH - Prearranged Payment and Deposit (PPD)',1,'ACH-PPD','','ACH-PPD','EXP REIMB',0,'CA-BMO-EDI820',0,0,0,1,1,0,0,0,1,0,1,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'ACH - Corporate Trade Exchange (CTX)',1,'ACH-CTX','','ACH-CTX','TRADE PAY',0,'CA-BMO-EDI820',0,0,0,1,1,0,0,0,1,0,1,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Wire - Fed (FWT)',1,'FWT','','Wire-FED','DIRECT PAY',0,'CA-BMO-EDI820',0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,1,0,'',0,0,0,0,0,'Wire - SWIFT (SWT)',1,'SWT','','Wire-SWIFT','DIRECT PAY',0,'CA-BMO-EDI820',0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'DIRECT PAY',0,0,0,0,0,'Corporate check - U.S. Mail',1,'CHK-PBC','','CHK-PBC','TRADE PAY',0,'CA-BMO-EDI820',0,0,1,1,1,0,0,0,0,1,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cheque Payment',1,'CHK','','CHK','TRADE PAY',0,'CA-BMO-EDI820',0,1,0,1,1,0,0,0,1,1,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Electronic Fund Transfer',1,'EFT-EDI','','EFT-EDI','TRADE PAY',0,'CA-BMO-EDI820',0,1,0,1,1,0,0,0,1,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire Payment',1,'WIRE','','WIRE','TRADE PAY',0,'CA-BMO-EDI820',0,1,0,1,1,0,0,0,1,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('CA-BMO-EDI820'):
                notesList = this.getNotesMetaData_CA_BMO_EDI820();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_CA_BMO_EDI820</Name>
				<Source><![CDATA[
    private container getNotesMetaData_CA_BMO_EDI820()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['CA-BMO-EDI820','ACH-CCD','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on the AR EFT+ or Direct debit file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-BPR.10 Originating Company Identifier is set on the AR EFT+ or Direct debit bank account > Account/company tab > Company Id field.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+/DD bank account if populated. Otherwise the Bank account routing number will be used.::AP:-N4*RB.02 and N4*RB.03 data is set on the Address information tab in Vendor Bank Account. ']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CA-BMO-EDI820','ACH-CTX','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on the AR EFT+ or Direct debit file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-BPR.10 Originating Company Identifier stored on the AR EFT+ or Direct debit bank account > Account/company tab > Company Id field.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+/DD bank account. If blank, the bank account routing number will be used.::AP:-N1*PE data stored on Beneficiary section of Vendor eBanking details > Payment specifications.:-N4*RB.02 and N4*RB.03 data is stored on the Address information tab in Vendor Bank Account.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CA-BMO-EDI820','ACH-PPD','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on the AR EFT+ or Direct debit file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-BPR.10 Originating Company Identifier stored on  the AR EFT+ or Direct debitbank account > Account/company tab > Company Id field.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+ bank account. If blank, the bank account routing number will be used.::AP:-N4*RB.02 and N4*RB.03 data is stored on the Address information tab in Vendor Bank Account. State and Postal code are required for US and Canada.::DD:-N4*RB.02 and N4*RB.03 data is set on the Address tab of Customer Bank Account.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CA-BMO-EDI820','CHK-PBC','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-If this is the East coast format enter a Y on the East coast format version (Y/N) field on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account.  The East coast format uses the check number in TRN.02 and the West coast format uses a different value.:-REF*PO will be included if Invoice description is set in AP Invoice journal line or if a Purchase order number is present.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CA-BMO-EDI820','Wire-FED','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-N1*PE data stored on Beneficiary section of Vendor eBanking details > Payment specifications.Use Advice field for split remittance.:-N4*RB.02 and N4*RB.03 data is stored on the Address information tab in Vendor Bank Account.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CA-BMO-EDI820','Wire-SWIFT','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-N1*PE data stored on Beneficiary section of Vendor eBanking details > Payment specifications.Use Advice field for split remittance.:-N4*RB.02 and N4*RB.03 data is stored on the Address information tab in Vendor Bank Account.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CA-BMO-EDI820','CHK','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:--N1*PE data stored on Beneficiary section of Vendor eBanking details > Payment specifications. Name is required.:--N1*PR data stored on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account. Name is required.:--BPR.10 Originating Company Identifier stored on EFT+ bank account > Account/company tab > Company Id field.:--BPR.07 & BPR.09 Payer: Institution and transit & Payer: Account Number stored in the Cash and Bank management > Bank account > General tab.:--BPR.13 (DFI) Id No  (Receiver) & BPR.15 Account Number are stored in the Vendor bank account section.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CA-BMO-EDI820','EFT-EDI','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:--N1*PE data stored on Beneficiary section of Vendor eBanking details > Payment specifications. Name is required.:--N1*PR data stored on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account. Name is required.:--BPR.10 Originating Company Identifier stored on EFT+ bank account > Account/company tab > Company Id field.:--BPR.07 & BPR.09 Payer: Institution and transit & Payer: Account Number stored in the Cash and Bank management > Bank account > General tab.:--BPR.13 (DFI) Id No  (Receiver) & BPR.15 Account Number are stored in the Vendor bank account section.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CA-BMO-EDI820','WIRE','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:--N1*PE data stored on Beneficiary section of Vendor eBanking details > Payment specifications. Name is required.:--N1*PR data stored on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account. Name is required.:--BPR.10 Originating Company Identifier stored on EFT+ bank account > Account/company tab > Company Id field.:--BPR.07 & BPR.09 Payer: Institution and transit & Payer: Account Number stored in the Cash and Bank management > Bank account > General tab.:--BPR.13 (DFI) Id No  (Receiver) & BPR.15 Account Number are stored in the Vendor bank account section.:--N1*RB data stored on Beneficiary bank tab of Vendor eBanking details > Payment specifications. Excluded if blank.:--N4*RB.01 city is required and is stored on Beneficiary bank tab of Vendor eBanking details > Payment specifications.:--N4*RB.02 and N4*RB.03 data is stored on the Address information tab in Vendor Bank Account. State and Postal code are required for US and Canada.:--N1*C1 & N1*04 Intermediary Agent name and Intermediary agent SWIFT code is stored in the Vendor eBanking details > Wire transfer/IAT - 2 section.:--N2*C2 & N2*04 Beneficiary bank name ang SWIFT code is stored in the Vendor bank account section.:--N3*C3 & N3*04 Payor bank name and SWIFT code is stored in the Cash and Bank management > Bank account section.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('CA-BMO-EDI820'):
                validationsList = this.getValidationsMetaData_CA_BMO_EDI820();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_CA_BMO_EDI820</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_CA_BMO_EDI820()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-CCD','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','ODFI Identification Number',0,'RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-CCD','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-CCD','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-CCD','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE.01 Address Information','Payee Address','16','WBeneAddr','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-CCD','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE.02 Address Information','Payee Address','16','WBeneAddr2','','',1,1,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-CCD','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','N4*PE.01 City Address','Vendor city','16','WBeneCity','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-CCD','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','N4*PE.02 State or Province Code','State or Province Code ','16','WBeneState','','',0,0,1,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-CCD','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','N4*PE.03 Postal Code','State or Province Code','16','WBeneZipPostal','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-CCD','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','N4*PE.04 Country Code','Country Code ','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-CCD','','Vendor bank Account Number','BPR*.15 Account Number','Vendor Account Number or IBAN','Account Number related to vendor','9','AccountNum','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-CTX','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-CTX','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-CTX','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE.01 Address Information','Payee Address','16','WBeneAddr','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-CTX','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE.02 Address Information','Payee Address','16','WBeneAddr2','','',1,1,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-CTX','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','N4*PE.01 City Address','Vendor city','16','WBeneCity','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-CTX','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','N4*PE.02 State or Province Code','State or Province Code ','16','WBeneState','','',0,0,1,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-CTX','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','N4*PE.03 Postal Code','State or Province Code','16','WBeneZipPostal','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-CTX','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','N4*PE.04 Country Code','Country Code ','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-CTX','','Vendor bank Account Number','BPR*.15 Account Number','Vendor Account Number','Account Number related to vendor','9','AccountNum','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-PPD','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','ODFI Identification Number',0,'RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-PPD','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-PPD','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-PPD','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE.01 Address Information','Payee Address','16','WBeneAddr','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-PPD','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE.02 Address Information','Payee Address','16','WBeneAddr2','','',1,1,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-PPD','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','N4*PE.01 City Address','Vendor city','16','WBeneCity','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-PPD','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','N4*PE.02 State or Province Code','State or Province Code ','16','WBeneState','','',0,0,1,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-PPD','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','N4*PE.03 Postal Code','State or Province Code','16','WBeneZipPostal','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-PPD','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','N4*PE.04 Country Code','Country Code ','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','ACH-PPD','','Vendor bank Account Number','BPR*.15 Account Number','Vendor Account Number ','Account Number related to vendor','9','AccountNum','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','CHK-PBC','','Address','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N3*PE.01 Address Information','Address','10','Street','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','CHK-PBC','','City','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.01 City Address','City Address','10','City','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','CHK-PBC','','State','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.02 State or Province Code','State or Province Code','10','State','','',0,0,1,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','CHK-PBC','','ZIP/Postal Code ','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.03 Postal Code','Postal Code','10','ZipCode','','',0,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','CHK-PBC','','Country/Region','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.04','Country related','10','CountryRegionId','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','CHK-PBC','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','CHK-PBC','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','Routing Number',0,'RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','Wire-FED','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','Wire-FED','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE.01 Address Information','Payee Address','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','Wire-FED','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE.02 Address Information','Payee Address','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','Wire-FED','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','Wire-FED','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Name','N1*RB.02 Receiving Bank Name','Receiving Bank Name','16','WBenBankName','','',1,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','Wire-FED','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','N4*RB.01 City Name','Bank City Name','16','WBenBankCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','Wire-FED','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','Routing Number',0,'RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','Wire-FED','','Vendor bank Account Number','BPR*.15 Account Number','Vendor Account Number ','Account Number related to vendor','9','AccountNum','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','Wire-SWIFT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','Wire-SWIFT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE.01 Address Information','Payee Address','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','Wire-SWIFT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE.02 Address Information','Payee Address','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','Wire-SWIFT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','Wire-SWIFT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Name','N1*RB.02 Receiving Bank Name','Receiving Bank Name','16','WBenBankName','','',1,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','Wire-SWIFT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','N4*RB.01 City Name','Bank City Name','16','WBenBankCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','Wire-SWIFT','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','Routing Number',0,'RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','Wire-SWIFT','','Vendor bank Account Number','BPR*.15 Account Number','Vendor Account Number ','Account Number related to vendor','9','AccountNum','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-BMO-EDI820','Wire-SWIFT','','Vendor SWIFT Number','BPR*.13 Account Number','Vendor Account Number ','Account Number related to vendor','9','SWIFTNo','','',0,0,1,'11',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData</Name>
				<Source><![CDATA[
    protected container getFormatLookupsMetaData(str _formatID)
    {
        container   formatLookupsList;

        //Metadata column names of data elements

        switch (_formatID)
        {
        }

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
            case ('CA-BMO-EDI820'):
                ControlFormatList = this.getControlFormatMetaData_CA_BMO_EDI820();
                break;

        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData_CA_BMO_EDI820</Name>
				<Source><![CDATA[
    private container getControlFormatMetaData_CA_BMO_EDI820()
    {
        container   ControlFormatList;

        ControlFormatList = ConIns(ControlFormatList,conLen(ControlFormatList)+1,['CA-BMO-EDI820','CA-BMO-EDI831','CA-BMO-EDI820 file authentication record']);

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>