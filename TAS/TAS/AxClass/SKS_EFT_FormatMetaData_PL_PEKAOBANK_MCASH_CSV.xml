<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_PL_PEKAOBANK_MCASH_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_PL_PEKAOBANK_MCASH_CSV
/// </summary>
class SKS_EFT_FormatMetaData_PL_PEKAOBANK_MCASH_CSV Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220608';
        dataContractVersion = '1.0';
        conFormatID = ['PL-PEKAOBANK-MCASH-CSV'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'PL - PEKAOBANK- MCASH - CSV',0,'','','PL-PEKAOBANK-MCASH-CSV',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',0,0,'',0,0,1,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'PL-PEKAOBANK-MCASH-CSV',1,1,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('PL-PEKAOBANK-MCASH-CSV'):
                paymSpecList = this.getPaymSpecsMetaData_PL_PEKAOBANK_MCASH_CSV();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_PL_PEKAOBANK_MCASH_CSV</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_PL_PEKAOBANK_MCASH_CSV()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Elixir- transfer order',1,'ELIXIR','','ELIXIR','TRADE PAY',0,'PL-PEKAOBANK-MCASH-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SORBNET largevalue order',1,'SORBNET','','SORBNET','TRADE PAY',0,'PL-PEKAOBANK-MCASH-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Split Payment',1,'SPLIT','','SPLIT','TRADE PAY',0,'PL-PEKAOBANK-MCASH-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Payement to US(Internal revenue office)',1,'PAYMTOUS','','PAYMTOUS','TRADE PAY',0,'PL-PEKAOBANK-MCASH-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('PL-PEKAOBANK-MCASH-CSV'):
                notesList = this.getNotesMetaData_PL_PEKAOBANK_MCASH_CSV();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_PL_PEKAOBANK_MCASH_CSV</Name>
				<Source><![CDATA[
    private container getNotesMetaData_PL_PEKAOBANK_MCASH_CSV()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['PL-PEKAOBANK-MCASH-CSV','SPLIT','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Vat number is stored in the Vendor master > Invoice and delivery tab > Tax exempt number.::-Payment description is stored in the Payment journal > Description field']);
        notesList = ConIns(notesList,conLen(notesList)+1,['PL-PEKAOBANK-MCASH-CSV','ELIXIR','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Payment description is stored in the Payment journal > Description field']);
        notesList = ConIns(notesList,conLen(notesList)+1,['PL-PEKAOBANK-MCASH-CSV','SORBNET','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Payment description is stored in the Payment journal > Description field']);
        notesList = ConIns(notesList,conLen(notesList)+1,['PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Payment description is stored in the Payment journal > Description field']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('PL-PEKAOBANK-MCASH-CSV'):
                validationsList = this.getValidationsMetaData_PL_PEKAOBANK_MCASH_CSV();
                break;

        }

        return validationsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_PL_PEKAOBANK_MCASH_CSV</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_PL_PEKAOBANK_MCASH_CSV()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SPLIT','','Bank routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Field 4 > Ordering partys bank routing number','Bank account number',0,'RegistrationNum','','',0,0,'1','8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SPLIT','','Bank IBAN','Cash and bank management > Select bank account > edit > General tab > Identification(group) > IBAN','Field 6 > Ordering partys bank account','Bank IBAN',0,'IBAN','','',0,0,1,'26',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SPLIT','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','Field 7 > Field 7 > Contractors bank account number','IBAN related to vendor','9','BankIBAN','','',0,0,1,'28',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SPLIT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Field 8 > Ordering partys name and address','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SPLIT','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','Field 8 > Ordering partys name and address','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SPLIT','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Field 8 > Ordering partys name and address','Address related to bank','15','WOrdPartyAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SPLIT','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','Field 8 > Ordering partys name and address','Address related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SPLIT','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Field 8 > Ordering partys name and address','City related to bank','15','WOrdPartyCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SPLIT','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','Field 8 > Ordering partys name and address','ZipCode related to bank','15','WOrdPartyZipCode','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SPLIT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Field 9 > Contractors name and address','Name related to Vendor','16','WBeneName','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SPLIT','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Field 9 > Contractors name and address','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SPLIT','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field 9 > Contractors name and address','Address related to vendor','16','WBeneAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SPLIT','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Field 9 > Contractors name and address','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SPLIT','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Field 9 > Contractors name and address','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SPLIT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Field 9 > Contractors name and address','Vendor city','16','WBeneCity','','',0,0,1,'35',0,0]);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','ELIXIR','','Bank routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Field 4 > Ordering partys bank routing number','Bank account number',0,'RegistrationNum','','',0,0,'1','8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','ELIXIR','','Bank IBAN','Cash and bank management > Select bank account > edit > General tab > Identification(group) > IBAN','Field 6 > Ordering partys bank account','Bank IBAN',0,'IBAN','','',0,0,1,'26',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','ELIXIR','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','Field 7 > Field 7 > Contractors bank account number','IBAN related to vendor','9','BankIBAN','','',0,0,1,'28',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','ELIXIR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Field 8 > Ordering partys name and address','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','ELIXIR','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','Field 8 > Ordering partys name and address','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','ELIXIR','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Field 8 > Ordering partys name and address','Address related to bank','15','WOrdPartyAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','ELIXIR','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','Field 8 > Ordering partys name and address','Address related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','ELIXIR','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Field 8 > Ordering partys name and address','City related to bank','15','WOrdPartyCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','ELIXIR','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','Field 8 > Ordering partys name and address','ZipCode related to bank','15','WOrdPartyZipCode','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','ELIXIR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Field 9 > Contractors name and address','Name related to Vendor','16','WBeneName','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','ELIXIR','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Field 9 > Contractors name and address','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','ELIXIR','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field 9 > Contractors name and address','Address related to vendor','16','WBeneAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','ELIXIR','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Field 9 > Contractors name and address','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','ELIXIR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Field 9 > Contractors name and address','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','ELIXIR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Field 9 > Contractors name and address','Vendor city','16','WBeneCity','','',0,0,1,'35',0,0]);
        
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SORBNET','','Bank routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Field 4 > Ordering partys bank routing number','Bank account number',0,'RegistrationNum','','',0,0,'1','8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SORBNET','','Bank IBAN','Cash and bank management > Select bank account > edit > General tab > Identification(group) > IBAN','Field 6 > Ordering partys bank account','Bank IBAN',0,'IBAN','','',0,0,1,'26',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SORBNET','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','Field 7 > Field 7 > Contractors bank account number','IBAN related to vendor','9','BankIBAN','','',0,0,1,'28',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SORBNET','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Field 8 > Ordering partys name and address','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SORBNET','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','Field 8 > Ordering partys name and address','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SORBNET','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Field 8 > Ordering partys name and address','Address related to bank','15','WOrdPartyAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SORBNET','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','Field 8 > Ordering partys name and address','Address related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SORBNET','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Field 8 > Ordering partys name and address','City related to bank','15','WOrdPartyCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SORBNET','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','Field 8 > Ordering partys name and address','ZipCode related to bank','15','WOrdPartyZipCode','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SORBNET','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Field 9 > Contractors name and address','Name related to Vendor','16','WBeneName','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SORBNET','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Field 9 > Contractors name and address','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SORBNET','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field 9 > Contractors name and address','Address related to vendor','16','WBeneAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SORBNET','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Field 9 > Contractors name and address','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SORBNET','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Field 9 > Contractors name and address','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','SORBNET','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Field 9 > Contractors name and address','Vendor city','16','WBeneCity','','',0,0,1,'35',0,0]);
        
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','','Bank routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Field 4 > Ordering partys bank routing number','Bank account number',0,'RegistrationNum','','',0,0,'1','8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','','Bank IBAN','Cash and bank management > Select bank account > edit > General tab > Identification(group) > IBAN','Field 6 > Ordering partys bank account','Bank IBAN',0,'IBAN','','',0,0,1,'26',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','Field 7 > Field 7 > Contractors bank account number','IBAN related to vendor','9','BankIBAN','','',0,0,1,'28',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Field 8 > Ordering partys name and address','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','Field 8 > Ordering partys name and address','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Field 8 > Ordering partys name and address','Address related to bank','15','WOrdPartyAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','Field 8 > Ordering partys name and address','Address related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Field 8 > Ordering partys name and address','City related to bank','15','WOrdPartyCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','Field 8 > Ordering partys name and address','ZipCode related to bank','15','WOrdPartyZipCode','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Field 9 > Contractors name and address','Name related to Vendor','16','WBeneName','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Field 9 > Contractors name and address','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field 9 > Contractors name and address','Address related to vendor','16','WBeneAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Field 9 > Contractors name and address','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Field 9 > Contractors name and address','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Field 9 > Contractors name and address','Vendor city','16','WBeneCity','','',0,0,1,'35',0,0]);
        
        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['PL-PEKAOBANK-MCASH-CSV','TaxIDType','Tax ID Type']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['PL-PEKAOBANK-MCASH-CSV','PeriodType','Period Type']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-PEKAOBANK-MCASH-CSV','TaxIDType','NIP','N']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-PEKAOBANK-MCASH-CSV','TaxIDType','Regon','R']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-PEKAOBANK-MCASH-CSV','TaxIDType','Pesel','P']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-PEKAOBANK-MCASH-CSV','TaxIDType','ID card series and number','1']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-PEKAOBANK-MCASH-CSV','TaxIDType','passport series and numberr','2']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-PEKAOBANK-MCASH-CSV','TaxIDType','another ID type','3']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-PEKAOBANK-MCASH-CSV','PeriodType','year','R']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-PEKAOBANK-MCASH-CSV','PeriodType','half-year','P']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-PEKAOBANK-MCASH-CSV','PeriodType','quarter','K']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-PEKAOBANK-MCASH-CSV','PeriodType','month','M']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-PEKAOBANK-MCASH-CSV','PeriodType','decade','D']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-PEKAOBANK-MCASH-CSV','PeriodType','day','J']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-PEKAOBANK-MCASH-CSV','PeriodType','no period','0']);

        
        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('PL-PEKAOBANK-MCASH-CSV'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_PL_PEKAOBANK_MCASH_CSV();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_PL_PEKAOBANK_MCASH_CSV</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_PL_PEKAOBANK_MCASH_CSV()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['PL-PEKAOBANK-MCASH-CSV','PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','TaxIDType','Tax ID Type',0,'TaxIDType','',0,'','','Field No 12 > Payment purpose']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['PL-PEKAOBANK-MCASH-CSV','PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','TaxIDContent','Tax ID Content',1,'TaxIDContent','',0,'','XXXXXXXXXXXXXX','Field No 12 > Payment purpose']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['PL-PEKAOBANK-MCASH-CSV','PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','PeriodYear','Period Year',1,'PeriodYear','',0,'','XX','Field No 12 > Payment purpose']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['PL-PEKAOBANK-MCASH-CSV','PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','PeriodType','Period Type',0,'PeriodType','',0,'','','Field No 12 > Payment purpose']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['PL-PEKAOBANK-MCASH-CSV','PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','PeriodNo','Period Number',1,'PeriodNo','',0,'','XXXX','Field No 12 > Payment purpose']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['PL-PEKAOBANK-MCASH-CSV','PL-PEKAOBANK-MCASH-CSV','PAYMTOUS','PaymentSymbol','Payment Symbol',1,'PaymentSymbol','',0,'','XXXXXX','Field No 12 > Payment purpose']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;


        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_PL_PEKAOBANK_MCASH_CSV</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_PL_PEKAOBANK_MCASH_CSV()
    {
        container   paymSpecFieldsList;


        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>