<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_CITYNATIONAL</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_CITYNATIONAL extends SKS_PP_Format_BankGroup
{
    XmlDocument xmlDoc;
    XmlElement  nodeRoot;    
    XmlElement  nodeIFX;

    #define.cnb('cnb')
    #define.cnbValue('urn:cnb-com-EASI:XSD:1')


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtFormatHeader</Name>
				<Source><![CDATA[
    protected str txtFormatHeader()
    {
        xmlDoc = XmlDocument::newBlank();

        this.node_MessageRoot();

        this.node_IFX();

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtFormatTrailer</Name>
				<Source><![CDATA[
    protected str txtFormatTrailer()
    {
        return xmlDoc.toString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_MessageRoot</Name>
				<Source><![CDATA[
    protected void node_MessageRoot()
    {
        guid guid1;
        str string;
    
        guid1 = newGuid();
        string = guid2str(guid1);

        nodeRoot = xmldoc.appendChild(xmlDoc.createElement3(#cnb, 'CNBEASI', #cnbValue));        

        SKS_EFT_Format::xmlsetAttributeText(nodeRoot, 'xmlns', 'urn:ifxforum-org:XSD:1'); //SKS_VSTS_13722

        //                  BatchId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRoot, 'BatchId', subStr(string, 2, 36), 0, true, #cnb, #cnbValue);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_IFX</Name>
				<Source><![CDATA[
    private void node_IFX()
    {
        XmlElement nodeSignonRq;
        XmlElement nodeClientApp;
        
        
        //          IFX
        nodeIFX = nodeRoot.appendChild(xmlDoc.createElement('IFX'));
        
        //              SignonRq
        nodeSignonRq = nodeIFX.appendChild(xmlDoc.createElement('SignonRq'));

        //                  ClientDt
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSignonRq, 'ClientDt', DateTimeUtil::toStr(DateTimeUtil::utcNow()));

        //                  CustLangPref
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSignonRq, 'CustLangPref', 'US');

        //                  ClientApp
        nodeClientApp = nodeSignonRq.appendChild(xmlDoc.createElement('ClientApp'));

        //                      Org
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClientApp, 'Org', '');

        //                      Name
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClientApp, 'Name', '');

        //                      Version
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClientApp, 'Version', '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>sectionGroupHeader</Name>
				<Source><![CDATA[
    protected void sectionGroupHeader()
    {
        XmlNode nodeBankSvcRq;
        XmlNode nodeChkIssueAddRq;
        XmlNode nodeMsgRqHdr;
        XmlNode nodeNetworkTrnInfo;
        XmlNode nodeCustId;
        XmlNode nodeChkIssueInfo;
        XmlNode nodeDepAcctId;
        XmlNode nodeBankInfo;
        XmlNode nodeChkInfo;
        XmlNode nodeCurAmt;
        SKS_PP_Bank gSKS_PP_Bank;

        guid guid2, guid3;
        str string1, string2, chkAction;
        int mult = 1;
    
        guid2 = newGuid();
        string1 = guid2str(guid2);

        guid3 = newGuid();
        string2 = guid2str(guid3);

        select PP01,PP02 from gSKS_PP_Bank where gSKS_PP_Bank.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct;

        //  BankSvcRq
        nodeBankSvcRq = nodeIFX.appendChild(xmlDoc.createElement('BankSvcRq'));

        //      RqUID
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBankSvcRq, 'RqUID', subStr(string1, 2, 36));

        //  ChkIssueAddRq
        nodeChkIssueAddRq = nodeBankSvcRq.appendChild(xmlDoc.createElement('ChkIssueAddRq'));

        //      RqUID
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChkIssueAddRq, 'RqUID', subStr(string2, 2, 36));

        //      MsgRqHdr
        nodeMsgRqHdr = nodeChkIssueAddRq.appendChild(xmlDoc.createElement('MsgRqHdr'));

        //          NetworkTrnInfo
        nodeNetworkTrnInfo = nodeMsgRqHdr.appendChild(xmlDoc.createElement('NetworkTrnInfo'));

        //              NetworkOwner
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeNetworkTrnInfo, 'NetworkOwner', 'Other');

        //              OriginatorName
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeNetworkTrnInfo, 'OriginatorName', '');

        //              Desc
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeNetworkTrnInfo, 'Desc', '');

        //          <CustId>
        nodeCustId = nodeChkIssueAddRq.appendChild(xmlDoc.createElement('CustId'));
    
        //          <SPName>
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCustId, 'SPName', gSKS_PP_Bank.PP01);
    
        //          <CustLoginId>
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCustId, 'CustLoginId', gSKS_PP_Bank.PP02, 35, false); //SKS_DevOps_16271

        //          <ChkIssueInfo>
        nodeChkIssueInfo = nodeChkIssueAddRq.appendChild(xmlDoc.createElement('ChkIssueInfo'));

        //          <DepAcctId>
        nodeDepAcctId = nodeChkIssueInfo.appendChild(xmlDoc.createElement('DepAcctId'));

        //                  AcctId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDepAcctId, 'AcctId', mSKS_PP_FileDetail.BnkBankAcct, 9);
    
        //                  <AcctType>
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDepAcctId, 'AcctType', 'DDA');
        
        //          <BankInfo>
        nodeBankInfo = nodeDepAcctId.appendChild(xmlDoc.createElement('BankInfo'));

        //                  BankIdType
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBankInfo, 'BankIdType', 'ABA');
    
        //                  <BankId>
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBankInfo, 'BankId', mSKS_PP_FileDetail.BnkBankTransit, 9);

        //          ChkInfo
        nodeChkInfo = nodeChkIssueInfo.appendChild(xmlDoc.createElement('ChkInfo'));

        //                  ChkNum
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChkInfo, 'ChkNum', mSKS_PP_FileDetail.ChkRefNbr, 10);

        //                  Name
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChkInfo, 'Name', mSKS_PP_FileDetail.VendName, 80, true, #cnb, #cnbValue);

        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            chkAction = 'Void';
            if(mSKS_PP_FileDetail.chkcuryamt < 0)
            {
                mult = -1;
            }
        }
        else
        {
            chkAction = 'Issue';
        }
        
        //                  ChkAction
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChkInfo, 'ChkAction', chkAction, 0, true, #cnb, #cnbValue);

        //                  Memo
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChkInfo, 'Memo', '');

        //          CurAmt
        nodeCurAmt = nodeChkIssueInfo.appendChild(xmlDoc.createElement('CurAmt'));

        //                  Amt
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCurAmt, 'Amt', num2Str(mult * mSKS_PP_FileDetail.Chkcuryamt, 0, 2, 1, 0));

        //          PaidDt
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChkIssueInfo, 'PaidDt', SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_PP_FileDetail.ChkDocDate, DateSeparator::Hyphen));
    }

]]></Source>
			</Method>
			<Method>
				<Name>fileWrite</Name>
				<Source><![CDATA[
    protected void fileWrite(str _result)
    {
        _result = strReplace(_result, '<IFX xmlns="">', '<IFX>'); //SKS_VSTS_13722

        if(_result != '')
            mFileHub.runAppendLine(_result);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>