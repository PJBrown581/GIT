<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_MX_HSBC_SIP_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_MX_HSBC_SIP_CSV extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_MX_HSBC_SIP_CSV extends SKS_EFT_Format
{
    #define.FormatVersion('20220523')
    #define.SIPF('SIPF')
    #define.SIPWOF('SIPWOF')
    #define.Separator(',')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();
    
            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();
    
            this.rec_SPEI();
    
            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_SPEI</Name>
				<Source><![CDATA[
    boolean rec_SPEI()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        LedgerJournalTrans  ledgerJournalTrans;
        VendTable           lVendTable;
        CompanyInfo         companyInfo;
        str                 numericReference;
    
        select crossCompany PaymId from ledgerJournalTrans where
                ledgerJournalTrans.RecId == mSKS_EFT_FileDetail.PaymentLineRecId;
    
        //       Ordering Account
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.BankBankAcct, 1, 10)));
    
        companyInfo = CompanyInfo::findDataArea(mSKS_EFT_VendorPaym.VendCompany);
    
        //       Ordering Taxpayer ID (RFC)
        sb.Append(this.wrapField(substr(strRem(CompanyInfo.Rfc_MX, #Separator), 1, 18)));
    
        //       Beneficiary Account
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(20, mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));
    
        //       Beneficiary Bank
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.DepBankAcct,1,3)));
    
        //       Beneficiary Name
        sb.Append(this.wrapField(subStr(strRem(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneName), #Separator), 1, 34)));
    
        //       Amount
        sb.Append(this.wrapField(num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 0, 2, 1, 0)));
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SIPF)
        {
            //       Fiscal Voucher
            sb.Append(this.wrapField('S'));
    
            lVendTable = VendTable::findByCompany(mSKS_EFT_VendorPaym.VendCompany, mSKS_EFT_VendorPaym.VendAccount);
    
            //       Beneficiary Taxpayer ID (RFC)
            sb.Append(this.wrapField(subStr(strRem(lVendTable.Rfc_MX, #Separator), 1, 18)));
    
            //       VAT (IVA)
            sb.Append(this.wrapField(num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1 * 0.16, 0, 2, 1, 0)));
    
            numericReference = strRem(ledgerJournalTrans.PaymId, #Separator);
            //       Numeric Reference
            sb.Append(this.wrapField(substr(numericReference,strLen(numericReference),-7), false));
        }
        else
        {
            numericReference = strRem(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), #Separator);
    
            //       Numeric Reference
            sb.Append(this.wrapField(substr(numericReference,strLen(numericReference),-7)));
    
            //       Alphanumeric Reference
            sb.Append(this.wrapField(subStr(mSKS_EFT_FileFormatPaymSpec.PaymSpecName, 1, 30), false));
        }
    
        this.fileWrite(sb.ToString());
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '',  boolean _addSeparator = true)
    {
        str text;
    
        text = _field;
    
        if(_addSeparator)
        {
            text += #Separator;
        }
        return text;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>