<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_JournalForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SKS_EFT_JournalForm
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkAPPaymCanChange</Name>
				<Source><![CDATA[
    static boolean checkAPPaymCanChange(SelectableDataArea _company, str _vendorAccountId)
    {
        SKS_EB_Vendor       sks_EB_Vendor;
        boolean             enabled = true;
        ;
    
        sks_EB_Vendor = SKS_EB_Vendor::find(_company, _vendorAccountid);
    
        if (sks_EB_Vendor.VendAccount != '')
        {
            if (sks_EB_Vendor.PaymCanChange == NoYes::No)
            {
                enabled = false;
            }
        }
    
        return enabled;
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkARPaymCanChange</Name>
				<Source><![CDATA[
    static boolean checkARPaymCanChange(SelectableDataArea _company, str _customerAccountId)
    {
        SKS_LB_Depositor    sks_LB_Depositor;
        boolean             enabled = true;
        ;
    
        sks_LB_Depositor = SKS_LB_Depositor::find(_company, _customerAccountid);
    
        if (sks_LB_Depositor.AccountNum != '')
        {
            if (sks_LB_Depositor.PaymCanChange == NoYes::No)
            {
                enabled = false;
            }
        }
    
        return enabled;
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>DisableAPPaymModeAndSpec</Name>
				<Source><![CDATA[
    public static void DisableAPPaymModeAndSpec(SelectableDataArea _company, DimensionDynamicAccount _ledgerDimension, FormDataSource _formDataSource)
    {
        boolean enabled;
        VendTable vendTable;
        ;
    
        changeCompany(_company)
        {
            vendTable = VendTable::findByLedgerDimension(_ledgerDimension);
        }
    
        enabled = SKS_EFT_JournalForm::checkAPPaymCanChange(_company, vendTable.AccountNum);
    
        _formDataSource.object(fieldnum(LedgerJournalTrans, PaymMode)).enabled(enabled);
        _formDataSource.object(fieldnum(LedgerJournalTrans, PaymSpec)).enabled(enabled);
        _formDataSource.object(fieldnum(LedgerJournalTrans, CustVendBankAccountId)).enabled(enabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>DisableARPaymModeAndSpec</Name>
				<Source><![CDATA[
    public static void DisableARPaymModeAndSpec(SelectableDataArea _company, DimensionDynamicAccount _ledgerDimension, FormDataSource _formDataSource)
    {
        boolean enabled;
        CustTable custTable;
        ;
    
        changeCompany(_company)
        {
            custTable = CustTable::findByLedgerDimension(_ledgerDimension);
        }
    
        enabled = SKS_EFT_JournalForm::checkARPaymCanChange(_company, custTable.AccountNum);
    
        _formDataSource.object(fieldnum(LedgerJournalTrans, PaymMode)).enabled(enabled);
        _formDataSource.object(fieldnum(LedgerJournalTrans, PaymSpec)).enabled(enabled);
        _formDataSource.object(fieldnum(LedgerJournalTrans, CustVendBankAccountId)).enabled(enabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSKS_EFT_Button</Name>
				<Source><![CDATA[
    public static void setSKS_EFT_Button(LedgerJournalTable _ledgerJournalTable, FormButtonControl _sks_EFT_ButtonControl, boolean _ignoreApproval, boolean _isTranForm = false)
    {
        LedgerJournalName journalName = _ledgerJournalTable.ledgerJournalName();
        SKS_EFT_FilePmtSelection    lSKS_EFT_FilePmtSelection;  // SKS_Bug_11185
        boolean selected;       // SKS_Bug_11185
        boolean enabled; //&& ! formRunLines
        boolean isClassicApprovalsEnabled; // Flag that indicates whether or not non-workflow approvals is enabled.
        ;
        if (!journalName)
        {
            enabled = false;
        }
        else
        {
            if (_isTranForm)
            {
                enabled = !_ledgerJournalTable.SystemBlocked;
            }
            else
            {
                enabled = !_ledgerJournalTable.SessionId && !_ledgerJournalTable.SystemBlocked; // record not currently blocked
            }
    
            enabled = enabled && !_ledgerJournalTable.Posted
                && _ledgerJournalTable.SKS_EFT_JournalState != SKS_EFT_JournalState::NotApplicable;
    
            if(!_ignoreApproval)
            {
                isClassicApprovalsEnabled = _ledgerJournalTable.RecId != 0 && journalName.ApproveActive;

                // SKS_Bug_11185 --->
                select lSKS_EFT_FilePmtSelection where lSKS_EFT_FilePmtSelection.PmtJournalNum == _ledgerJournalTable.JournalNum;

                if(_ledgerJournalTable.SKS_EFT_JournalState == SKS_EFT_JournalState::Transferred && !lSKS_EFT_FilePmtSelection.FileRecId && journalName.checkWorkflowApprovalEnabled(true))
                {
                    selected = true;
                }
                // SKS_Bug_11185 <---

                // Enable if not blocked, classic approvals are not enabled, the journal is not in a workflow approvals
                // process and not already posted.
                enabled = enabled && !isClassicApprovalsEnabled
                    && (!journalName.checkWorkflowApprovalEnabled(true) || selected);   // SKS_Bug_11185
            }
        }
        _sks_EFT_ButtonControl.enabled(enabled);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>