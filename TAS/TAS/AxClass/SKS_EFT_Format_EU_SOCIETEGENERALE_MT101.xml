<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_EU_SOCIETEGENERALE_MT101</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_EU_SOCIETEGENERALE_MT101 extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_EU_SOCIETEGENERALE_MT101 extends  SKS_EFT_Format
{
    #define.FormatVersion('20220606')
    BankAccountTable mBankAccountTable;
    AmountMST mPaymentAmount;
    str  seqNumber;
    real numOfOrders;
    boolean firstPayment = true;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            this.rec_HeaderInfo();
            this.rec_20();
            this.rec_28D();
            this.rec_50H();
            this.rec_52A();
            this.rec_30();
            this.rec_21();
            this.rec_32B();
            this.rec_57A();
            this.rec_59A();
            this.rec_70();
            this.rec_71A();

            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_HeaderInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Header Information
    /// </summary>
    /// <returns>true</returns>
    boolean rec_HeaderInfo()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        //      BASIC HEADER BLOCK
        sb.Append('{1:F01');

        sb.Append(subStr(strUpr(mSKS_EFT_FileDetail.BankBankSwiftNo), 1, 12));
    
        sb.Append('XXXX');

        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        sb.Append('}');

        //       APPLICATION HEADER BLOCK
        sb.Append('{2:O101');

        sb.Append(subStr(strUpr(mSKS_EFT_FileDetail.BankBankSwiftNo), 1, 12));

        sb.Append('XXXX');

        sb.Append('N');

        //       USER HEADER BLOCK
        sb.Append('}{3:');

        sb.Append('{113:XXXX}}');

        //       TEXT BLOCK
        sb.Append('{4:');

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_20</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 20
    /// </summary>
    /// <returns>true</returns>
    boolean rec_20()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        sb.Append(':20:');
    
        //2     Transaction Reference Number / Client System Reference Number
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())) + SKS_PP_StringFormats::strTimeHHMMSS());
    
        this.fileWrite(sb.ToString());
        
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_28D</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 28D
    /// </summary>
    /// <returns>true</returns>
    boolean rec_28D()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        sb.Append(':28D:');
    
        //2     Customer Reference
        sb.Append('1/1');
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_50H</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 50H
    /// </summary>
    /// <returns>true</returns>
    boolean rec_50H()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        if(mSKS_EFT_FileDetail.BankBankAcct || mSKS_EFT_FileDetail.FileACHCompanyName)
        {
            sb.Append(':50H:/');
  
            sb.Append(subStr(mSKS_EFT_FileDetail.BankBankAcct, 1, 24));
            sb.AppendLine();
            
            sb.Append(subStr(strUpr(this.CharacterReplacement(mSKS_EFT_FileDetail.FileACHCompanyName)), 1, 35));

            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_52A</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 52A
    /// </summary>
    /// <returns>true</returns>
    boolean rec_52A()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        if(mSKS_EFT_FileDetail.BankBankSwiftNo)
        {
            sb.Append(':52A:');
  
            sb.Append(subStr(mSKS_EFT_FileDetail.BankBankSwiftNo, 1, 12));

            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_30</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 30
    /// </summary>
    /// <returns>true</returns>
    boolean rec_30()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        sb.Append(':30:');
    
        //2     Requested Execution Date / Value Date
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(mSKS_EFT_FileDetail.EffectiveDate));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_21</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 21
    /// </summary>
    /// <returns>true</returns>
    boolean rec_21()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        sb.Append(':21:');
    
        //2     Transaction Reference
        sb.Append(strUpr(subStr(mSKS_EFT_FileDetail.PaymentReference, 1, 16)));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_32B</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 32B
    /// </summary>
    /// <returns>true</returns>
    boolean rec_32B()
    {
        str transAmount;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        //1     Tag
        sb.Append(':32B:');

        //2     Currency
        sb.Append(mSKS_EFT_FileDetail.PaymentCurrencyCode);

        //3     Transaction Amount
        transAmount = num2str(this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur) ,0,2,2,0);
        if(subStr(transAmount, strLen(transAmount)-1, strLen(transAmount)) == '00')
        {
            transAmount = subStr(transAmount, 1, strLen(transAmount)-2);
            sb.Append(transAmount);
        }
        else
        {
            sb.Append(transAmount);
        }
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_57A</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 57A
    /// </summary>
    /// <returns>true</returns>
    boolean rec_57A()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        if(mSKS_EFT_FileDetail.DepSwiftNo)
        {
            sb.Append(':57A:');

            //      Beneficiary bank Swift address
            sb.Append(mSKS_EFT_FileDetail.DepSwiftNo);

            this.fileWrite(sb.ToString());
        }
        else if(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId ||
                mSKS_EFT_FileDetail_BenBank.BenBankBranch)
        {
            sb.Append(':57C://');

            //      Beneficiary bank country code
            sb.Append(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId));

            //      Beneficiary bank code
            sb.Append(this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankBranch));

            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_59A</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 59A
    /// </summary>
    /// <returns>true</returns>
    boolean rec_59A()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        if(mSKS_EFT_FileDetail.DepBankAcct  ||  mSKS_EFT_FileDetail.DepBankIBAN || mSKS_EFT_FileDetail_VendAddress.BeneName)
        {
            //1     Tag
            sb.Append(':59:');
    
            //2     Hyphen "/"
            sb.Append('/');

            //3     Beneficiary account number
            if(mSKS_EFT_FileDetail.DepBankAcct)
            {
                sb.Append(subStr(mSKS_EFT_FileDetail.DepBankAcct, 1, 24));
            }
            else if(mSKS_EFT_FileDetail.DepBankIBAN)
            {
                sb.Append(mSKS_EFT_FileDetail.DepBankIBAN);
            }
            sb.AppendLine();
            
            //4     Beneficiary name
            sb.Append(subStr(strUpr(mSKS_EFT_FileDetail_VendAddress.BeneName), 1, 35)); 
            this.fileWrite(sb.ToString());
        }        
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_70</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 70
    /// </summary>
    /// <returns>true</returns>
    boolean rec_70()
    {
        str invoiceDetails;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        invoiceDetails = strUpr(this.getInvoiceNbrs());
        if(invoiceDetails)
        {
            //1     Tag
            sb.Append(':70:');
    
            //2    Payment details
            sb.Append(subStr(invoiceDetails, 1, 35));

            if(strLen(invoiceDetails) > 35)
            {
                sb.AppendLine();
                sb.Append(subStr(invoiceDetails, 35, 35));
            }
            if(strLen(invoiceDetails) > 70)
            {
                sb.AppendLine();
                sb.Append(subStr(invoiceDetails, 70, 35));
            }
        
            if(strLen(invoiceDetails) > 105)
            {
                sb.AppendLine();
                sb.Append(subStr(invoiceDetails, 105, 35));
            }

            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_71A</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 71A
    /// </summary>
    /// <returns>true</returns>
    boolean rec_71A()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str value;
        
        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Charges', mSKS_EFT_FileDetail.RecId));
        if(value == '')
        {
            value = 'OUR';
        }

        //1     Tag
        sb.Append(':71A:');
    
        //2    cost accounting
        sb.Append(value);
        sb.AppendLine();

        sb.Append('-}');

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceNbrs</Name>
				<Source><![CDATA[
    protected str getInvoiceNbrs()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str invString;
    
        select InvoiceNumber from invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId;
    
        while(invSKS_EFT_FileDetail)
        {
            if(invSKS_EFT_FileDetail.InvoiceNumber == '')
            {
                // If no invoice number, go to next record
                next invSKS_EFT_FileDetail;
                continue;
            }
            sb.Append(invSKS_EFT_FileDetail.InvoiceNumber);
    
            next invSKS_EFT_FileDetail;
    
            if(invSKS_EFT_FileDetail)
            {
                sb.Append(', ');
            }
        }    
        invString = this.CharacterReplacement(sb.ToString());
        return invString;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
            join mSKS_EFT_FileDetail_BenBank
              order by mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_BenBank.RefRecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>