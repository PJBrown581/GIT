<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_CAPITALONE_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_CAPITALONE_XML
/// </summary>
class SKS_EFT_Format_US_CAPITALONE_XML extends SKS_EFT_Format_ISO_20022_001001003_FD
{
    #define.FormatVersion('20221212')
    #define.ACH_CCD('ACH-CCD')
    #define.ACH_CTX('ACH-CTX')    
    #define.WIRE_DOM('WIRE-DOM')
    #define.WIRE_INTL('WIRE-INTL')
    #define.CHK('CHK')


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.6: PmtTpInf
        //          2.7: InstrPrty
        //          2.8: SvcLvl
        //          2.11: LclInstrm
        //          2.14: CtgyPurp
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePmftTpInf;

        if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::No && subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) != 'CHK')
        {
            //      2.6: PmtTpInf
            nodePmftTpInf = _nodePmtInf.appendChild(xmlDoc.createElement('PmtTpInf'));

            //          2.8: SvcLvl
            this.node_PmtInf_PmtTpInf_SvcLvl(nodePmftTpInf);
    
            //          2.11: LclInstrm
            this.node_PmtInf_PmtTpInf_LclInstrm(nodePmftTpInf);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_LclInstrm</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_LclInstrm(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.11: LclInstrm
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeLclInstrm;
        str value;

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #ACH_CTX :
                value = 'CTX';
                break;
            case #ACH_CCD :
                value = 'CCD';
                break;
        }

        if(value)
        {
            nodeLclInstrm = _nodePmftTpInf.appendChild(xmlDoc.createElement('LclInstrm'));

            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Cd', value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Nm</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_Nm(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          Nm
        //------------------------------------------------------------------------------------------------------
        int length;

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #ACH_CCD:
            case #ACH_CTX :
                length = 16;
                break;
            case #WIRE_DOM :
            case #WIRE_INTL :
                length = 35;
                break;
            case #CHK :
                length = 50;
                break;
            default :
                length = 70;
                break;
        }
        //          Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeDbtr, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName), length, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_PstlAdr(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #WIRE_DOM:
            case #WIRE_INTL:
            case #CHK:
                this.node_PstlAdr(_nodeDbtr, '', mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity, 0, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2, mSKS_EFT_FileDetail_BankAccount.WOrdPartyState, true);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_Id(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          Id
        //              OrgId
        //                  Othr
        //                      Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOthr;
        boolean printDbtrId = false;
        str valueDbtrId;
        int lengthDbtrId;

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #ACH_CCD :
            case #ACH_CTX :
                printDbtrId = true;
                lengthDbtrId = 10;
                valueDbtrId = mSKS_EFT_FileDetail.FileACHCompanyId;
                break;
        }

        if(printDbtrId && valueDbtrId)
        {
            //          Id
            nodeId = _nodeDbtr.appendChild(xmlDoc.createElement('Id'));

            //              OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));

            //                  Othr
            nodeOthr = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));

            //                      Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', valueDbtrId, lengthDbtrId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAcct(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.20: DbtrAcct
        //          Id
        //              IBAN
        //              Othr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAcct;
        XmlElement nodeDbtrAcctId, nodeOthr;
        int length;

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #ACH_CTX :
            case #ACH_CCD :
                length = 17;
                break;
            default:
                length = 34;
                break;
        }

        if(mSKS_EFT_FileDetail.BankBankAcct)
        {
            //      2.20: DbtrAcct
            nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));

            //          Id
            nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));    
           
            //              Othr
            nodeOthr = nodeDbtrAcctId.appendChild(xmlDoc.createElement('Othr'));
    
            //                  Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.BankBankAcct, length);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAgt</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAgt(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.21: DbtrAgt
        //          FinInstnId
        //------------------------------------------------------------------------------------------------------
        XmlElement  nodeDbtrAgt;
        XmlElement  nodeFinInstnId;
        XmlElement  nodeClrSysMmBId;
        int         length;

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #ACH_CCD :
            case #ACH_CTX:
                length = 9;                
                break;
            default:
                length = 35;
                break;
        }        
        if(mSKS_EFT_FileDetail.BankBankTransit)
        {
            //      2.21: DbtrAgt
            nodeDbtrAgt = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAgt'));

            //          FinInstnId
            nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));

            //              ClrSysMmbId
            nodeClrSysMmBId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

            //          MmbId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.BankBankTransit, length);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.8: SvcLvl
        //              2.9: Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeSvcLvl;
        
        if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::No && subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) != 'CHK')
        {
            //          2.8: SvcLvl
            nodeSvcLvl = _nodePmftTpInf.appendChild(xmlDoc.createElement('SvcLvl'));
    
            //              2.9: Cd
            this.node_PmtInf_PmtTpInf_SvcLvl_Cd(nodeSvcLvl);
        }        
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl_Cd</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl_Cd(XmlElement _nodeSvcLvl)
    {
        //------------------------------------------------------------------------------------------------------
        //              2.9: Cd
        //------------------------------------------------------------------------------------------------------
        str value;

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #ACH_CTX:
            case #ACH_CCD:
                value = 'NURG';
                break;
            case #WIRE_DOM:
            case #WIRE_INTL:
                value = 'URGP';
                break;
        }
    
        //              2.9: Cd
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeSvcLvl, 'Cd', value, 0, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.77: CdtrAgt
        //              FinInstnId
        //------------------------------------------------------------------------------------------------------
        XmlElement      nodeCdtrAgt;
        XmlElement      nodeFinInstnId;
        XmlElement      nodeClrSysMmbId;
        int             lengthMmbId;
        str             swift, rtg;
        
        swift   = mSKS_EFT_FileDetail.DepSwiftNo;
        rtg     = mSKS_EFT_FileDetail.DepBankTransit;

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #ACH_CTX :
            case #ACH_CCD :
                lengthMmbId = 9;
                swift       = '';
                break;
            case #CHK:
                swift = '';
                rtg   = '';
        }
        if(swift || rtg)
        {
            //          2.77: CdtrAgt
            nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));
    
            //              FinInstnId
            nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));

            if(swift)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', swift);
            }
            else if(rtg)
            {
                //          ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                //          MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', rtg, lengthMmbId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_ChqInstr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_ChqInstr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.52 ChqInstr
        //              2.58 DlvryMtd
        //              2.65 ChqMtrtyDt
        //              2.69: PrtLctn
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeChqInstr;
        XmlElement nodeDlvryMtd;
        str     value;
        boolean printDlvryMthd = true;
    
        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DlvryMtd', mSKS_EFT_FileDetail.RecId));

        //          2.52 ChqInstr
        nodeChqInstr = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('ChqInstr'));

        //              2.54 ChqNb
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'ChqNb', this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 0, false);
    
        if(value && printDlvryMthd)
        {
            //              2.58 DlvryMtd
            nodeDlvryMtd = nodeChqInstr.appendChild(xmlDoc.createElement('DlvryMtd'));
            
            //                  2.60: Prtry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDlvryMtd, 'Prtry', value, 0, false);
        }
        //              2.65 ChqMtrtyDt
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'ChqMtrtyDt', SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate, DateSeparator::Hyphen), 0, false);

        //              2.66 FrmsCd
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'FrmsCd', this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('FormsCode', mSKS_EFT_FileDetail.RecId)), 35, false);

        //              2.67 MemoField
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'MemoFld', this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('MemoField', mSKS_EFT_FileDetail.RecId)), 0, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Cdtr_Nm</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Cdtr_Nm(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.79: Cdtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
        int     lengthCdtrNm;
        str     name = mSKS_EFT_FileDetail.AccountName;
            
        if(mRemittanceName != '')
        {
            name = mRemittanceName;
        }

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #ACH_CTX :
                lengthCdtrNm = 22;
                break;
            case #WIRE_DOM :
            case #WIRE_INTL :
            case #ACH_CCD :         //SKS#DevOps:17868
                lengthCdtrNm = 35;
                break;
            case #CHK :
                lengthCdtrNm = 50;
                break;
        }        
        //              Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtr, 'Nm', this.CharacterReplacement(name), lengthCdtrNm);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_PstlAdr(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
    
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #WIRE_DOM:
            case #WIRE_INTL:
            case #CHK:
                this.node_PstlAdr(_nodeCdtr, '', mRemittanceAdrLine1, mRemittanceZipCode, mRemittanceCity, 0, mRemittanceAdrLine2, mRemittanceState, true);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAcct(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.80: CdtrAcct
        //              Id
        //                  IBAN
        //------------------------------------------------------------------------------------------------------
    
        XmlElement      nodeCdtrAcct;
        XmlElement      nodeCdtrAcctId;
        XmlElement      nodeAcct;
        XmlElement      nodeCdtrAcctTp;
        int             lengthOthrId;
        str             value, acctNum;

        acctNum = mSKS_EFT_FileDetail.DepBankAcct;

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #ACH_CTX :
            case #ACH_CCD :                
                lengthOthrId = 17;
                if(mSKS_EFT_FileDetail.DepBankAcctType == BankAccountType::SavingsAccount)
                {
                    value = 'SAV';
                }
                else if(mSKS_EFT_FileDetail.DepBankAcctType == BankAccountType::CheckingAccount)
                {
                    value = 'DDA';
                }
                else if(mSKS_EFT_FileDetail.DepBankAcctType == BankAccountType::LoanAccount)
                {
                    value = 'LOAN';
                }
                else
                {
                    value = 'GL';
                }
                break;
            case #CHK:
                acctNum = '';
                break;
            default:
                lengthOthrId = 35;
                break;

        }

        if(acctNum)
        {
            //          2.80: CdtrAcct
            nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
            //              Id
            nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
    
            //                  Othr
            nodeAcct = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));

            //                  Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAcct, 'Id', acctNum, lengthOthrId);
        }
    
        //                      Tp
        if(value)
        {
            nodeCdtrAcctTp = nodeCdtrAcct.appendChild(xmlDoc.createElement('Tp'));
    
            //                          Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctTp, 'Prtry', value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeRmtInf;
        str invNumbers;
        int lengthUstrd;

        invNumbers = this.getInvoiceNbrs();

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #ACH_CTX:
            case #ACH_CCD:
                lengthUstrd = 80;
                invNumbers = this.getInvoiceNbrs();
                break;
            case #CHK:
                this.getInvoiceDetails(_nodeCdtTrfTxInf);
                invNumbers = '';
                break;
            default:
                invNumbers = this.getInvoiceNbrs();
                lengthUstrd = 140;
                break;
                
        }
        if(invNumbers)
        {
            //          2.98: RmtInf
            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
    
            //              2.99: Ustrd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, lengthUstrd);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceDetails</Name>
				<Source><![CDATA[
    private void getInvoiceDetails(XmlElement _nodeCdtTrfTxInf)
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        str invDetailsString;
        boolean firstRec = true;
        XmlElement nodeRmtInf;
    
        while select InvoiceNumber, InvoiceDate, InvoiceSettleAmountPmtCur, PaymentCurrencyCode, InvoiceDiscAmountPmtCur from invSKS_EFT_FileDetail
            where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
               && invSKS_EFT_FileDetail.InvoiceNumber != ''
        {
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK)
            {
                invDetailsString = strFmt('TX1|%1|%2|%3|%4|%5|%6', invSKS_EFT_FileDetail.InvoiceNumber, invSKS_EFT_FileDetail.PaymentCurrencyCode, SKS_PP_StringFormats::strDateYYYYMMDD(invSKS_EFT_FileDetail.InvoiceDate,  DateSeparator::None),  num2str((invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur + invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur) * -1,0,2,1,0), num2str(invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur * -1,0,2,1,0), num2str(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0));


                if(firstRec)
                {
                    //          2.98: RmtInf
                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                    firstRec = false;
                }
    
                //              2.99: Ustrd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>