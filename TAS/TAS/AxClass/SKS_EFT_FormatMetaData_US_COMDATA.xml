<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_COMDATA</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_COMDATA Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_US_COMDATA Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20230309';
        dataContractVersion = '1.0';
        conFormatID = ['US-COMDATA'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - COMDATA',0,'','','US-COMDATA',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-COMDATA',0,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-COMDATA'):
                paymSpecList = this.getPaymSpecsMetaData_US_COMDATA();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_COMDATA</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_COMDATA()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH - payment',1,'ACH','','ACH','TRADE PAY',0,'US-COMDATA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'VCard - payment',1,'VCard','','VCard','TRADE PAY',0,'US-COMDATA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Print/Mail Service Check payment',1,'OSC','','OSC','TRADE PAY',0,'US-COMDATA',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire payment',1,'WIRE','','WIRE','TRADE PAY',0,'US-COMDATA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Internal payment',1,'INTRNAL','','INTRNAL','TRADE PAY',0,'US-COMDATA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Overnight payment',1,'OVERNIGHT','','OVERNIGHT','TRADE PAY',0,'US-COMDATA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-COMDATA'):
                notesList = this.getNotesMetaData_US_COMDATA();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_COMDATA</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_COMDATA()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-COMDATA','ACH','-This format does not support Vendor bank debits.::-Cash and bank management module > Bank Account:--Bank account number is required.::-Vendor Bank account fields:--Vendor bank account number and transit numbers are required.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab.:--Vendor name is required set in the Name field.:--Address fields are stored on the Beneficiary section.:--Address Line 1 is required.:--City, state, Zip are required and stored on their specific fields.::-Accounts Payable > All Vendors > Vendor :--Vendor eMail details are stored on Contact information tab and set as primary.::-Vendor eBanking details > E-mail tab.:--Vendor email address will be populated only if Use vendor email check box is marked.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-COMDATA','VCard','-This format does not support Vendor bank debits.::-Cash and bank management module > Bank Account:--Bank account number is required.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab.:--Vendor name is required set in the Name field.:--Address fields are stored on the Beneficiary section.:--Address Line 1 is required.:--City, state, Zip are required and stored on their specific fields.::-Accounts Payable > All Vendors > Vendor:--Vendor eMail details are stored on Contact information tab and set as primary.::-Vendor eBanking details > E-mail tab.:--Vendor email address will be populated only if Use vendor email check box is marked.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-COMDATA','OSC','-This format does not support Vendor bank debits.::-Cash and bank management module > Bank Account:--Bank account number is required.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab.:--Vendor name is required set in the Name field.:--Address fields are stored on the Beneficiary section.:--Address Line 1 is required.:--City, state, Zip are required and stored on their specific fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-COMDATA','WIRE','-This format does not support Vendor bank debits.::-Cash and bank management module > Bank Account:--Bank account number is required.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab.:--Vendor name is required set in the Name field.:--Address fields are stored on the Beneficiary section.:--Address Line 1 is required.:--City, state, Zip are required and stored on their specific fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-COMDATA','INTRNAL','-This format does not support Vendor bank debits.::-Cash and bank management module > Bank Account:--Bank account number is required.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab.:--Vendor name is required set in the Name field.:--Address fields are stored on the Beneficiary section.:--Address Line 1 is required.:--City, state, Zip are required and stored on their specific fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-COMDATA','OVERNIGHT','-This format does not support Vendor bank debits.::-Cash and bank management module > Bank Account:--Bank account number is required.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab.:--Vendor name is required set in the Name field.:--Address fields are stored on the Beneficiary section.:--Address Line 1 is required.:--City, state, Zip are required and stored on their specific fields.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-COMDATA'):
                validationsList = this.getValidationsMetaData_US_COMDATA();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_COMDATA</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_COMDATA()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-COMDATA','WIRE','','Vendor Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Vendor Name','Name related to Vendor','16','WBeneName','','',0,0,1,'50',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-COMDATA','WIRE','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Vendor Address 1','Address related to vendor','16','WBeneAddr','','',0,0,1,'50',0,0,'']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-COMDATA','WIRE','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Vendor Address 2','Address related to vendor','16','WBeneAddr2','','',1,0,1,'50',0,0,'']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-COMDATA','WIRE','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Vendor City','Vendor city','16','WBeneCity','','',0,0,1,'50',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-COMDATA','WIRE','','Vendor State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','Vendor State','State related to vendor','16','WBeneState','','',0,0,'','2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-COMDATA','WIRE','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Vendor Zip','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-COMDATA','WIRE','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','Vendor IBAN','IBAN related to vendor','9','BankIBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-COMDATA','WIRE','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','Vendor BIC/SWIFT Code','Swift Code related to Vendor','9','SWIFTNo','','',0,0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-COMDATA','INTRNAL','','Vendor Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Vendor Name','Name related to Vendor','16','WBeneName','','',0,0,1,'50',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-COMDATA','INTRNAL','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Vendor Address 1','Address related to vendor','16','WBeneAddr','','',0,0,1,'50',0,0,'']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-COMDATA','INTRNAL','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Vendor Address 2','Address related to vendor','16','WBeneAddr2','','',1,0,1,'50',0,0,'']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-COMDATA','INTRNAL','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Vendor City','Vendor city','16','WBeneCity','','',0,0,1,'50',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-COMDATA','INTRNAL','','Vendor State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','Vendor State','State related to vendor','16','WBeneState','','',0,0,'','2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-COMDATA','INTRNAL','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Vendor Zip','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-COMDATA','OVERNIGHT','','Vendor Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Vendor Name','Name related to Vendor','16','WBeneName','','',0,0,1,'50',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-COMDATA','OVERNIGHT','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Vendor Address 1','Address related to vendor','16','WBeneAddr','','',0,0,1,'50',0,0,'']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-COMDATA','OVERNIGHT','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Vendor Address 2','Address related to vendor','16','WBeneAddr2','','',1,0,1,'50',0,0,'']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-COMDATA','OVERNIGHT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Vendor City','Vendor city','16','WBeneCity','','',0,0,1,'50',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-COMDATA','OVERNIGHT','','Vendor State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','Vendor State','State related to vendor','16','WBeneState','','',0,0,'','2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-COMDATA','OVERNIGHT','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Vendor Zip','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',0,1,'','',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>