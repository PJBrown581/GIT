<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_DocumentUploadEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_DocumentUploadEventHandler
{
    

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>DocumentUpload_Post_init</Name>
				<Source><![CDATA[
    //FileUpload mFileUploadCtrl;
    //CustDirectDebitMandate mCustDirectDebitMandate;


    /// <summary>
    ///
    /// </summary>
    /// <param name="args"></param>
    [PostHandlerFor(formStr(DocumentUpload), formMethodStr(DocumentUpload, init))]
    public static void DocumentUpload_Post_init(XppPrePostArgs args)
    {
        DocuRef             docuRefRecord;
        SKS_EFT_Setup       sksEFTSetup;
        CustDirectDebitMandate  locCustDirectDebitMandate;

        FormRun element = args.getThis();
        Common targetRecord = element.args().record();

        if (targetRecord.TableId == tablename2id(tablestr(DocuRef)))
        {
            docuRefRecord = targetRecord;

            FormControl uploadControl = element.design(0).controlName('UploadControl');
            FormControl okButton = element.design(0).controlName('OK');
            FormCheckBoxControl generateFormAndAttachToggle = element.design(0).controlName('GenerateAttachToggle');
            FormGroupControl sks_UploadgroupCtrl = element.design(0).controlName('SKS_DocumentUploadControlGroup');
            FormDateControl sksDateControl = element.design(0).controlName('SignatureDate');

            sksEFTSetup = SKS_EFT_Setup::find();

            if(docuRefRecord.RefTableId == tableName2Id(tableStr(CustDirectDebitMandate)) && (docuRefRecord.TypeId == sksEFTSetup.UnsignedDocumentType || docuRefRecord.TypeId == sksEFTSetup.SignedDocumentType))
            {
                select locCustDirectDebitMandate
                    where locCustDirectDebitMandate.RecId == docuRefRecord.RefRecId;

                if(((locCustDirectDebitMandate.MandateScheme == CustMandateScheme::B2B || locCustDirectDebitMandate.MandateScheme == CustMandateScheme::CORE) && locCustDirectDebitMandate.SKS_EB_MandateType == SKS_EB_MandateType::Standard)|| locCustDirectDebitMandate.SKS_EB_MandateType == SKS_EB_MandateType::Leverander || locCustDirectDebitMandate.SKS_EB_MandateType == SKS_EB_MandateType::Betalings)
                {
                    uploadControl.visible(false);
                    okButton.visible(true);
                    sks_UploadgroupCtrl.visible(true);

                    if(docuRefRecord.TypeId == sksEFTSetup.UnsignedDocumentType)
                    {
                        generateFormAndAttachToggle.visible(true);
                        sksDateControl.visible(false);
                    }
                    else
                    {
                        generateFormAndAttachToggle.visible(false);
                        generateFormAndAttachToggle.value(NoYes::No);
                        sksDateControl.visible(true);
                    }
                }
                else
                {
                    uploadControl.visible(true);
                    okButton.visible(false);
                    sks_UploadgroupCtrl.visible(false);
                }
            }
            else
            {
                uploadControl.visible(true);
                okButton.visible(false);
                sks_UploadgroupCtrl.visible(false);
            }
        }
        else    // <17554>
        {
            FormCheckBoxControl generateFormAndAttachToggle = element.design(0).controlName('GenerateAttachToggle');
            FormGroupControl sks_UploadgroupCtrl = element.design(0).controlName('SKS_DocumentUploadControlGroup');
            FormDateControl sksDateControl = element.design(0).controlName('SignatureDate');

            generateFormAndAttachToggle.visible(false);
            sks_UploadgroupCtrl.visible(false);
            sksDateControl.visible(false);
        }   // </17554>

    }

]]></Source>
			</Method>
			<Method>
				<Name>OK_OnClicked</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormControlEventHandler(formControlStr(DocumentUpload, OK), FormControlEventType::Clicked)]
    public static void OK_OnClicked(FormControl sender, FormControlEventArgs e)
    {
        DocuRef  docuRefRecord;
        CustDirectDebitMandate  locCustDirectDebitMandate;
        System.IO.MemoryStream  ioStream;

        FormRun element = sender.formRun();
        Common targetRecord = element.args().record();

        FileUpload sksUploadControl = element.design(0).controlName('SKS_FileUploadControl');
        FormDateControl sksDateControl = element.design(0).controlName('SignatureDate');
        FormCheckBoxControl generateFormAndAttachToggle = element.design(0).controlName('GenerateAttachToggle');

        if (targetRecord.TableId == tablename2id(tablestr(DocuRef)))
        {
            docuRefRecord = targetRecord;

            if(docuRefRecord.RefTableId == tableName2Id(tableStr(CustDirectDebitMandate)))
            {
                select locCustDirectDebitMandate 
                    where locCustDirectDebitMandate.RecId == docuRefRecord.RefRecId;

                if(locCustDirectDebitMandate)
                {
                    FileUploadTemporaryStorageResult fileUploadResult = sksUploadControl.getFileUploadResult();

                    if(fileUploadResult != null && fileUploadResult.getUploadStatus())
                    {
                        ioStream = File::UseFileFromURL(fileUploadResult.getDownloadUrl());
                    
                        if(docuRefRecord.TypeId == SKS_EFT_Setup::find().SignedDocumentType)
                        {
                            ttsbegin;

                            locCustDirectDebitMandate.selectForUpdate(true);
                            locCustDirectDebitMandate.SignatureDate = sksDateControl.dateValue();
                            locCustDirectDebitMandate.SignatureLocation = LogisticsPostalAddress::findRecId(locCustDirectDebitMandate.CustomerAddress).City;
                            locCustDirectDebitMandate.ExpirationDate = dateMthFwd(sksDateControl.dateValue(), CustParameters::find().MandateDefaultExpirationMonths) - 1;
                            locCustDirectDebitMandate.SKS_EB_MandateAutoStatus = SKS_EB_MandateAutoStatus::Completed;
                            locCustDirectDebitMandate.SKS_EB_AutoStatusDate = DateTimeUtil::getSystemDateTime();

                            if(locCustDirectDebitMandate.SKS_EB_MandateType != SKS_EB_MandateType::Standard)
                            {
                                locCustDirectDebitMandate.Status = CustMandateStatus::Incomplete;
                            }

                            locCustDirectDebitMandate.update();

                            ttscommit;
                        }

                        DocumentManagement::attachFileToCommon(locCustDirectDebitMandate, docuRefRecord.TypeId, ioStream, fileUploadResult.getFileName(), fileUploadResult.getFileContentType(),fileUploadResult.getFileName());
                    }

                    if(generateFormAndAttachToggle.value() == NoYes::Yes)
                    {
                        SKS_DD_MandateAutomationProcess::attachDocument(locCustDirectDebitMandate,
                            (locCustDirectDebitMandate.SKS_EB_AutoType==SKS_EB_AutoType::Email));
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>