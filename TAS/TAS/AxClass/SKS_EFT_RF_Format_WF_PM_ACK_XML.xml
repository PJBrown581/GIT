<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_RF_Format_WF_PM_ACK_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_EFT_RF_Format_WF_PM_ACK_XML extends SKS_EFT_RF_Format
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFile</Name>
				<Source><![CDATA[
    //OUTBOUND:  US_WF_PMS_XML_R1201212
    public SKS_EFT_RF_File getFile(str _filename, boolean _serverPath, SKS_BF_BankIntType _SKS_BF_BankIntType = SKS_BF_BankIntType::FileHubLocal)
    {
        //OUTBOUND:  US_WF_PMS_XML_R1201212
        SKS_EB_FileHub locSKS_EB_FileHub = SKS_EB_FileHub::construct(_SKS_BF_BankIntType);
        System.Xml.XmlDocument locXmlDocument;
        System.Xml.XmlNode locXMLNode;
        str locTempTagName;
        str filepath;
        SKS_EFTAR_Bank  locsks_eftar_bank;

        locXmlDocument = new System.Xml.XmlDocument();
        locSKS_EB_FileHub.runFileLoad(_filename);
        locXmlDocument.LoadXML(locSKS_EB_FileHub.fileBody());
        //SKS#VSTS:14636   -->
        if(!mSKS_EFT_RF_File)          
        {
            mSKS_EFT_RF_File = new SKS_EFT_RF_File();
        }
        filepath = System.IO.Path::GetDirectoryName(_filename);
        select locsks_eftar_bank where locsks_eftar_bank.SKS_DD_InboundFileLoc == filepath || locsks_eftar_bank.SKS_DD_InboundFileLoc == filepath + @'\';
        if(locsks_eftar_bank)
        {
            mSKS_EFT_RF_File.setModule(SKS_EFT_Module::AR);
        }
        else
        {
            mSKS_EFT_RF_File.setModule(SKS_EFT_Module::AP);
        }
        //SKS#VSTS:14636        <--
        if(locXmlDocument.get_HasChildNodes())
        {
            locXMLNode = locXmlDocument.get_FirstChild(); //<?XML ... node.
            locXMLNode = locXMLNode.get_NextSibling();
            locTempTagName = locXMLNode.get_Name();

            if(strUpr(locTempTagName) == 'WFPaymentAck')
            {
                this.processNode(locXMLNode);
            }
           
            //cleanup an pending nodes
            if(mSKS_EFT_RF_Transaction != null)
            mSKS_EFT_RF_SentFile.addTransaction(mSKS_EFT_RF_Transaction);
            if(mSKS_EFT_RF_SentFile != null)
            mSKS_EFT_RF_File.addSentFile(mSKS_EFT_RF_SentFile);
        }
        return mSKS_EFT_RF_File;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatId</Name>
				<Source><![CDATA[
    public str getFormatId(str _filename, boolean _serverPath, SKS_BF_BankIntType _SKS_BF_BankIntType = SKS_BF_BankIntType::FileHubLocal)
    {
        //OUTBOUND:  US_WF_PMS_XML_R1201212
        SKS_EB_FileHub locSKS_EB_FileHub = SKS_EB_FileHub::construct(_SKS_BF_BankIntType);
        str rtnval = '';
        int classId;
        //BEGIN VALIDATION VARIABLES
        //BEGIN QUALIFIERS
        boolean locXMlTagFound = false;
        boolean locWFPaymentAckFound = false;
        //none
        //END VALIDATION VARIABLES

        System.String locString;

        locSKS_EB_FileHub.setFileName(_filename);
        locSKS_EB_FileHub.runFileInquire();
        if(!locSKS_EB_FileHub.attrFileExists())
        {
            // The file %1 does not exist.
            error(strfmt("@SYS62207", _filename));
            return null;
        }
        locSKS_EB_FileHub.runFileLoad(_filename);
        locSKS_EB_FileHub.StreamInit();
        System.IO.StreamReader locStreamReader = new System.IO.StreamReader(locSKS_EB_FileHub.streamGet());
        
        //priming read
        locString = locStreamReader.ReadLine();
        locString = locString.ToUpper();
        while(locString != null)
        {
            locString = locString.Trim();
            locString = locString.ToUpper();
            if(!System.String::IsNullOrWhiteSpace(locString))
            {
                if(!locXMLTagFound)
                {
                    if(locString.StartsWith(strUpr('<?xml')))
                    locXmlTagFound = true;
                    else
                    {
                        //NOT AN XML DOCUMENT
                        break;
                    }

                }
                if(locString.Contains(strUpr('<WFPaymentAck')))
                {
                    locWFPaymentAckFound = true;
                }
            }
            locString = locStreamReader.ReadLine();
            if(!System.String::IsNullOrEmpty(locString))
            locString = locString.ToUpper();
        }
        if(locWFPaymentAckFound)
        {
            classId = classIdGet(this);
            rtnval = classId2Name(ClassId);
        }
        locStreamReader.Close();
        return rtnval;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processNode</Name>
				<Source><![CDATA[
    public void processNode(System.Xml.XmlNode _XmlNode)
    {
        System.Xml.XmlNode locXMLNode;
        System.Xml.XmlNodeList locXMLNodeList;
        System.Collections.IEnumerator locXMLNodeListEnum;
        System.Xml.XmlAttributeCollection locXmlAttributeCollection;
        System.Xml.XmlAttribute locXmlAttribute;
        System.Xml.XmlElement locXmlParent;
        str locNodeName, locStrType;
        str locTempNodeName;

        locTempNodeName = _XmlNode.get_Name();
        switch(strUpr(locTempNodeName))
        {
           
            case 'WFPaymentAck':
                mSKS_EFT_RF_SentFile = new SKS_EFT_RF_SentFile();
                break;
            case 'RejectedUSDWire':
            case 'AcceptedUSDWire':
            case 'AcceptedDomACH':
            case 'RejectedDomACH':
                break;
            case 'TranACK':
                if(mSKS_EFT_RF_Transaction != null)
                {
                    mSKS_EFT_RF_SentFile.addTransaction(mSKS_EFT_RF_Transaction);
                    mSKS_EFT_RF_Transaction = null;
                }
                mSKS_EFT_RF_Transaction = new SKS_EFT_RF_Transaction();
                locXmlParent = _XmlNode.get_ParentNode();
                locXmlAttributeCollection = locXmlParent.get_Attributes();
                locXmlAttribute = locXmlAttributeCollection.GetNamedItem('PmtStatus');
                if(locXmlAttribute)
                {
                    locStrType = locXmlAttribute.get_Value();
                    mSKS_EFT_RF_Transaction.setStatus(locStrType);
                }
                break;
            case 'PmtID':
                mSKS_EFT_RF_Transaction.setID(_XmlNode.get_InnerText());
                break;
            case 'Error':
                mSKS_EFT_RF_Transaction.setAdditionalData(_XmlNode.get_InnerText());
                break;
            case 'FileControl':
                mSKS_EFT_RF_SentFile.setID(_XmlNode.get_InnerText());
                break;
        }

        if(_XmlNode.get_HasChildNodes())
        {
            //priming read
            locXMLNodeList = _XmlNode.get_ChildNodes();
            locXMLNodeListEnum = locXMLNodeList.GetEnumerator();
            locXMLNodeListEnum.Reset();
            while(locXMLNodeListEnum.MoveNext())
            {
                locXMLNode  = locXMLNodeListEnum.get_Current();
                locNodeName = locXMLNode.get_Name();
                if(strUpr(locNodeName) != '#TEXT')
                this.processNode(locXMLNode);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFilekey</Name>
				<Source><![CDATA[
    protected void setFilekey(str _InboundFileKey)
    {
        mSKS_EFT_RF_SentFile.setID(_InboundFileKey);
    }

]]></Source>
			</Method>
			<Method>
				<Name>outboundFileKeyGen</Name>
				<Source><![CDATA[
    public static str outboundFileKeyGen(str _OutFilename, SKS_EFTAP_File locSKS_EFTAP_File = null)
    {
        SKS_EFT_FileData locSKS_EFT_FileData;
        System.Text.StringBuilder sb;

        sb = new System.Text.StringBuilder();
        Select firstonly FieldValue from locSKS_EFT_FileData
            where locSKS_EFT_FileData.RefRecId == locSKS_EFTAP_File.RecId
                    && locSKS_EFT_FileData.FieldName == 'FileControlNumber';
        sb.Append(locSKS_EFT_FileData.FieldValue);

        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>outboundTransKeyGen</Name>
				<Source><![CDATA[
    public static str outboundTransKeyGen(str _FileName = '', SKS_EFT_FileDetail _SKS_EFT_FileDetail = null, SKS_EFTAP_File _SKS_EFTAP_FILE = null)
    {
        str rtnval;
        SKS_EFT_FileFormatPaymSpec locSKS_EFT_FileFormatPaymSpec;
    
        select TransactionCode from locSKS_EFT_FileFormatPaymSpec
            where  locSKS_EFT_FileFormatPaymSpec.FormatId == _SKS_EFT_FileDetail.FormatId
                && locSKS_EFT_FileFormatPaymSpec.PaymSpec == _SKS_EFT_FileDetail.PaymSpec;
    
        if(strUpr(locSKS_EFT_FileFormatPaymSpec.TransactionCode) == strUpr('CHK'))
        {
            rtnval = int642Str(_SKS_EFT_FileDetail.PaymentLineRecId);
        }
        else
        {
            rtnval = _SKS_EFT_FileDetail.PaymentReference;
        }
        return rtnval;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>