<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_UK_NATWEST_BLMT103</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_UK_NATWEST_BLMT103 Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_UK_NATWEST_BLMT103 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220914';
        dataContractVersion = '1.0';
        conFormatID = ['UK-NATWEST-BLMT103'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'UK - NatWest Bank Line - MT103',0,'','','UK-NATWEST-BLMT103',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,1,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-NATWEST-BLMT103',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('UK-NATWEST-BLMT103'):
                paymSpecList = this.getPaymSpecsMetaData_UK_NATWEST_BLMT103();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_NATWEST_BLMT103</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_NATWEST_BLMT103()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Standard Domestic Payment',1,'STDDP','','STDDP','TRADE PAY',0,'UK-NATWEST-BLMT103',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Urgent Domestic Payment',1,'URGDP','','URGDP','TRADE PAY',0,'UK-NATWEST-BLMT103',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International Payment',1,'INTP','','INTP','TRADE PAY',0,'UK-NATWEST-BLMT103',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International payment - US Fedwire',1,'FED-WIRE','','FED-WIRE','TRADE PAY',0,'UK-NATWEST-BLMT103',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('UK-NATWEST-BLMT103'):
                validationsList = this.getValidationsMetaData_UK_NATWEST_BLMT103();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_NATWEST_BLMT103</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_NATWEST_BLMT103()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','STDDP','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','20 (Debit Reference)','Swift code related to Bank',0,'SWIFTNo','','',0,'2','','16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','STDDP','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','50K (Ordering Customer)','Account number related to Bank',0,'AccountNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','STDDP','','Sort code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Sort code','50K (Ordering Customer)','Sort code related to Bank',0,'BankSortCode','','',0,0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','STDDP','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','50K (Ordering Customer)','Name related to bank','15','WOrdPartyName','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','STDDP','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','50K (Ordering Customer)','Address related to bank','15','WOrdPartyAddr','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','STDDP','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','50K (Ordering Customer)','Address related to bank','15','WOrdPartyAddr2','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','STDDP','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','50K (Ordering Customer)','Address related to bank','15','WOrdPartyCity','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','STDDP','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','57C (Account With Institution)','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','STDDP','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','59 (Beneficiary)','IBAN related to vendor','9','BankIBAN','','','2','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','STDDP','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','59 (Beneficiary)','Account number related to Vendor','9','AccountNum','','','2','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','STDDP','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','59 (Beneficiary)','Name related to Vendor','16','WBeneName','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','STDDP','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','59 (Beneficiary)','Address related to vendor','16','WBeneAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','STDDP','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','59 (Beneficiary)','Address related to vendor','16','WBeneAddr2','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','STDDP','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','59 (Beneficiary)','Address related to vendor','16','WBeneCity','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','STDDP','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','59 (Beneficiary)','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','URGDP','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','20 (Debit Reference)','Swift code related to Bank',0,'SWIFTNo','','',0,'2','','16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','URGDP','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','50K (Ordering Customer)','Account number related to Bank',0,'AccountNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','URGDP','','Sort code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Sort code','50K (Ordering Customer)','Sort code related to Bank',0,'BankSortCode','','',0,0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','URGDP','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','50K (Ordering Customer)','Name related to bank','15','WOrdPartyName','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','URGDP','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','50K (Ordering Customer)','Address related to bank','15','WOrdPartyAddr','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','URGDP','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','50K (Ordering Customer)','Address related to bank','15','WOrdPartyAddr2','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','URGDP','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','50K (Ordering Customer)','Address related to bank','15','WOrdPartyCity','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','URGDP','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','57C (Account With Institution)','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','URGDP','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','59 (Beneficiary)','IBAN related to vendor','9','BankIBAN','','','2','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','URGDP','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','59 (Beneficiary)','Account number related to Vendor','9','AccountNum','','','2','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','URGDP','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','59 (Beneficiary)','Name related to Vendor','16','WBeneName','','',1,'2',1,'33',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','URGDP','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','59 (Beneficiary)','Address related to vendor','16','WBeneAddr','','',1,'2',1,'33',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','URGDP','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','59 (Beneficiary)','Address related to vendor','16','WBeneAddr2','','',1,'2',1,'33',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','URGDP','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','59 (Beneficiary)','Address related to vendor','16','WBeneCity','','',1,'2',1,'33',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','URGDP','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','59 (Beneficiary)','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','INTP','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','20 (Debit Reference)','Swift code related to Bank',0,'SWIFTNo','','',0,'2','','16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','INTP','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','50K (Ordering Customer)','Account number related to Bank',0,'AccountNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','INTP','','Sort code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Sort code','50K (Ordering Customer)','Sort code related to Bank',0,'BankSortCode','','',0,0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','INTP','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','50K (Ordering Customer)','Name related to bank','15','WOrdPartyName','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','INTP','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','50K (Ordering Customer)','Address related to bank','15','WOrdPartyAddr','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','INTP','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','50K (Ordering Customer)','Address related to bank','15','WOrdPartyAddr2','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','INTP','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','50K (Ordering Customer)','Address related to bank','15','WOrdPartyCity','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','INTP','','SWIFT code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > SWIFT code','57C (Account With Institution)','Swift code related to Vendor','9','SWIFTNo','','',0,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','INTP','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','59 (Beneficiary)','IBAN related to vendor','9','BankIBAN','','','2','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','INTP','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','59 (Beneficiary)','Account number related to Vendor','9','AccountNum','','','2','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','INTP','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','59 (Beneficiary)','Name related to Vendor','16','WBeneName','','',1,'2',1,'33',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','INTP','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','59 (Beneficiary)','Address related to vendor','16','WBeneAddr','','',1,'2',1,'33',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','INTP','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','59 (Beneficiary)','Address related to vendor','16','WBeneAddr2','','',1,'2',1,'33',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','INTP','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','59 (Beneficiary)','Address related to vendor','16','WBeneCity','','',1,'2',1,'33',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','INTP','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','59 (Beneficiary)','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','FED-WIRE','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','20 (Debit Reference)','Swift code related to Bank',0,'SWIFTNo','','',0,'2','','16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','FED-WIRE','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank account number','50K (Ordering Customer)','Account number related to Bank',0,'AccountNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','FED-WIRE','','Sort code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Sort code','50K (Ordering Customer)','Sort code related to Bank',0,'BankSortCode','','',0,0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','FED-WIRE','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','50K (Ordering Customer)','Name related to bank','15','WOrdPartyName','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','FED-WIRE','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','50K (Ordering Customer)','Address related to bank','15','WOrdPartyAddr','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','FED-WIRE','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','50K (Ordering Customer)','Address related to bank','15','WOrdPartyAddr2','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','FED-WIRE','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','50K (Ordering Customer)','Address related to bank','15','WOrdPartyCity','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','FED-WIRE','','SWIFT code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > SWIFT code','57C (Account With Institution)','Swift code related to Vendor','9','SWIFTNo','','',0,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','FED-WIRE','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','59 (Beneficiary)','IBAN related to vendor','9','BankIBAN','','','2','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','FED-WIRE','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','59 (Beneficiary)','Account number related to Vendor','9','AccountNum','','','2','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','FED-WIRE','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','59 (Beneficiary)','Name related to Vendor','16','WBeneName','','',1,'2',1,'33',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','FED-WIRE','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','59 (Beneficiary)','Address related to vendor','16','WBeneAddr','','',1,'2',1,'33',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','FED-WIRE','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','59 (Beneficiary)','Address related to vendor','16','WBeneAddr2','','',1,'2',1,'33',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','FED-WIRE','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','59 (Beneficiary)','Address related to vendor','16','WBeneCity','','',1,'2',1,'33',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-NATWEST-BLMT103','FED-WIRE','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','59 (Beneficiary)','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UK-NATWEST-BLMT103','Charges','Charges Indicator']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-NATWEST-BLMT103','Charges','Beneficiary','BEN']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-NATWEST-BLMT103','Charges','Payor','OUR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-NATWEST-BLMT103','Charges','Shared','SHA']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case 'UK-NATWEST-BLMT103':
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_NATWEST_BLMT103();
                break;
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_NATWEST_BLMT103</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_NATWEST_BLMT103()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-NATWEST-BLMT103','UK-NATWEST-BLMT103','STDDP','Charges','Charges Indicator',0,'Charges','',0,'','',':71A:Details of Charges']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-NATWEST-BLMT103','UK-NATWEST-BLMT103','URGDP','Charges','Charges Indicator',0,'Charges','',0,'','',':71A:Details of Charges']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-NATWEST-BLMT103','UK-NATWEST-BLMT103','INTP','Charges','Charges Indicator',0,'Charges','',0,'','',':71A:Details of Charges']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-NATWEST-BLMT103','UK-NATWEST-BLMT103','FED-WIRE','Charges','Charges Indicator',0,'Charges','',0,'','',':71A:Details of Charges']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-NATWEST-BLMT103','*','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-NATWEST-BLMT103','*','FormatValidations','*','16','WChargesIndic']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'UK-NATWEST-BLMT103':
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>