<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FORMAT_UK_NATWEST_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FORMAT_UK_NATWEST_XML extends SKS_EFT_Format_ISO_20022_001001003_FD
/// </summary>
class SKS_EFT_FORMAT_UK_NATWEST_XML extends SKS_EFT_Format_ISO_20022_001001003_FD
{
    #define.FormatVersion('20230525')
    #define.STDDP('STDDP')
    #define.URGDP('URGDP')
    #define.IATRF('IATRF')
    #define.INTL_SEPA('INTL-SEPA')
    #define.INTL_NSEPA('INTL-NSEPA')

    

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
        protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_BtchBookg</Name>
				<Source><![CDATA[
    protected void node_PmtInf_BtchBookg(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.23 BtchBookg
        //------------------------------------------------------------------------------------------------------

        str     Btchbkg;

        Btchbkg = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Btchbooking', mSKS_EFT_FileDetail.RecId));

        if(Btchbkg)
        {
            //              2.3: BtchBookg
            if(Btchbkg == 'False')
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'BtchBookg', 'false');
            }
            else
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'BtchBookg', 'true');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          Nm
        //          PstlAdr
        //          Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtr;

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #INTL_SEPA:
            case #INTL_NSEPA:
                //      2.19: Dbtr
                nodeDbtr = nodePmtInf.appendChild(xmlDoc.createElement('Dbtr'));

                //          Nm
                this.node_PmtInf_Dbtr_Nm(nodeDbtr);
                break;
            case #STDDP:
            case #URGDP:
                //      2.19: Dbtr
                nodeDbtr = nodePmtInf.appendChild(xmlDoc.createElement('Dbtr'));

                //          Nm
                this.node_PmtInf_Dbtr_Nm(nodeDbtr);

                this.node_PmtInf_Dbtr_PstlAdr(nodeDbtr);
                break;

        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf()
    {
        //------------------------------------------------------------------------------------------------------
        //  2.0: PmtInf
        //      2.1: PmtInfId
        //      2.2: PmtMtd
        //      2.4: NbOfTxs
        //      2.5: CtrlSum
        //      2.6: PmtTpInf
        //      2.17: ReqdExctnDt
        //      2.19: Dbtr
        //      2.20: DbtrAcct
        //      2.21: DbtrAgt
        //      2.24 ChrgBr
        //------------------------------------------------------------------------------------------------------
        SKS_EFT_FileDetail tmpSKS_EFT_FileDetail;
    
        batchCount++;
    
        // Select count and sum for this bank account
        select COUNT(InvoiceOrigAmountCur), SUM(InvoiceSettleAmountPmtCur) from tmpSKS_EFT_FileDetail
            where
                tmpSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                tmpSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                tmpSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                tmpSKS_EFT_FileDetail.BankAccountId == mSKS_EFT_FileDetail.BankAccountId &&
                tmpSKS_EFT_FileDetail.EffectiveDate == mSKS_EFT_FileDetail.EffectiveDate &&
                tmpSKS_EFT_FileDetail.PaymMode == mSKS_EFT_FileDetail.PaymMode &&
                tmpSKS_EFT_FileDetail.PaymSpec == mSKS_EFT_FileDetail.PaymSpec &&
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == mSKS_EFT_FileDetail.PaymentCurrencyCode;
    
    
        //  2.0: PmtInf
        nodePmtInf = nodeRoot.appendChild(xmlDoc.createElement('PmtInf'));
    
        //      2.1: PmtInfId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtInfId', SKS_PP_StringFormats::strRight(mSKS_EFT_File.FileNbr + '-' + int2str(batchCount),35));
    
        //      2.2: PmtMtd
        if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::Yes || subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) == 'CHK')
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtMtd', 'CHK');
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtMtd', 'TRF');
        }
    
        //      2.3: BtchBookg
        this.node_PmtInf_BtchBookg(nodePmtInf);

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #INTL_NSEPA && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #INTL_SEPA)
        {

            //      2.4: NbOfTxs
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'NbOfTxs', num2str(tmpSKS_EFT_FileDetail.InvoiceOrigAmountCur,0,0,0,0));
    
            //      2.5: CtrlSum
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'CtrlSum', num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0));
        }
        
        //      2.6: PmtTpInf
        this.node_PmtInf_PmtTpInf(nodePmtInf);
    
        //      2.17: ReqdExctnDt
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'ReqdExctnDt', SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate, DateSeparator::Hyphen));
    
        this.node_PmtInf_DbtrNodes(nodePmtInf);

    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_ChrgBr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.51: ChrgBr
        //------------------------------------------------------------------------------------------------------
         
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTL_SEPA)       //SKS#DevOps:16950
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'ChrgBr', 'SLEV', 0, false);
        }
        else if(this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ChrgBr', mSKS_EFT_FileDetail.RecId)))//DevOps20739
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'ChrgBr', this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ChrgBr', mSKS_EFT_FileDetail.RecId)), 0, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr</Name>
				<Source><![CDATA[
    protected void node_GrpHdr()
    {
        //------------------------------------------------------------------------------------------------------
        //  1.0: GrpHdr
        //      1.1: MsgId
        //      1.2: CreDtTm
        //      1.6: NbOfTxs
        //      1.7: CtrlSum
        //      1.8: InitgPty
        //          Nm
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeGrpHdr;
        SKS_EFT_FileDetail tmpSKS_EFT_FileDetail;
    
        // Select count and sum for this file
        select COUNT(InvoiceOrigAmountCur), SUM(InvoiceSettleAmountPmtCur) from tmpSKS_EFT_FileDetail
            where
                tmpSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                tmpSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                tmpSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary;
    
        //  1.0: GrpHdr
        nodeGrpHdr = nodeRoot.appendChild(xmlDoc.createElement('GrpHdr'));
    
        //      1.1: MsgId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'MsgId', SKS_PP_StringFormats::strRight(mSKS_EFT_File.FileNbr,35));
    
        //      1.2: CreDtTm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'CreDtTm', DateTimeUtil::toStr(DateTimeUtil::utcNow()));
    
        //      1.3: Authstn
        this.node_GrpHdr_Authstn(nodeGrpHdr);
    
        //      1.6: NbOfTxs
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'NbOfTxs', num2str(tmpSKS_EFT_FileDetail.InvoiceOrigAmountCur,0,0,0,0));

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #INTL_NSEPA && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #INTL_SEPA)
        {
            //      1.7: CtrlSum
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'CtrlSum', num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0));
        }
    
        //      1.8: InitgPty
        this.node_GrpHdr_InitgPty(nodeGrpHdr);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAgt</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAgt(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.21: DbtrAgt
        //          FinInstnId
        //              BIC
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAgt;
        XmlElement nodeFinInstnId;
    
        //      2.21: DbtrAgt
        nodeDbtrAgt = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAgt'));
    
        //          FinInstnId
        nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
        //              BIC
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.BankBankSwiftNo, 0, false);
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.6: PmtTpInf
        //          2.15: CtgyPurp
        //              2.16: Cd
        //------------------------------------------------------------------------------------------------------

        XmlElement nodePmftTpInf;
        XmlElement nodeCtgyPurp;
        XmlElement nodeSvcLvl;
        str value;
        boolean printPmtTpInf=false;

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTL_SEPA)
        {
            //      2.6: PmtTpInf
            nodePmftTpInf = _nodePmtInf.appendChild(xmlDoc.createElement('PmtTpInf'));

            //          2.7: InstrPrty
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmftTpInf, 'InstrPrty', 'NORM');

            //          2.8: SvcLvl
            nodeSvcLvl = nodePmftTpInf.appendChild(xmlDoc.createElement('SvcLvl'));
            
            //                  Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSvcLvl, 'Cd', 'SEPA');
        
            //              2.15: CtgyPurp
            nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));

            //                  2.16: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', '04');
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGDP)//SKS_VSTS_13033
        {
            //      2.6: PmtTpInf
            nodePmftTpInf = _nodePmtInf.appendChild(xmlDoc.createElement('PmtTpInf'));
            printPmtTpInf = true;//DevOps20442

            //          2.8: SvcLvl
            nodeSvcLvl = nodePmftTpInf.appendChild(xmlDoc.createElement('SvcLvl'));
            
            //                  Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSvcLvl, 'Cd', 'URGP');
        }

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #STDDP:
                value = '01';
                break;
            case #URGDP:
                value = '02';
                break;
            case #IATRF:
                value = '03';
                break;
        }

        if(value)
        {
            if(!printPmtTpInf)//DevOps20442
            {
                //      2.6: PmtTpInf
                nodePmftTpInf = _nodePmtInf.appendChild(xmlDoc.createElement('PmtTpInf'));
            }

            //              2.15: CtgyPurp
            nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));

            //                  2.16: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_PmtTpInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.6: PmtTpInf
        //          2.15: CtgyPurp
        //              2.16: Cd
        //------------------------------------------------------------------------------------------------------

        XmlElement nodePmftTpInf;
        XmlElement nodeCtgyPurp;

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTL_NSEPA)
        {
            //      2.6: PmtTpInf
            nodePmftTpInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('PmtTpInf'));

            //          2.7: InstrPrty
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmftTpInf, 'InstrPrty', 'HIGH');

            //              2.15: CtgyPurp
            nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));

            //                  2.16: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', '04');
        }


        
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAcct(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.20: DbtrAcct
        //          Id
        //              IBAN
        //              Othr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAcct;
        XmlElement nodeDbtrAcctId;
        XmlElement nodeOthr;
        int length;

        //      2.20: DbtrAcct
        nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));

        //          Id
        nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));

        switch(mSKS_EFT_FileDetail.PaymSpec)//DevOps21345
        {
            case #STDDP:               
                length =34;                
                break;
            default:
                length =8;
                break;
        }

        if(mSKS_EFT_FileDetail.BankBankIBAN && ( 
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTL_SEPA ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGDP     ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #STDDP     ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTL_NSEPA))     //SKS#DevOps:15260 //DevOps:18270
        {
            //              IBAN
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctId, 'IBAN', mSKS_EFT_FileDetail.BankBankIBAN);
        }
        else
        {
            //              Othr
            nodeOthr = nodeDbtrAcctId.appendChild(xmlDoc.createElement('Othr'));
            if (mSKS_EFT_FileDetail.PaymentCurrencyCode == 'GBP')
            {
                //                  Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', substr(mSKS_EFT_FileDetail.BankBankSortCode, 1, 6) + subStr(mSKS_EFT_FileDetail.BankBankAcct, 1, 8));
            }
            else
            {
                //                  Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', subStr(mSKS_EFT_FileDetail.BankBankAcct, 1, length));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_PmtId</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_PmtId(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.28: PmtId
        //              2.30: EndToEndId
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePmtId;
        str value;
    
        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('VendorPmtRef', mSKS_EFT_FileDetail.RecId));

        //          2.28: PmtId
        nodePmtId = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('PmtId'));

        //              2.29: InstrId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'InstrId', SKS_PP_StringFormats::strRight(mSKS_EFT_FileDetail.PaymentReference, 18));
    
        if(mSKS_EFT_FileDetail.PaymentReference == '' &&
           !(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGDP ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #STDDP ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #IATRF ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTL_SEPA||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTL_NSEPA))//SKS_VSTS_13537 -->
        {
            //              2.30: EndToEndId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'EndToEndId', subStr(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName,1,18));
        }//SKS_VSTS_13537 <--
        else if(value != '' &&
               (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGDP ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #STDDP)) //SKS#DevOps:15260 -->
        {
            //              2.30: EndToEndId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'EndToEndId', subStr(value,1,18));
        }
        //SKS#DevOps:15260 <--
        else
        {
            //              2.30: EndToEndId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'EndToEndId', SKS_PP_StringFormats::strRight(mSKS_EFT_FileDetail.PaymentReference, 18));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.77: CdtrAgt
        //              FinInstnId
        //                  BIC
        //                  PstlAdr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
        XmlElement nodeBrnchId;
        
        //          2.77: CdtrAgt
        nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #STDDP ||             //SKS#DevOps:14830
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #IATRF)
        {
            //              FinInstnId
            nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
            
            //                  ClrSysMmbId
            nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

            //                          MmbId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 6, false);
            
            //                  PstlAdr
            this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, '', '', '');

            if(mSKS_EFT_FileDetail_BenBank.BenBankBranch && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #STDDP)
            {
                //                  BrnchId
                nodeBrnchId = nodeCdtrAgt.appendChild(xmlDoc.createElement('BrnchId'));
                
                //              Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBrnchId, 'Id', mSKS_EFT_FileDetail_BenBank.BenBankBranch, 35);
            }
        }
        else
        {
            //              FinInstnId
            nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
            
            if(mSKS_EFT_FileDetail.DepSwiftNo != '' && (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTL_SEPA ||
                                                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTL_NSEPA ||
                                                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGDP ))//DevOps18296
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 0, false);
            }
            else
            {
                //                  ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 34, false);
            }
            
            if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
            {
                //                  BrnchId
                nodeBrnchId = nodeCdtrAgt.appendChild(xmlDoc.createElement('BrnchId'));
                
                //              Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBrnchId, 'Id', mSKS_EFT_FileDetail_BenBank.BenBankBranch, 35);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAcct(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.80: CdtrAcct
        //              Id
        //                  IBAN
        //                  Othr
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCdtrAcct;
        XmlElement nodeCdtrAcctId;
        XmlElement nodeCdtrAcctIdOthr;
    
        //          2.80: CdtrAcct
        nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
        //              Id
        nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
           
        if(mSKS_EFT_FileDetail.DepBankIBAN)
        {
            //                  IBAN
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN);
        }
        else
        {
            //                  Othr
            nodeCdtrAcctIdOthr = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));

            //                      Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctIdOthr, 'Id', mSKS_EFT_FileDetail.DepBankAcct);
        }
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTL_SEPA || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTL_NSEPA)
        {
            //              Ccy
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcct, 'Ccy', mSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_IntrmyAgt1</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_IntrmyAgt1(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.71: IntrmyAgt1
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                      MmbId
        //                  Nm
        //                  PstlAdr
        //              BrnchId
        //                  Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeIntrmyAgt1;
        XmlElement nodeFinInstnId;
        XmlElement nodeBrnchId;
    
        if((mSKS_EFT_FileDetail_Intermediary.IntBankSwift != '' || mSKS_EFT_FileDetail_Intermediary.IntBankId != '') &&
           (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGDP     ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTL_SEPA ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTL_NSEPA))
        {
            //          2.71: IntrmyAgt1
            nodeIntrmyAgt1 = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('IntrmyAgt1'));
    
            //              FinInstnId
            nodeFinInstnId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('FinInstnId'));
    
            if(mSKS_EFT_FileDetail_Intermediary.IntBankSwift != '')
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail_Intermediary.IntBankSwift, 0, false);
            }

            //                  Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_Intermediary.IntBankName), 140, false);
    
            //                  PstlAdr
            this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId, mSKS_EFT_FileDetail_Intermediary.IntBankAddr + '' + mSKS_EFT_FileDetail_Intermediary.IntBankAddr2, '', mSKS_EFT_FileDetail_Intermediary.IntBankCity);
    
            //              BrnchId
            if(mSKS_EFT_FileDetail_Intermediary.IntBankBranch != '')
            {
                nodeBrnchId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('BrnchId'));
                //              Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBrnchId, 'Id', this.CharacterReplacement(mSKS_EFT_FileDetail_Intermediary.IntBankBranch));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_Ustrd</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf_Ustrd(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeRmtInf;
        str invNumbers;
        int length;
    
        invNumbers = this.getInvoiceNbrs();

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #IATRF)
        {
            length = 16;
        }
        else
        {
            length = 140;
        }

        if(invNumbers)
        {
            //          2.98: RmtInf
            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
            
            //              2.99: Ustrd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, length);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Cdtr_Nm</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Cdtr_Nm(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.79: Cdtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
        
        //              Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtr, 'Nm', this.CharacterReplacement(mRemittanceName), 140);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Cdtr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Cdtr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.79: Cdtr
        //              Nm
        //              PstlAdr
        //              Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtr;
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #IATRF)
        {
            //          2.79: Cdtr
            nodeCdtr = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Cdtr'));
    
            //              Nm
            this.node_CdtTrfTxInf_Cdtr_Nm(nodeCdtr);
    
            //              PstlAdr
            this.node_PmtInf_Cdtr_PstlAdr(nodeCdtr);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_PstlAdr(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #STDDP && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #IATRF)
        {
            this.node_PstlAdr(_nodeCdtr, mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId, mSKS_EFT_FileDetail_VendAddress.BeneAddr, mSKS_EFT_FileDetail_VendAddress.BeneZipPostal, mSKS_EFT_FileDetail_VendAddress.BeneCity);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty_Id</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty_Id(XmlElement _nodeInitgPty)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          9.1.12: Id
        //              9.1.13: OrgId
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOthr;
        str InitgPtyId;
        boolean printInitgPtyId=true;

        // Get SKS_EFT_FileFormatPaymSpec
        this.getSKS_EFT_FileFormatPaymSpec();

        InitgPtyId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InitgPtyId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        
       

        if(InitgPtyId && printInitgPtyId)
        {
            //          9.1.12: Id
            nodeId = _nodeInitgPty.appendChild(xmlDoc.createElement('Id'));
            
            //              9.1.13: OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
            
            //                      9.1.15 Othr
            nodeOthr = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
                
            //                              Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', InitgPtyId, 15);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>