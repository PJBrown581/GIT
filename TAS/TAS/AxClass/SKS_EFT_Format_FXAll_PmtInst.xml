<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_FXAll_PmtInst</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_FXAll_PmtInst extends SKS_EFT_Format_FXAll
/// </summary>
class SKS_EFT_Format_FXAll_PmtInst extends SKS_EFT_Format_FXAll
{
    #define.FormatVersion('20210712')
    #define.LBracket('{')
    #define.RBracket('}')
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        while(mSKS_EFT_FileDetail)
        {
            //Get FXA_Details
            this.getSKS_FXA_Details();
    
            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();
    
            // Get SKS_EFT_Bank
            this.getSKS_EFT_Bank();
    
            // Get Bank Account Table
            mBankAccountTable = BankAccountTable::find(mSKS_EFT_FileDetail.BankAccountId);
    
            //Get Remittance Information
            this.getRemittanceAddress(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber);
    
            this.rec_Fields();
    
            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Beneficiary</Name>
				<Source><![CDATA[
    private void rec_Beneficiary()
    {
        str cityLine = ''; 

        //  :58J:/ABIC/UKWN
        //  /NAME/Beneficiary
        //  /ACCT/Account number
    
        //  :58J:/ABIC/UKWN
        this.fileWrite(':58J:/ABIC/UKWN');
    
        if(mRemittanceName != '')
        {
            //  /NAME/Benficiary
            this.fileWrite('/NAME/' + mRemittanceName);
        }
    
        //  /ACCT/Account number
        if(mSKS_EFT_FileDetail.DepBankIBAN != '')
        {
            this.fileWrite('/ACCT/' + mSKS_EFT_FileDetail.DepBankIBAN);
        }
        else
        {
            this.fileWrite('/ACCT/' + mSKS_EFT_FileDetail.DepBankAcct);
        }

        if(mRemittanceAdrLine1 != '')
        {
            this.fileWrite('/ADD1/' + mRemittanceAdrLine1);
        }
        
        if(mRemittanceAdrLine2 != '')
        {
            this.fileWrite('/ADD2/' + mRemittanceAdrLine2);
        }
        
        if (mRemittanceCity != '')
        {
            cityLine += mRemittanceCity;
        }
        
        if(mRemittanceState != '')
        {
            if (cityLine != '')
            {
                cityLine += ', ';
            }
        
            cityLine += mRemittanceState;
        }
        
        if(mRemittanceCountryRegionId != '')
        {
            if (cityLine != '')
            {
                cityLine += ', ';
            }
        
            cityLine += mRemittanceCountryRegionId;
        }
        
        if(cityLine != '')
        {
            this.fileWrite('/CITY/' + cityLine);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Fields</Name>
				<Source><![CDATA[
    private void rec_Fields()
    {
        //  {1:F01CUST1234AXXX0000000000}{2:I300CITIUS33AXXXN}{4:
        //  :15A:
        //  :20:Customer reference Number
        //  :22A:NEWT
        //  :22C:Related reference number
        //  :83J:/NAME/Name from managed accounts
        //  :15B:
        //  :30T:Trade Date
        //  :30V:Value Date
        //  :36:All-In Rate
        //  :32B:Bought CCYAmount
        //  :56J:/ABIC/CITIUS33
        //  :57J:/ABIC/BKTRUS33
        //  :33B:Sold CCYAmount
        //  :58J:/ABIC/UKWN
        //  /NAME/Beneficiary Name
        //  :15C:
        //  -}
        //  {5:{CHK:000000000000}}
        //  -
        str boughtCCYAmt;
        str soldCCYAmt;
    
        if(mSKS_FXA_Details.SKS_FXA_BuySell == SKS_FXA_BuySell::Buy)
        {
            boughtCCYAmt = mSKS_FXA_Details.DealtCurrency + num2str(mSKS_FXA_Details.Amount, 0, 2, 2, 0);
            soldCCYAmt = this.getPaymentCurrency() + num2str(mSKS_FXA_Details.SKS_FXA_ContraAmount, 0, 2, 2, 0);
        }
        else
        {
            boughtCCYAmt= this.getPaymentCurrency() + num2str(mSKS_FXA_Details.SKS_FXA_ContraAmount, 0, 2, 2, 0);
            soldCCYAmt = mSKS_FXA_Details.DealtCurrency + num2str(mSKS_FXA_Details.Amount, 0, 2, 2, 0);
        }
    
        //{1:F01CUST1234AXXX0000000000}{2:I300CITIUS33AXXXN}{4:
        this.fileWrite(this.rec_header());
    
        //  :15A:
        this.fileWrite(':15A:');
    
        //  :20:Customer reference Number
        this.fileWrite(':20:' + mSKS_FXA_Details.SKS_FXA_AllocationID);
    
        //  :22A:NEWT
        this.fileWrite(':22A:NEWT');
    
        //  :22C:Related reference number
        this.fileWrite(':22C:' + this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference));
    
        //  :83J:/NAME/Name from managed accounts
        this.fileWrite(':83J:/NAME/' + this.CharacterReplacement(mSKS_EFT_Bank.FXAManagedAcctName));
    
        //  :15B:
        this.fileWrite(':15B:');
    
        //  :30T:Trade Date
        this.fileWrite(':30T:' + SKS_PP_StringFormats::strDateYYYYMMDD(DateTimeUtil::date(mSKS_EFT_File.FXATradeSent)));
    
        //  :30V:Value Date
        this.fileWrite(':30V:' + SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_FXA_Details.ValueDate));
    
        //  :36:All-In Rate
        this.fileWrite(':36:' + num2str(mSKS_FXA_Details.ExchRate, 0, 8, 2, 0));
    
        //  :32B:Bought CCYAmount
        this.fileWrite(':32B:' + boughtCCYAmt);
    
        //  :56J:/ABIC/CITIUS33
        //  /NAME/Intermediary Name
        this.rec_Intermediary();
    
        //  :57J:/ABIC/BKTRUS33
        //  /NAME/Receiving Agent name
        this.rec_Receiving();
    
        //  :33B:Sold CCYAmount
        this.fileWrite(':33B:' + soldCCYAmt);
    
        //  :58J:/ABIC/UKWN
        //  /NAME/Beneficiary Name
        this.rec_Beneficiary();
    
        //  :15C:
        this.fileWrite(':15C:');
    
        //  -}
        this.fileWrite('-' + #RBracket);
    
        //  {5:{CHK:000000000000}}
        this.fileWrite(#LBracket + '5:' + #LBracket + 'CHK:0000000000-00' + #RBracket + #RBracket);
    
        //  -
        this.fileWrite('-');
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_header</Name>
				<Source><![CDATA[
    private str rec_header()
    {
        //{1:F01CUST1234AXXX0000000000}{2:I300CITIUS33AXXXN}{4:
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str value;
        str cpBIC;
    
        //{1:F01
        sb.Append('{1:F01');
    
        //CUST1234AXXX0000000000
        sb.Append(mSKS_EFT_Bank.FXASenderID + 'AXXX' + SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Right));
    
        //}{2:I300
        sb.Append('}{2:I300');
    
        //CITIUS33AXXX
        cpBIC = this.getcounterParty_BIC();
        if(strLen(cpBIC) == 11)
        {
            value = subStr(cpBIC, 0, 8) + 'A' + subStr(cpBIC, strLen(cpBIC), -3);
        }
        else
        {
            value = cpBIC + 'AXXX';
        }
    
        sb.Append(value + 'N}{4:');
    
        value = sb.ToString();
        return value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Intermediary</Name>
				<Source><![CDATA[
    private void rec_Intermediary()
    {
        //  :56J:/ABIC/CITIUS33
        //  /NAME/Intermediary Name
        str BIC;
    
        if(mSKS_EFT_VendorPaym.WIntBankSwift != '' || mSKS_EFT_VendorPaym.WIntBankId != '')
        {
            if(mSKS_EFT_VendorPaym.WIntBankSwift != '')
            {
                BIC = mSKS_EFT_VendorPaym.WIntBankSwift;
            }
            else
            {
                BIC = mSKS_EFT_VendorPaym.WIntBankId;
            }
    
            //  :56J:/ABIC/CITIUS33
            this.fileWrite(':56J:/ABIC/' + BIC);
    
            if(mSKS_EFT_VendorPaym.WIntBankName != '')
            {
                //  /NAME/Intermediary Name
                this.fileWrite('/NAME/' + this.CharacterReplacement(mSKS_EFT_VendorPaym.WIntBankName));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Receiving</Name>
				<Source><![CDATA[
    private void rec_Receiving()
    {
        //:57J:/ABIC/BKTRUS33
        ///NAME/Receiving Agent name
        str BIC;
    
        if(mSKS_EFT_FileDetail.DepSwiftNo != '')
        {
            BIC = mSKS_EFT_FileDetail.DepSwiftNo;
        }
        else if(mSKS_EFT_FileDetail.DepBankTransit != '')
        {
            BIC = mSKS_EFT_FileDetail.DepBankTransit;
        }
        else
        {
            BIC = 'UKWN';
        }
    
        //:57J:/ABIC/BKTRUS33
        this.fileWrite(':57J:/ABIC/' + BIC);
    
        if(mSKS_EFT_VendorPaym.WBenBankName != '')
        {
            ///NAME/Receiving Agent name
            this.fileWrite('/NAME/' + this.CharacterReplacement(mSKS_EFT_VendorPaym.WBenBankName));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>