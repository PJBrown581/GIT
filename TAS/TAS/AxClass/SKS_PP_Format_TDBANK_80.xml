<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_TDBANK_80</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_TDBANK_80 Extends SKS_PP_Format_BankGroup
{
    real amtDocTotal;
    int  countDocTotal;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    // Chemical Bank Format - Fixed Column Length
        // Courtesy of The Hope Network
        //
        // Position   Length      Description
        // 01-01        1           Record Type (I = issue / S = Stop / V = Void)
        // 02-11        10          Serial Number
        // 12-23        12          Amount(Though there are 12 chars, max amount is 009999999999($99,999,999.99)
        // 24-31        8           Issue Date (YYYYMMDD)
        // 32-40        9           SPACE FILL
        // 41-80        40          Payee name
    protected str txtDetail()
    {
        str ItemType;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        if (mSKS_PP_FileDetail.ChkType == SKS_PP_ChequeType::Cheque)
            ItemType = 'I';
        else if(mSKS_PP_FileDetail.ChkType == SKS_PP_ChequeType::CancelledCheque)
            ItemType = 'S';
        else
            ItemType = 'V';
    
        countDocTotal = countDocTotal + 1;
        amtDocTotal = amtDocTotal + abs(mSKS_PP_FileDetail.ChkCuryAmt);
    
        sb.Append(ItemType);
        sb.Append(SKS_PP_StringFormats::strFill(10, strLRTrim(mSKS_PP_FileDetail.ChkRefNbr), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(abs(mSKS_PP_FileDetail.ChkCuryAmt), 12));
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(SKS_PP_StringFormats::strFill(9, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(40, strUpr(mSKS_PP_FileDetail.VendName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupHeader</Name>
				<Source><![CDATA[
    //    Position    Length    Description
    //      1-1         1       Always H upper case
    //      2-6         5       CFP Account Number
    //      7-11        5       TD Branch Transit
    //      12-18       7       CDA Account Number
    //      19-48       30      CFP Account Name
    //      49-56       8       File date YYYYMMDD
    //      57-61       5       SPACE FILL
    //      62-69       8       File Creation Number
    //      70-78       9       SPACE FILL
    //      79-79       1       "1" indicates 40 byte payee name
    //      80-80       1       "N" indicates 5 digit CFP number
    protected str txtGroupHeader()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        SKS_PP_Bank mSKS_PP_Bank;
        container company;
        ;
    
        mSKS_PP_BANK = null;
        company = [mSKS_PP_FileDetail.ChkCpnyId];
        select crossCompany:company BankAccountId, PP01, PP02, PP03, PP04 from mSKS_PP_BANK
            where mSKS_PP_BANK.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct;
    
    
        sb.Append('H');
        sb.Append(SKS_PP_StringFormats::strFill(5, strLRTrim(mSKS_PP_BANK.PP01), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(5, strLRTrim(mSKS_PP_BANK.PP03), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(7, strLRTrim(mSKS_PP_BANK.PP04), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(30, strLRTrim(mSKS_PP_BANK.PP02), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(utcDateTime2SystemDateTime(DateTimeUtil::utcNow())));
        sb.Append(SKS_PP_StringFormats::strFill(5, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(8, mSKS_PP_FileDetail.FileNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(9, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        sb.Append('1');
        sb.Append('N');
        //Clear Accumulators
        countDocTotal = 0;
        amtDocTotal = 0.00;
    
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupTrailer</Name>
				<Source><![CDATA[
    //Position    Length  Description
    //  1-1         1       Record Type "T"
    //  2-10        9       Total Data Records
    //  11-23       13      Total Amount
    //  24-80       47      Space Filled
    
    protected str txtGroupTrailer()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        sb.Append('T');
        sb.Append(SKS_PP_StringFormats::strFill(9, int2str(countDocTotal), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(abs(amtDocTotal), 13));
        sb.Append(SKS_PP_StringFormats::strFill(57, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        return sb.ToString();
    
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>