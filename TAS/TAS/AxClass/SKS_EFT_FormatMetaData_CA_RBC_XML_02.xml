<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_CA_RBC_XML_02</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_CA_RBC_XML_02 extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_CA_RBC_XML_02 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220901';
        dataContractVersion = '1.0';
        conFormatID = ['CA-RBC-XML-02'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'Canada - Royal Bank of Canada - ISO20022',0,'','','CA-RBC-XML-02',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'CA-RBC-XML-02',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('CA-RBC-XML-02'):
                paymSpecList = this.getPaymSpecsMetaData_CA_RBC_XML_02();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_CA_RBC_XML_02</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_CA_RBC_XML_02()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,0,0,0,'',0,0,0,0,0,'Non - Swift Wire',1,'NON-SWIFT','','NON-SWIFT','TRADE PAY',0,'CA-RBC-XML-02',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH Direct Deposits (PDS) Service',1,'ACH-PDS','','ACH-PDS','TRADE PAY',0,'CA-RBC-XML-02',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('CA-RBC-XML-02'):
                notesList = this.getNotesMetaData_CA_RBC_XML_02();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_CA_RBC_XML_02</Name>
				<Source><![CDATA[
    private container getNotesMetaData_CA_RBC_XML_02()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['CA-RBC-XML-02','ACH-PDS','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CA-RBC-XML-02','NON-SWIFT','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('CA-RBC-XML-02'):
                validationsList = this.getValidationsMetaData_CA_RBC_XML_02();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_CA_RBC_XML_02</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_CA_RBC_XML_02()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','ACH-PDS','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','ACH-PDS','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','ACH-PDS','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','ACH-PDS','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'3','15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','ACH-PDS','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','ACH-PDS','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > CtrySubDvsn','Country sub division related to bank','15','WOrdPartyState','','',1,1,'2','2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','ACH-PDS','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','ACH-PDS','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',0,0,'7','12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','ACH-PDS','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',0,0,'9','9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','ACH-PDS','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,'9','9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','ACH-PDS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','ACH-PDS','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,'','105',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','ACH-PDS','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','ACH-PDS','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','Country related to vendor','16','WBeneCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','ACH-PDS','','State','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf >Cdtr> PstlAdr> CtrySubDvsn','Bank Country Sub Division','16','WBeneState','','',1,1,1,1,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','ACH-PDS','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf >Cdtr> PstlAdr> Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','ACH-PDS','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,0,'7','12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'3','15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > CtrySubDvsn','Country sub division related to bank','15','WOrdPartyState','','',1,1,'2','2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',0,0,'7','12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',0,0,'9','9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,'9','9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id related to vendor','16','WIntBankId','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Name','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > Nm','Intermediary Bank Name','16','WIntBankName','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','Country/Region ','TAS >x Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > Ctry ','Intermediary Bank Country','16','WIntBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,'','105',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','Country related to vendor','16','WBeneCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','State','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf >Cdtr> PstlAdr> CtrySubDvsn','Bank Country Sub Division','16','WBeneState','','',1,1,1,1,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf >Cdtr> PstlAdr> Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-RBC-XML-02','NON-SWIFT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',0,1,'16',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CA-RBC-XML-02','MailHandling','Mail Handling']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CA-RBC-XML-02','CtgyPurp','Category Purpose']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CA-RBC-XML-02','ChrgBr','Charges indicator']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','MailHandling','Fax','FAXI']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','MailHandling','Email','EMAL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','CtgyPurp','CASH','CASH']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','CtgyPurp','CORT','CORT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','CtgyPurp','DIVI','DIVI']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','CtgyPurp','DIVI','GOVT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','CtgyPurp','DIVI','HEDG']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','CtgyPurp','INTC','INTC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','CtgyPurp','INTE','INTE']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','CtgyPurp','LOAN','LOAN']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','CtgyPurp','PENS','PENS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','CtgyPurp','SALA','SALA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','CtgyPurp','SECU','SECU']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','CtgyPurp','SSBE','SSBE']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','CtgyPurp','SUPP','SUPP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','CtgyPurp','TAXS','TAXS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','CtgyPurp','TRAD','TRAD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','CtgyPurp','TREA','TREA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','CtgyPurp','VATX','VATX']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','CtgyPurp','WHLD','WHLD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','ChrgBr','BronebyCreditor','CRED']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-RBC-XML-02','ChrgBr','BronebyDebtor','DEBT']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData</Name>
				<Source><![CDATA[
    protected container getFormatLookupsMetaData(str _formatID)
    {
        container   formatLookupsList;

        //Metadata column names of data elements

        switch (_formatID)
        {
        }

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('CA-RBC-XML-02'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_CA_RBC_XML_02();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_CA_RBC_XML_02</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_CA_RBC_XML_02()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-RBC-XML-02','CA-RBC-XML-02','ACH-PDS','MailHandling','Mail Handling',0,'MailHandling','',0,'','','PmtInf > CdtTrfTxInf > RltdRmtInf > RmtLctnMtd > RmtLctnElctrncAdr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-RBC-XML-02','CA-RBC-XML-02','ACH-PDS','CtgyPurp','Category Purpose',0,'CtgyPurp','CASH',0,'','','PmtInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-RBC-XML-02','CA-RBC-XML-02','NON-SWIFT','ChrgBr','Charges bearer',0,'ChrgBr','BronebyCreditor',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('CA-RBC-XML-02'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('BankPartyID', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('GradsAccNum', gSKS_EFT_Bank.W02);
                }
                if(gSKS_EFT_Bank.W03)
                {
                    this.updateBankFields('CashCommID', gSKS_EFT_Bank.W03);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_CA_RBC_XML_02</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_CA_RBC_XML_02()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-RBC-XML-02','CA-RBC-XML-02','BankPartyID','Bank Party Id',1,'BankPartyID','',0,'','XXXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-RBC-XML-02','CA-RBC-XML-02','GradsAccNum','Grads A/c Number',1,'GradsAccNum','',0,'','XXXXXXXXXX','PmtInf > Dbtr > Id > OrgId > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-RBC-XML-02','CA-RBC-XML-02','CashCommID','Cash Command Id',1,'CashCommID','',0,'','XXXXXXXXXXXXXXX','PmtInf > Dbtr > Id > OrgId > Othr > Id']);


        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        //container   conDelete;
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CA-RBC-XML-02','CA-RBC-XML-02','FormatValidations','ACH-PDS','15','W02']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CA-RBC-XML-02','CA-RBC-XML-02','FormatValidations','NON-SWIFT','15','W03']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CA-RBC-XML-02','*','FormatValidations','*','15','W01']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>