<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_CIBC_142</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_PP_Format_CIBC_142 extends SKS_PP_Format_BankGroup
/// </summary>
class SKS_PP_Format_CIBC_142 extends SKS_PP_Format_BankGroup
{
    BankAccountID gPrevBankAccountID;
    SKS_PP_Bank gSKS_PP_Bank;
    int gCheckCount;
    real gTotalAmount;
    str customerID = SKS_PP_Setup::find().RegCustomerID;

   

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getVenderNameFromSKS_PP_FileDetail</Name>
				<Source><![CDATA[
    public VendName getVenderNameFromSKS_PP_FileDetail(SKS_PP_FileDetail _sks_PP_FileDetail)
    {
        VendName vendNameReturnValue = '';
        BankChequeTable bankChequeTable;
        VendTable lVendTable;
        
        changeCompany(_sks_PP_FileDetail.ChkCpnyId)
        {
            select firstonly * from bankChequeTable
                where bankChequeTable.AccountID == _sks_PP_FileDetail.ChkBankAcct
                && bankChequeTable.ChequeNum == _sks_PP_FileDetail.ChkRefNbr;
        }

        changeCompany(bankChequeTable.RecipientCompany)
        {
            select Party from lVendTable where lVendTable.accountNum == _sks_PP_FileDetail.VendorAccount;
        }
        
        vendNameReturnValue = lVendTable.name();

        return vendNameReturnValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        int Mult;
        str ItemType,VendName;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        if(customerID == 'ca37c5')//DevOps20555
        {
            VendName =  this.getVenderNameFromSKS_PP_FileDetail(msks_PP_FileDetail);
        }
        else
        {
            VendName =  mSKS_PP_FileDetail.VendName;
        }

        //Convert negative void numbers to positives
        Mult = 1;
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'V';
            If (mSKS_PP_FileDetail.chkcuryamt < 0)
            {
                Mult = -1;
            }
    
        }
        else
        {
            ItemType = 'R';
        }
        if(!gSKS_PP_Bank || gSKS_PP_Bank.BankAccountId != mSKS_PP_FileDetail.ChkBankAcct)
        {
            Select crosscompany gSKS_PP_Bank
                where gSKS_PP_Bank.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct
                    && gSKS_PP_Bank.dataAreaId == mSKS_PP_FileDetail.ChkCpnyId;
        }
        //               Positions                       Length
        //  C            Position 1                      1.
        sb.Append('C');

        //  ID          Position  2-4                    2.
        sb.Append(SKS_PP_StringFormats::strFill(3, gSKS_PP_Bank.PP01, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //  Space       Position 4 to 5                  1.
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //  Bank Account  Position 7-16                 10.
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //  Space             Position 17       1.
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));

        // Transaction type   Position 18       1.
        sb.Append(ItemType);

        // Action indicator   Position 19       1.
        sb.Append('A');

        //  Space             Position 20       1.
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));

        //  Check Num               Position 21 to 30            10.
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //  Amount                  Position 31 to 40           10.
        sb.Append(SKS_PP_StringFormats::strMoney(mSKS_PP_FileDetail.ChkCuryAmt * Mult, 10));

        //  Date                    Position 41 to 46        06
        sb.Append(SKS_PP_StringFormats::strDateMMDDYY(mSKS_PP_FileDetail.ChkDocDate));

        //  Payee name              Position 47 to 142      96
        sb.Append(SKS_PP_StringFormats::strFill(96,VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>