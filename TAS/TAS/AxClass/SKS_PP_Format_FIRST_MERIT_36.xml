<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_FIRST_MERIT_36</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_FIRST_MERIT_36 Extends SKS_PP_Format_BankGroup
{
    str BnkBankAct;
    real chkSum;
    int chkCount;
    // First Merit Bank 36 - Detail Record
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    // Pos 01-01    1        Record Type 'D'
    // Pos 02-13    12       Cheque Number
    // Pos 14-25    12       Amount. Two Decimals.  Decimal place explicit! 123456789.99
    // Pos 26-35    10       Date Cheque Issued mm/dd/ccyy
    // Pos 36-36    1        Issue "I" vs Void "V"
    protected str txtDetail()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        int Mult = 1;
        str ItemType;
        ;
    
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'V';
            //subtract voids from total
            chkSum = chkSum - mSKS_PP_FileDetail.ChkCuryAmt;
        }
        else
        {
            ItemType = 'I';
            //add issues to total
            chkSum = chkSum + mSKS_PP_FileDetail.ChkCuryAmt;
        }
        chkCount++;
    
        sb.Append('D');
        sb.Append(SKS_PP_StringFormats::strFill(12, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(12,num2Str(mSKS_PP_FileDetail.ChkCuryAmt, 1, 2, 1, 0) ,SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(mSKS_PP_FileDetail.ChkDocDate,DateSeparator::Slash));
        sb.Append(ItemType);
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupHeader</Name>
				<Source><![CDATA[
    // First Merit Bank 36 - Header Record
    
    // Pos 01-01    1        Record Type 'H'
    // Pos 02-11    10       Bank Account Number
    // Pos 12-36    25       Space
    protected str txtGroupHeader()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        //BnkBankAct is used in the FooterRecord
        BnkBankAct = mSKS_PP_FileDetail.BnkBankAcct;
    
        sb.Append('H');
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(25, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupTrailer</Name>
				<Source><![CDATA[
    // First Merit Bank 36 - Trailer Record
    
    // Pos 01-01    1       Record Type 'H'
    // Pos 02-11    10      Bank Account Number
    // Pos 12-19    8       Number of Detail Records
    // Pos 20-31    12      Issues - voids.  Two Decimals.  Decimal place explicit! 123456789.99
    // Pos 32-36    5       Space Fill
    protected str txtGroupTrailer()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str locChkSum;
        ;
    
        //if the amount is less than zero, the negative will need removed, zero padding added, negative reapplied on the zeropadded amount.
        if(chkSum < 0)
             locChkSum = '-' + SKS_PP_StringFormats::strFill(11,num2Str(abs(chkSum), 1, 2, 1, 0) ,SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left);
        else
            locChkSum = SKS_PP_StringFormats::strFill(12,num2Str(chkSum, 1, 2, 1, 0) ,SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left);
    
        sb.Append('T');
        sb.Append(SKS_PP_StringFormats::strFill(10, BnkBankAct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(8, int2str(chkCount), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(locChkSum);
        sb.Append(SKS_PP_StringFormats::strFill(5, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>