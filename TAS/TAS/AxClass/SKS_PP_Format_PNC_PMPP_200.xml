<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_PNC_PMPP_200</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_PNC_PMPP_200 extends SKS_PP_Format_BankGroup
{
    //Banco Popular
    // PMPP Standard Positive Pay
    //  01 - 02     2      Spaces
    //  03 - 12    10      Bank account number
    //  13 - 13     1      Space
    //  14 - 14     1      Transaction code
    //  15 - 15     1      Space
    //  16 - 26    11      Amount
    //  27 - 41    15      Spaces
    //  42 - 49     8      Effective date (MMDDYYYY)
    //  50 - 58     9      Check number
    //  59 - 108   50      Payee name 1
    // 109 - 160   50      Payee name 2
    // 161 - 200   42      Spaces

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        int mult;
        str itemType;

        //Convert negative void numbers to positives
        mult = 1;
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            itemType = 'V';
            if(mSKS_PP_FileDetail.chkcuryamt < 0)
            {
                mult = -1;
            }
        }
        else
        {
            itemType = 'I';
        }
        
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(itemtype);
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strMoney(mult * mSKS_PP_FileDetail.ChkCuryAmt, 11));
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(SKS_PP_StringFormats::strFill(9, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));        
        sb.Append(SKS_PP_StringFormats::strFill(50, subStr(mSKS_PP_FileDetail.VendName, 1, 50), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(50, subStr(mSKS_PP_FileDetail.VendName, 51, 50), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));        
        sb.Append(SKS_PP_StringFormats::strFill(42, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>