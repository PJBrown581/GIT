<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_LedgerJournalSetupForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_LedgerJournalSetupForm
{
    
 
    

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>LedgerJournalName_OnActivated</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataSourceEventHandler(formDataSourceStr(LedgerJournalSetup, LedgerJournalName), FormDataSourceEventType::Activated),
    SuppressBPWarning('BPParameterNotUsed', 'Parameter e required in signature')]
    public static void LedgerJournalName_OnActivated(FormDataSource sender, FormDataSourceEventArgs e)
    {
        FormRun formRun = sender.formRun();
        LedgerJournalName   ledgerjournalname;
        Formdatasource ledgerjournalname_ds = formRun.dataSource(formDataSourceStr(LedgerJournalSetup, LedgerJournalName)) as FormDataSource;
        ledgerjournalname = ledgerjournalname_ds.cursor();

        if(ledgerjournalname.journaltype != LedgerJournalType::Daily || SKS_PP_Setup::find().ModBR == NoYes::No)
        {
            ledgerjournalname_ds.object(fieldNum(LedgerJournalName, SKS_BR_AutoPost)).visible(false);
        }
        else
        {
            ledgerjournalname_ds.object(fieldNum(LedgerJournalName, SKS_BR_AutoPost)).visible(true);
        }

        //SKS_FDD_13903     Begin
        if(ledgerjournalname.journaltype != LedgerJournalType::Daily || SKS_PP_Setup::find().ModCCReconciliationExtensions == NoYes::No)
        {
            ledgerjournalname_ds.object(fieldNum(LedgerJournalName, SKS_CCR_AutoPost)).visible(false);
        }
        else
        {
            ledgerjournalname_ds.object(fieldNum(LedgerJournalName, SKS_CCR_AutoPost)).visible(true);
        }
        //SKS_FDD_13903     End

    }

]]></Source>
			</Method>
			<Method>
				<Name>SKS_BR_AutoPost_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataFieldEventHandler(formDataFieldStr(LedgerJournalSetup, LedgerJournalName, SKS_BR_AutoPost), FormDataFieldEventType::Modified),
    SuppressBPWarning('BPParameterNotUsed', 'Parameter e required in signature')]
    public static void SKS_BR_AutoPost_OnModified(FormDataObject sender, FormDataFieldEventArgs e)
    {
        SKS_PP_Setup    pp_setup;
        LedgerJournalName   ledgerjournalname;
        ledgerjournalname = sender.datasource().cursor();

        pp_setup = SKS_PP_Setup::find(true);
        if(pp_setup.BRJournalName == LedgerJournalName.JournalName)
        {
            ttsbegin;
            pp_setup.BRAutomaticallyPostGL = LedgerJournalName.SKS_BR_AutoPost;
            pp_setup.update();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>LedgerJournalName_SKS_BR_AutoPost_OnLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormControlEventHandler(formControlStr(LedgerJournalSetup, LedgerJournalName_SKS_BR_AutoPost), FormControlEventType::Lookup),
    SuppressBPWarning('BPParameterNotUsed', 'Parameter e required in signature')]
    public static void LedgerJournalName_SKS_BR_AutoPost_OnLookup(FormControl sender, FormControlEventArgs e)
    {
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSource;
        QueryBuildRange         queryBuildRangeJournalType;

        // Create an instance of SysTableLookup where 'this'
        // is the current form control.
        SysTableLookup sysTableLookup =
                    SysTableLookup::newParameters(tableNum(LedgerJournalName), sender);
        ;

        // Add fields to be shown in the lookup form.
        sysTableLookup.addLookupField(fieldNum(LedgerJournalName, JournalName));
        sysTableLookup.addLookupField(fieldNum(LedgerJournalName, Name));

        // Limit and arrange the data selection.
        queryBuildDataSource = query.addDataSource(tableNum(LedgerJournalName));
        queryBuildRangeJournalType = queryBuildDataSource.addRange(
                    fieldNum(LedgerJournalName, JournalType));
        queryBuildRangeJournalType.value('0');

        queryBuildDataSource.addRange(fieldNum(LedgerJournalName, WorkflowApproval)).value('0');
        queryBuildDataSource.addRange(fieldNum(LedgerJournalName, ApproveActive)).value('0');

        sysTableLookup.parmQuery(query);

        // Perform the lookup.
        changecompany(SKS_PP_Setup::find().BRGLCreationCompany)
        {
            sysTableLookup.performFormLookup();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>SKS_CCR_AutoPost_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    /// SKS_FDD_13903   Begin
    [FormDataFieldEventHandler(formDataFieldStr(LedgerJournalSetup, LedgerJournalName, SKS_CCR_AutoPost), FormDataFieldEventType::Modified),
    SuppressBPWarning('BPParameterNotUsed', 'Parameter e required in signature')]
    public static void SKS_CCR_AutoPost_OnModified(FormDataObject sender, FormDataFieldEventArgs e)
    {
        SKS_PP_Setup    pp_setup;
        LedgerJournalName   ledgerjournalname;
        ledgerjournalname = sender.datasource().cursor();

        pp_setup = SKS_PP_Setup::find(true);
        if(pp_setup.CCRJournalName == LedgerJournalName.JournalName)
        {
            ttsbegin;
            pp_setup.CCRAutomaticallyPostGL = LedgerJournalName.SKS_CCR_AutoPost;
            pp_setup.update();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>LedgerJournalName_SKS_CCR_AutoPost_OnLookup</Name>
				<Source><![CDATA[
    //SKS_FDD_13903     End

    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    /// SKS_FDD_13903       Begin
    [FormControlEventHandler(formControlStr(LedgerJournalSetup, LedgerJournalName_SKS_CCR_AutoPost), FormControlEventType::Lookup),
    SuppressBPWarning('BPParameterNotUsed', 'Parameter e required in signature')]
    public static void LedgerJournalName_SKS_CCR_AutoPost_OnLookup(FormControl sender, FormControlEventArgs e)
    {
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSource;
        QueryBuildRange         queryBuildRangeJournalType;

        // Create an instance of SysTableLookup where 'this'
        // is the current form control.
        SysTableLookup sysTableLookup =
                    SysTableLookup::newParameters(tableNum(LedgerJournalName), sender);
        ;

        // Add fields to be shown in the lookup form.
        sysTableLookup.addLookupField(fieldNum(LedgerJournalName, JournalName));
        sysTableLookup.addLookupField(fieldNum(LedgerJournalName, Name));

        // Limit and arrange the data selection.
        queryBuildDataSource = query.addDataSource(tableNum(LedgerJournalName));
        queryBuildRangeJournalType = queryBuildDataSource.addRange(
                    fieldNum(LedgerJournalName, JournalType));
        queryBuildRangeJournalType.value('0');

        queryBuildDataSource.addRange(fieldNum(LedgerJournalName, WorkflowApproval)).value('0');
        queryBuildDataSource.addRange(fieldNum(LedgerJournalName, ApproveActive)).value('0');

        sysTableLookup.parmQuery(query);

        // Perform the lookup.
        changecompany(SKS_PP_Setup::find().CCRGLCreationCompany)
        {
            sysTableLookup.performFormLookup();
        }
    }
    //SKS_FDD_13903     End

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>