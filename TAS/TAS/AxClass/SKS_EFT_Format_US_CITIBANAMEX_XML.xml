<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_CITIBANAMEX_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_CITIBANAMEX_XML extends SKS_EFT_Format_ISO_20022_001001003
/// </summary>
class SKS_EFT_Format_US_CITIBANAMEX_XML extends SKS_EFT_Format_ISO_20022_001001003
{
    #define.FormatVersion('20221122')
    #define.DIT828('DIT828')
    #define.BKT833('BKT833')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAcct(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //           CdtrAcct
        //              Id
        //                 othr
        //              Tp
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCdtrAcct;
        XmlElement nodeCdtrAcctId;
        XmlElement nodeCdtrAcctIdOthr;
        XmlElement nodeType;
        str value;
    
        //          CdtrAcct
        nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
        //              Id
        nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
    
        //                  Othr
        nodeCdtrAcctIdOthr = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));
    
        //                      Id
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctIdOthr, 'Id', mSKS_EFT_FileDetail.DepBankAcct);
    
        //                  Type
        nodeType = nodeCdtrAcct.appendChild(xmlDoc.createElement('Tp'));
    
        //                  Prtry
        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CdtrAcctTp', mSKS_EFT_FileDetail.RecId));
    
        if(value)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeType, 'Prtry', value, 0, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //         CdtrAgt
        //              FinInstnId
        //                  BIC
        //                or
        //                  ClrSysMmbId
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
    
        //          CdtrAgt
        nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));
    
        //              FinInstnId
        nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
        if(mSKS_EFT_FileDetail.DepSwiftNo != '')
        {
            //                  BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 11, false);
        }
        else
        {
            //                  ClrSysMmbId
            nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 35, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_IntrmyAgt1</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_IntrmyAgt1(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.71: IntrmyAgt1
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                      MmbId
        //                  Nm
        //                  PstlAdr
        //              BrnchId
        //                  Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeIntrmyAgt1;
        XmlElement nodeFinInstnId;
        XmlElement nodeBrnchId;
        XmlElement nodeClrSysMmbId;
    
        if(mSKS_EFT_VendorPaym.WIntBankSwift != '' || mSKS_EFT_VendorPaym.WIntBankId != '')
        {
            //          2.71: IntrmyAgt1
            nodeIntrmyAgt1 = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('IntrmyAgt1'));
    
            //              FinInstnId
            nodeFinInstnId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('FinInstnId'));
    
            if(mSKS_EFT_VendorPaym.WIntBankSwift != '')
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_VendorPaym.WIntBankSwift, 0, false);
            }
    
            //                  ClrSysMmbId
            else
            {
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                //                      MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_VendorPaym.WIntBankId, 0, false);
            }
    
            //                  Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_VendorPaym.WIntBankName), 140, false);
    
            //                  PstlAdr
            this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_VendorPaym.WIntBankCountryRegionId, mSKS_EFT_VendorPaym.WIntBankAddr + '' + mSKS_EFT_VendorPaym.WIntBankAddr2, '', mSKS_EFT_VendorPaym.WIntBankCity);
    
            //              BrnchId
            if(mSKS_EFT_VendorPaym.WIntBankBranch != '')
            {
                nodeBrnchId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('BrnchId'));
                //              Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBrnchId, 'Id', this.CharacterReplacement(mSKS_EFT_VendorPaym.WIntBankBranch));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RltdRmtInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RltdRmtInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          RltdRmtInf
        //              RmtLctnMtd
        //              RmtLctnElctrncAdr
        //------------------------------------------------------------------------------------------------------
        XmlElement              nodeRltdRmtInf;
        VendTable               vendorTable;
        DirPartyContactInfoview DirPartyContactInfoview;
        str value, address;
    
        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RmtLctnMtd', mSKS_EFT_FileDetail.RecId));
    
        vendorTable = VendTable::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum);
    
        if(value == 'FAXI')
        {
            select firstonly * from DirPartyContactInfoview where DirPartyContactInfoview.Party == vendorTable.Party && DirPartyContactInfoview.IsPrimary == true
            &&  DirPartyContactInfoview.Type == LogisticsElectronicAddressMethodType::Fax;
        }
        else if(value == 'EMAL')
        {
            select firstonly * from DirPartyContactInfoview where DirPartyContactInfoview.Party == vendorTable.Party && DirPartyContactInfoview.IsPrimary == true
            &&  DirPartyContactInfoview.Type == LogisticsElectronicAddressMethodType::Email;
        }
    
        if(DirPartyContactInfoView.Locator)
        {
            address = DirPartyContactInfoView.Locator;
        }
    
        if(address != '' || value != '')
        {
            //              RltdRmtInf
            nodeRltdRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RltdRmtInf'));
    
            //              RmtLctnMtd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRltdRmtInf, 'RmtLctnMtd', value, 0, false);
    
            //              RmtLctnElctrncAdr
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRltdRmtInf, 'RmtLctnElctrncAdr', address, 0, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_Id(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //     Cdtr
        //          Id
        //              OrgId
        //                  Othr
        //                      Id
        //                      SchemeName
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOthr;
        XmlElement nodeSchmeNm;
        VendTable lVendTable;
        str TaxID;
    
        lVendTable = VendTable::findByCompany(mSKS_EFT_VendorPaym.VendCompany, mSKS_EFT_VendorPaym.VendAccount);
    
        TaxID = lVendTable.VATNum;
    
        if(TaxID !='')
        {
            //          Id
            nodeId = _nodeCdtr.appendChild(xmlDoc.createElement('Id'));
    
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            nodeOthr = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', TaxID);
    
            nodeSchmeNm = nodeOthr.appendChild(xmlDoc.createElement('SchmeNm'));
    
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', 'TXID');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_PstlAdr(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
        this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, mRemittanceZipCode, mRemittanceCity, 174, mRemittanceAdrline2, mRemittanceState,true);
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_PstlAdr(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
    
        this.node_PstlAdr(_nodeDbtr, mSKS_EFT_Bank.WOrdPartyCountryRegionId, mSKS_EFT_Bank.WOrdPartyAddr, mSKS_EFT_Bank.WOrdPartyZipCode, mSKS_EFT_Bank.WOrdPartyCity, 174, mSKS_EFT_Bank.WOrdPartyAddr2, mSKS_EFT_Bank.WOrdPartyState, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAcct(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //     DbtrAcct
        //          Id
        //              Othr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAcct;
        XmlElement nodeDbtrAcctId;
        XmlElement nodeOthr;
    
        //          DbtrAcct
        nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
        //          Id
        nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));
    
        //          Othr
        nodeOthr = nodeDbtrAcctId.appendChild(xmlDoc.createElement('Othr'));
    
        //          Id
        if(mSKS_EFT_FileDetail.BankBankAcct)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.BankBankAcct);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      PmtTpInf
        //          InstrPrty
        //          SvcLvl
        //          LclInstrm
        //          CtgyPurp
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePmtTpInf;
        XmlElement nodeLclInstrm;
        str value;
    
        //       PmtTpInf
        nodePmtTpInf = _nodePmtInf.appendChild(xmlDoc.createElement('PmtTpInf'));
    
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #DIT828:
                value = 'CITI828';
                break;
            case #BKT833:
                value = 'CITI833';
                break;
            default:
                value = '';
                break;
        }
    
        if(value)
        {
            //          LclInstrm
            nodeLclInstrm = nodePmtTpInf.appendChild(xmlDoc.createElement('LclInstrm'));
    
            //          Prtry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Prtry', value);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>