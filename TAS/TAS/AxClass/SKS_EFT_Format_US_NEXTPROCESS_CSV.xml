<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_NEXTPROCESS_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_NEXTPROCESS_CSV extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_US_NEXTPROCESS_CSV extends SKS_EFT_Format
{
    #define.FormatVersion('20220630')
    #define.Separator(',')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    [SuppressBPWarningAttribute("BPCheckNestedLoopinCode","Necessary to allow the processing of every invoice(inner loop) for every relevant parent file detail record(outer loop)")]
    protected void formatStructure()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;

        while(mSKS_EFT_FileDetail)
        {
            // Get Remittance Address
            this.getRemittanceAddress(true);

            while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
            {
                this.rec_Header(invSKS_EFT_FileDetail);

                this.rec_Detail(invSKS_EFT_FileDetail);
            }
            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Header</Name>
				<Source><![CDATA[
    boolean rec_Header(SKS_EFT_FileDetail invSKS_EFT_FileDetail)
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        //          Record ID
        sb.Append(this.wrapField('H'));

        //          Vendor ID
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.AccountNum));

        //          Check Number
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference)));

        //          Check Date
        sb.Append(this.wrapField(SKS_PP_StringFormats::strDateYYYYMMDD(invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen)));

        //          Check Amount
        sb.Append(this.wrapField(num2str(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 0, 2, 1, 0)));

        //          Pay to Name Ln 1
        sb.Append(this.wrapField(subStr(this.CharacterReplacement(mRemittanceName), 1, 200)));

        //          Pay to Name Ln 2
        sb.Append(this.wrapField(subStr(this.CharacterReplacement(mRemittanceName), 201, 200)));

        //          Remit To Address 1
        sb.Append(this.wrapField(subStr(this.CharacterReplacement(mRemittanceAdrLine1), 1, 75)));

        //          Remit To Address 1
        sb.Append(this.wrapField(subStr(this.CharacterReplacement(mRemittanceAdrLine2), 1, 75)));

        //          Remit To City
        sb.Append(this.wrapField(subStr(this.CharacterReplacement(mRemittanceCity), 1, 50)));

        //          Remit To State
        sb.Append(this.wrapField(subStr(this.CharacterReplacement(mRemittanceState), 1, 50)));

        //          Remit To Zip
        sb.Append(this.wrapField(this.CharacterReplacement(mRemittanceZipCode)));

        //          Memo
        sb.Append(this.wrapField(''));

        //          Print
        sb.Append(this.wrapField(this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Print', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank)), false));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Detail</Name>
				<Source><![CDATA[
    boolean rec_Detail(SKS_EFT_FileDetail invSKS_EFT_FileDetail)
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        
        //          Record ID
        sb.Append(this.wrapField('D'));

        //          Apex Document ID
        sb.Append(this.wrapField(SKS_PP_StringFormats::strRight(this.getApexDocumentID(), 10)));

        //          ERP Reference ID        
        sb.Append(this.wrapField(this.getERPReferenceID()));

        //          Check Number
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference)));

        //          Invoice Number
        sb.Append(this.wrapField(this.CharacterReplacement(invSKS_EFT_FileDetail.InvoiceNumber)));

        //          Invoice Date
        sb.Append(this.wrapField(SKS_PP_StringFormats::strDateMMDDYYYY(invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen)));

        //          Invoice Amount
        sb.Append(this.wrapField(num2str(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 0, 2, 1, 0)));

        //          Discount Amount
        sb.Append(this.wrapField(num2str(invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur * -1, 0, 2, 1, 0)));

        //          Payment Amount
        sb.Append(this.wrapField(num2str((invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur + invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur) * -1, 0, 2, 1, 0)));

        //          Voucher Number
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.PaymentVoucher));

        //          Purchase Order
        sb.Append(this.wrapField(''));

        //          Vendor Code
        sb.Append(this.wrapField(''));

        //          Vendor Name
        sb.Append(this.wrapField(subStr(this.CharacterReplacement(mRemittanceName), 1, 50), false));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '',  boolean _addSeparator = true)
    {
        str text;

        text = _field;

        if(_addSeparator)
        {
            text += #Separator;
        }
        return text;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getApexDocumentID</Name>
				<Source><![CDATA[
    public str getApexDocumentID()
    {
        return mSKS_EFT_FileDetail.PaymentReference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getERPReferenceID</Name>
				<Source><![CDATA[
    public str getERPReferenceID()
    {
        return '';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>