<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_CC_RemoveInvalidOneTimeCustCreditCards</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     Job (runable class) to delete one-time customer invalid credit cards.
/// </summary>
class SKS_CC_RemoveInvalidOneTimeCustCreditCards
{        
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Used to delete a record from <b>CreditCardCust</b> table for a one-time customer
    /// if the fields were not correctly populated during PayLink/WalletLink import.
    /// This is to avoid issues with one-time customer credit cards. The credit card
    /// can be correctly created by performing a PayFabric credit card synchronization.
    /// NOTE: This job should only be executed if an issue was encountered
    /// and SKG personnel has instructed the client to execute the job.
    /// </summary>
    /// <param name = "_args">The specified arguments.</param>
    public static void main(Args _args)
    {
        Dialog dialog = new Dialog("@SKS:SKGCCDelInvalidCCForOneTimeCust");
        
        dialog.addText(strFmt("@SKS:SKGCCDelInvalidCCForOneTimeCustDlgMsg", '\n'), 500);

        dialog.run();

        if (!dialog.closedOk())
        {
            return;
        }

        SKS_PP_Setup sKS_PP_Setup = SKS_PP_Setup::find();
        if (!sKS_PP_Setup || sKS_PP_Setup.ModCC == NoYes::No)
        {
            return;
        }

        CreditCardCust creditCardCust;
        CustTable CustTable;
        Counter recordsRemoved;
        
        while select forupdate creditCardCust
            where creditCardCust.SKS_CC_OneTimeCustRefTableId == 0
            && creditCardCust.SKS_CC_OneTimeCustRefRecId == 0
        exists join CustTable
            where custTable.AccountNum == creditCardCust.CustAccount
            && custTable.OneTimeCustomer == NoYes::Yes
        {
            ttsbegin;
            creditCardCust.doDelete();            
            ttscommit;
            recordsRemoved++;
        }        

        info(strFmt("@SKS:SKGCCRecordsRemoved1", recordsRemoved));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>