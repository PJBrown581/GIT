<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_SYNAPTIC_CSV12</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class SKS_EFT_Format_US_SYNAPTIC_CSV12
/// </summary>
class SKS_EFT_Format_US_SYNAPTIC_CSV12 extends SKS_EFT_Format
{
    
    #define.FormatVersion('20220719')
    #define.Seperator(',')

    SKS_EFT_FileDetail  invSKS_EFT_FileDetail;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// getFormatVersion
    /// </summary>
    /// <returns>str</returns>
      protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    /// <summary>
    /// formatStructure
    /// </summary>
    [SuppressBPWarningAttribute("BPCheckNestedLoopinCode","Necessary to allow the processing of every invoice(inner loop) for every relevant parent file detail record(outer loop)")]
    protected void formatStructure()
    {
        while(mSKS_EFT_FileDetail)
        {
            while select InvoiceDate,InvoiceSettleAmountPmtCur,InvoiceNumber from invSKS_EFT_FileDetail
                where  invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId && invSKS_EFT_FileDetail.InvoiceNumber !=''
            {
                
                this.rec_Details();
            }
            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Details</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_Details
    /// </summary>
    /// <returns>boolean</returns>
    public boolean rec_Details()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        //  A   Merchant Code
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.AccountNum));

        //  B   Invoice number
        sb.Append(this.wrapField(invSKS_EFT_FileDetail.InvoiceNumber));

        //  C   Invoice Date
        sb.append(this.wrapField(SKS_PP_StringFormats::strDateMMDDYYYY(invSKS_EFT_FileDetail.InvoiceDate,DateSeparator::Slash)));
        
        //  D  Invoice Amount
        sb.Append(this.wrapField(num2Str(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 0, 2, 1, 0)));

        // E Blank
        sb.Append(this.wrapField(''));
        
        // F Blank
        sb.Append(this.wrapField(''));
        
        // G Blank
        sb.Append(this.wrapField(''));

        //H File creation ate
        sb.Append(this.wrapField(SKS_PP_StringFormats::strDateMMDDYYYY(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()),DateSeparator::Slash)));

        
        //I File creation ate
        sb.Append(this.wrapField(SKS_PP_StringFormats::strDateMMDDYYYY(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()),DateSeparator::Slash)));
      
        //J Invoice Number
        sb.Append(this.wrapField(invSKS_EFT_FileDetail.InvoiceNumber));

        //K Legal Entity
        sb.Append(this.wrapField(this.CharacterReplacement('Legal Entity')));

        //L Legal Entity
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail.AccountCompany),false));

        
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    /// <summary>
    /// wrapField
    /// </summary>
    /// <param name = "_field">_field</param>
    /// <param name = "_Delimit">_Delimit</param>
    /// <returns>str</returns>
    private str wrapField(str _field = '', boolean _Delimit = true)
    {
        if(_Delimit)
        {
            return _field + #Seperator;
        }
        else
        {
            return _field;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>