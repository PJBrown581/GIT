<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_BB_T_NONWIRE_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_BB_T_NONWIRE_CSV Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_US_BB_T_NONWIRE_CSV Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220615';
        dataContractVersion = '1.0';
        conFormatID = ['US-BB-T-NONWIRE-CSV'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'US - BB&T - NON - WIRE - CSV',0,'','','US-BB-T-NONWIRE-CSV',1,'','','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,'',0,0,1,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-BB-T-NONWIRE-CSV',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-BB-T-NONWIRE-CSV'):
                paymSpecList = this.getPaymSpecsMetaData_US_BB_T_NONWIRE_CSV();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_BB_T_NONWIRE_CSV</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_BB_T_NONWIRE_CSV()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH Payment',1,'ACH','','ACH','DIRECT PAY',0,'US-BB-T-NONWIRE-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'EFT Payment',1,'EFT','','EFT','DIRECT PAY',0,'US-BB-T-NONWIRE-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'CHK payment',1,'CHK','','CHK','TRADE PAY',0,'US-BB-T-NONWIRE-CSV',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,2,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-BB-T-NONWIRE-CSV'):
                notesList = this.getNotesMetaData_US_BB_T_NONWIRE_CSV();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_BB_T_NONWIRE_CSV</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_BB_T_NONWIRE_CSV()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-BB-T-NONWIRE-CSV','ACH','']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BB-T-NONWIRE-CSV','EFT','']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BB-T-NONWIRE-CSV','CHK','']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-BB-T-NONWIRE-CSV'):
                validationsList = this.getValidationsMetaData_US_BB_T_NONWIRE_CSV();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_BB_T_NONWIRE_CSV</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_BB_T_NONWIRE_CSV()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','ACH','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Payment Record > Company (Payer) name','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','ACH','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Payment Record > Payer address1','Address related to bank','15','WOrdPartyAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','ACH','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','Payment Record > Payer address2','Address related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','ACH','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Payment Record > Payer City Name','City related to bank','15','WOrdPartyCity','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','ACH','','State/Province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/Province','Payment Record > Payer State or Province Code','State related to bank','15','WOrdPartyState','','',0,0,1,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','ACH','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','Payment Record > Payer Postal Code','ZipCode related to bank','15','WOrdPartyZipCode','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','ACH','','Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','Payment Record > Payer ISO Country Code','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','ACH','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Payment Record > Payer Routing Number','Bank Routing Number',0,'RegistrationNum','','',1,'2',1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','ACH','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Payment Record > Payer Account Number','Bank account number',0,'AccountNum','','',1,0,1,'13',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','ACH','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Payment Record > Payee name1','Name related to Vendor','16','WBeneName','','',0,0,1,'57',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','ACH','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Payment Record > Payee address1','Address related to vendor','16','WBeneAddr','','',0,0,1,'57',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','ACH','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Payment Record > Payee address2','Address related to vendor','16','WBeneAddr2','','',1,0,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','ACH','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Payment Record > Payee City Name','City related to vendor','16','WBeneCity','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','ACH','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','Payment Record > State or Province Code','Country Sub Division related to vendor','16','WBeneState','','',0,0,1,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','ACH','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','Payment Record > Postal Code','Vendor Zip/postal code','16','WBeneZipPostal','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','ACH','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Payment Record > ISO Country Code','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','ACH','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Payment Record > Payee Account Number','Account Number related to vendor','9','AccountNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','ACH','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Payment Record > Payee Routing Number','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','ACH','','Payment Id','Accounts payable > Invoice journal > New > Select Name > Lines > New > Invoice tab > Payment Id','PmtInf > CdTrfTxInf > RmtInf > Strd > CdtrRefInf > Ref','Reference number related to payment','13','PaymId','','',2,2,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','CHK','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Payment Record > Company (Payer) name','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','CHK','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Payment Record > Payer address1','Address related to bank','15','WOrdPartyAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','CHK','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','Payment Record > Payer address2','Address related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','CHK','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Payment Record > Payer City Name','City related to bank','15','WOrdPartyCity','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','CHK','','State/Province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/Province','Payment Record > Payer State or Province Code','State related to bank','15','WOrdPartyState','','',0,0,1,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','CHK','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','Payment Record > Payer Postal Code','ZipCode related to bank','15','WOrdPartyZipCode','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','CHK','','Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','Payment Record > Payer ISO Country Code','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','CHK','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Payment Record > Payer Routing Number','Bank Routing Number',0,'RegistrationNum','','',1,'2',1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','CHK','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Payment Record > Payer Account Number','Bank account number',0,'AccountNum','','',1,0,1,'13',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','CHK','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Payment Record > Payee name1','Name related to Vendor','16','WBeneName','','',0,0,1,'57',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','CHK','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Payment Record > Payee address1','Address related to vendor','16','WBeneAddr','','',0,0,1,'57',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','CHK','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Payment Record > Payee address2','Address related to vendor','16','WBeneAddr2','','',1,0,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','CHK','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Payment Record > Payee City Name','City related to vendor','16','WBeneCity','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','CHK','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','Payment Record > State or Province Code','Country Sub Division related to vendor','16','WBeneState','','',0,0,1,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','CHK','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','Payment Record > Postal Code','Vendor Zip/postal code','16','WBeneZipPostal','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','CHK','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Payment Record > ISO Country Code','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','CHK','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Payment Record > Payee Account Number','Account Number related to vendor','9','AccountNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','CHK','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Payment Record > Payee Routing Number','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','CHK','','Payment Id','Accounts payable > Invoice journal > New > Select Name > Lines > New > Invoice tab > Payment Id','PmtInf > CdTrfTxInf > RmtInf > Strd > CdtrRefInf > Ref','Reference number related to payment','13','PaymId','','',2,2,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','EFT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Payment Record > Company (Payer) name','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','EFT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Payment Record > Payer address1','Address related to bank','15','WOrdPartyAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','EFT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','Payment Record > Payer address2','Address related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','EFT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Payment Record > Payer City Name','City related to bank','15','WOrdPartyCity','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','EFT','','State/Province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/Province','Payment Record > Payer State or Province Code','State related to bank','15','WOrdPartyState','','',0,0,1,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','EFT','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','Payment Record > Payer Postal Code','ZipCode related to bank','15','WOrdPartyZipCode','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','EFT','','Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','Payment Record > Payer ISO Country Code','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','EFT','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Payment Record > Payer Routing Number','Bank Routing Number',0,'RegistrationNum','','',1,'2',1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','EFT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Payment Record > Payer Account Number','Bank account number',0,'AccountNum','','',1,0,1,'13',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','EFT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Payment Record > Payee name1','Name related to Vendor','16','WBeneName','','',0,0,1,'57',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','EFT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Payment Record > Payee address1','Address related to vendor','16','WBeneAddr','','',0,0,1,'57',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','EFT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Payment Record > Payee address2','Address related to vendor','16','WBeneAddr2','','',1,0,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','EFT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Payment Record > Payee City Name','City related to vendor','16','WBeneCity','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','EFT','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','Payment Record > State or Province Code','Country Sub Division related to vendor','16','WBeneState','','',0,0,1,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','EFT','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','Payment Record > Postal Code','Vendor Zip/postal code','16','WBeneZipPostal','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','EFT','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Payment Record > ISO Country Code','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','EFT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Payment Record > Payee Account Number','Account Number related to vendor','9','AccountNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','EFT','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Payment Record > Payee Routing Number','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-NONWIRE-CSV','EFT','','Payment Id','Accounts payable > Invoice journal > New > Select Name > Lines > New > Invoice tab > Payment Id','PmtInf > CdTrfTxInf > RmtInf > Strd > CdtrRefInf > Ref','Reference number related to payment','13','PaymId','','',2,2,1,'30',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>