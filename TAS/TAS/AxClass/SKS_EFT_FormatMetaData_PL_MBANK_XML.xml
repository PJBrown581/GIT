<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_PL_MBANK_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_PL_MBANK_XML extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_PL_MBANK_XML Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20221212';
        dataContractVersion = '1.0';
        conFormatID = ['PL-MBANK-XML'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'PL - mBank CompanyNet/MultiCash - XML',0,'','','PL-MBANK-XML',1,'','','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,0,0,0,0,'','Debtor id','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',0,0,'XXXXXXXXXX','Debtor SchemeNm',0,'','',0,'','',0,0,0,0,0,0,'PL-MBANK-XML',1,1,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('PL-MBANK-XML'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('DebtorId', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('DebtorSchemeNm', gSKS_EFT_Bank.W02);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('PL-MBANK-XML'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_PL_MBANK_XML();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_PL_MBANK_XML</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_PL_MBANK_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['PL-MBANK-XML','PL-MBANK-XML','DebtorId','Sender id',1,'DebtorId','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','Dbtr > Id > Orgid > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['PL-MBANK-XML','PL-MBANK-XML','DebtorSchemeNm','Debtor Scheme Name',1,'DebtorSchemeNm','',1,'','XXXXXXXXXX','Dbtr > Id > Orgid > Othr > Id > SchmeNm > Prtry']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,ilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNaha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement

        switch (_formatID)
        {
            case ('PL-MBANK-XML'):
                paymSpecList = this.getPaymSpecsMetaData_PL_MBANK_XML();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_PL_MBANK_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_PL_MBANK_XML()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic transfer(internal transfer to beneficiary accounts)',1,'DOM','','DOM','TRADE PAY',0,'PL-MBANK-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic transfer in PLN cur to Polish banks incl SORBNET',1,'SORBNET','','SORBNET','TRADE PAY',0,'PL-MBANK-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Express Elixir transfer - CompanyNet only',1,'ELIXIR','','ELIXIR','TRADE PAY',0,'PL-MBANK-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'BlueCash transfer - CompanyNet only',1,'BLUE-CASH','','BLUE-CASH','TRADE PAY',0,'PL-MBANK-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic transfer in non PLN currency',1,'DOM-NPLN','','DOM-NPLN','TRADE PAY',0,'PL-MBANK-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Internal currency transfer in PLN and in non PLN',1,'INTRL-CUR','','INTRL-CUR','TRADE PAY',0,'PL-MBANK-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Foreign transfer',1,'FRGN','','FRGN','TRADE PAY',0,'PL-MBANK-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'TAX transfer',1,'TAX','','TAX','TRADE PAY',0,'PL-MBANK-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'EuroEkspres transfer - CompanyNet only',1,'EURO-EKSP','','EURO-EKSP','TRADE PAY',0,'PL-MBANK-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA transfer',1,'SEPA','','SEPA','TRADE PAY',0,'PL-MBANK-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA transfer identifier of legal & private person',1,'SEPA','','SEPA-PRSN','TRADE PAY',0,'PL-MBANK-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('PL-MBANK-XML'):
                notesList = this.getNotesMetaData_PL_MBANK_XML();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_PL_MBANK_XML</Name>
				<Source><![CDATA[
    private container getNotesMetaData_PL_MBANK_XML()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['PL-MBANK-XML','DOM','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.::-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['PL-MBANK-XML','SORBNET','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.::-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['PL-MBANK-XML','ELIXIR','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.::-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['PL-MBANK-XML','BLUE-CASH','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.::-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['PL-MBANK-XML','DOM-NPLN','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.::-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['PL-MBANK-XML','INTRL-CUR','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.::-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['PL-MBANK-XML','FRGN','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.::-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['PL-MBANK-XML','TAX','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.::-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['PL-MBANK-XML','EURO-EKSP','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.::-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['PL-MBANK-XML','SEPA','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.::-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['PL-MBANK-XML','SEPA-PRSN','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.::-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('PL-MBANK-XML'):
                validationsList = this.getValidationsMetaData_PL_MBANK_XML();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_PL_MBANK_XML</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_PL_MBANK_XML()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM','','City ','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','TownName related to bank','15','WOrdPartyCity','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > AdrLine','Bank Country Sub Division','15','WOrdPartyState','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> AdrLine','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SORBNET','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SORBNET','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SORBNET','','City ','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','TownName related to bank','15','WOrdPartyCity','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SORBNET','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > AdrLine','Bank Country Sub Division','15','WOrdPartyState','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SORBNET','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SORBNET','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SORBNET','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SORBNET','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SORBNET','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SORBNET','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SORBNET','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SORBNET','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SORBNET','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> AdrLine','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SORBNET','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SORBNET','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SORBNET','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','ELIXIR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','ELIXIR','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','ELIXIR','','City ','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','TownName related to bank','15','WOrdPartyCity','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','ELIXIR','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > AdrLine','Bank Country Sub Division','15','WOrdPartyState','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','ELIXIR','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','ELIXIR','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','ELIXIR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','ELIXIR','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','ELIXIR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','ELIXIR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','ELIXIR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','ELIXIR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','ELIXIR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> AdrLine','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','ELIXIR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','ELIXIR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','ELIXIR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','BLUE-CASH','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','BLUE-CASH','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','BLUE-CASH','','City ','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','TownName related to bank','15','WOrdPartyCity','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','BLUE-CASH','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > AdrLine','Bank Country Sub Division','15','WOrdPartyState','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','BLUE-CASH','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','BLUE-CASH','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','BLUE-CASH','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','BLUE-CASH','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','BLUE-CASH','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','BLUE-CASH','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','BLUE-CASH','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','BLUE-CASH','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','BLUE-CASH','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> AdrLine','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','BLUE-CASH','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','BLUE-CASH','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','BLUE-CASH','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM-NPLN','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM-NPLN','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM-NPLN','','City ','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','TownName related to bank','15','WOrdPartyCity','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM-NPLN','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > AdrLine','Bank Country Sub Division','15','WOrdPartyState','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM-NPLN','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM-NPLN','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM-NPLN','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM-NPLN','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM-NPLN','','Vendor bank Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3','2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM-NPLN','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3','2',1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM-NPLN','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM-NPLN','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM-NPLN','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM-NPLN','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> AdrLine','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM-NPLN','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM-NPLN','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','DOM-NPLN','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','INTRL-CUR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','INTRL-CUR','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','INTRL-CUR','','City ','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','TownName related to bank','15','WOrdPartyCity','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','INTRL-CUR','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > AdrLine','Bank Country Sub Division','15','WOrdPartyState','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','INTRL-CUR','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','INTRL-CUR','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','INTRL-CUR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','INTRL-CUR','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','INTRL-CUR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','INTRL-CUR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','INTRL-CUR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','INTRL-CUR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','INTRL-CUR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> AdrLine','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','INTRL-CUR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','INTRL-CUR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','INTRL-CUR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','FRGN','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','FRGN','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','FRGN','','City ','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','TownName related to bank','15','WOrdPartyCity','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','FRGN','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > AdrLine','Bank Country Sub Division','15','WOrdPartyState','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','FRGN','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','FRGN','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','FRGN','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','FRGN','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','FRGN','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','','3',0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','FRGN','','Vendor bank Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','FRGN','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','FRGN','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','FRGN','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','FRGN','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> AdrLine','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','FRGN','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','FRGN','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','FRGN','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','TAX','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','TAX','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','TAX','','City ','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','TownName related to bank','15','WOrdPartyCity','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','TAX','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > AdrLine','Bank Country Sub Division','15','WOrdPartyState','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','TAX','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','TAX','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','TAX','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','TAX','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','TAX','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','TAX','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','TAX','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','TAX','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','TAX','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> AdrLine','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','TAX','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','TAX','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','TAX','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','EURO-EKSP','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','EURO-EKSP','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','EURO-EKSP','','City ','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','TownName related to bank','15','WOrdPartyCity','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','EURO-EKSP','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > AdrLine','Bank Country Sub Division','15','WOrdPartyState','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','EURO-EKSP','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','EURO-EKSP','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','EURO-EKSP','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','EURO-EKSP','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','EURO-EKSP','','Vendor bank Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','EURO-EKSP','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','EURO-EKSP','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','EURO-EKSP','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','EURO-EKSP','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> AdrLine','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','EURO-EKSP','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','EURO-EKSP','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','EURO-EKSP','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','EURO-EKSP','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA','','City ','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','TownName related to bank','15','WOrdPartyCity','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > AdrLine','Bank Country Sub Division','15','WOrdPartyState','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA','','Vendor bank Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> AdrLine','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA-PRSN','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA-PRSN','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA-PRSN','','City ','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','TownName related to bank','15','WOrdPartyCity','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA-PRSN','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > AdrLine','Bank Country Sub Division','15','WOrdPartyState','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA-PRSN','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA-PRSN','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA-PRSN','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA-PRSN','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA-PRSN','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA-PRSN','','Vendor bank Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA-PRSN','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA-PRSN','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA-PRSN','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA-PRSN','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> AdrLine','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA-PRSN','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA-PRSN','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA-PRSN','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['PL-MBANK-XML','SEPA-PRSN','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3','2',1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['PL-MBANK-XML','InstrPrty','Instruction Party']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['PL-MBANK-XML','CtgyPurp','Category purpose']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['PL-MBANK-XML','ChrgBr','Charge Bearer']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-MBANK-XML','InstrPrty','Normal','NORM']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-MBANK-XML','InstrPrty','High','HIGH']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-MBANK-XML','CtgyPurp','Dividend','DIVI']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-MBANK-XML','CtgyPurp','Interest','INTE']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-MBANK-XML','CtgyPurp','PensionPayment','PENS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-MBANK-XML','CtgyPurp','SalaryPayment','SALA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-MBANK-XML','CtgyPurp','Securities','SECU']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-MBANK-XML','CtgyPurp','SupplierPayment','SUPP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-MBANK-XML','CtgyPurp','InterCompany payment','INTC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-MBANK-XML','CtgyPurp','TreasuryPayment','TREA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-MBANK-XML','ChrgBr','fees & provisions covered by beneficiary','CRED']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-MBANK-XML','ChrgBr','fees & provisions covered by ordering p','CRED']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['PL-MBANK-XML','ChrgBr','Shared','SHAR']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData</Name>
				<Source><![CDATA[
    protected container getFormatLookupsMetaData(str _formatID)
    {
        container   formatLookupsList;

        //Metadata column names of data elements

        switch (_formatID)
        {
        }

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('PL-MBANK-XML'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_PL_MBANK_XML();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_PL_MBANK_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_PL_MBANK_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['PL-MBANK-XML','PL-MBANK-XML','DOM-NPLN','InstrPrty','Instructin Party',0,'InstrPrty','',0,'','','CdtTrfTxInf > PmtTpInf > InstrPrty']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['PL-MBANK-XML','PL-MBANK-XML','FRGN','InstrPrty','Instructin Party',0,'InstrPrty','',0,'','','CdtTrfTxInf > PmtTpInf > InstrPrty']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['PL-MBANK-XML','PL-MBANK-XML','SEPA-PRSN','CdtrId','Creditor Id',1,'CdtrId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','CdtTrfTxInf > Cdtr > Id > OrgId > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['PL-MBANK-XML','PL-MBANK-XML','SEPA-PRSN','TypeOfId','Type Of Identifier',1,'TypeOfId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','CdtTrfTxInf > Cdtr > Id > OrgId > Othr > Id > SchmeNm > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['PL-MBANK-XML','PL-MBANK-XML','TAX','RegnId','Registration Id',1,'RegnId','',0,'','XXXXXXXXXXXXXXX','CdtTrfTxInf > Tax > Dbtr > RegnId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['PL-MBANK-XML','PL-MBANK-XML','TAX','Type','Type',1,'Type','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','Tax > Rcrd > Tp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['PL-MBANK-XML','PL-MBANK-XML','TAX','FrmsCd','Forms Code',1,'FrmsCd','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','Tax > Rcrd > FrmsCd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['PL-MBANK-XML','PL-MBANK-XML','SEPA','CtgyPurp','Category purpose',0,'CtgyPurp','InterCompany payment',0,'','','CdtTrfTxInf > PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['PL-MBANK-XML','PL-MBANK-XML','SEPA-PRSN','CtgyPurp','Category purpose',0,'CtgyPurp','InterCompany payment',0,'','','CdtTrfTxInf > PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['PL-MBANK-XML','PL-MBANK-XML','DOM-NPLN','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','CdtTrfTxInf > PmtTpInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['PL-MBANK-XML','PL-MBANK-XML','FRGN','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','CdtTrfTxInf > PmtTpInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        //container   conDelete;
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['PL-MBANK-XML','PL-MBANK-XML','PaymSpecFields','BLUE-CASH','ServiceProviderId','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['PL-MBANK-XML','PL-MBANK-XML','PaymSpecFields','DOM','ServiceProviderId','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['PL-MBANK-XML','PL-MBANK-XML','PaymSpecFields','SORBNET','ServiceProviderId','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['PL-MBANK-XML','PL-MBANK-XML','PaymSpecFields','ELIXIR','ServiceProviderId','']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;
        

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;
       

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>