<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_CA_NATIONALBANK_CPA005</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_CA_NATIONALBANK_CPA005 Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_CA_NATIONALBANK_CPA005 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220406';
        dataContractVersion = '1.0';
        conFormatID = ['CA-NATIONALBANK-CPA005'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',1,'XXXXXXXXXX','Company Id','Company name','UUUUUUUUUUUUUUUU',1,'CA - NATIONAL BANK - CPA005',0,'','','CA-NATIONALBANK-CPA005',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,'1464',0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'CA-NATIONALBANK-CPA005',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('CA-NATIONALBANK-CPA005'):
                paymSpecList = this.getPaymSpecsMetaData_CA_NATIONALBANK_CPA005();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_CA_NATIONALBANK_CPA005</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_CA_NATIONALBANK_CPA005()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'Accounts Payable Direct Deposits Service','99','AP-DD','','AP-DD','TRADE PAY',0,'CA-NATIONALBANK-CPA005',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,2,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('CA-NATIONALBANK-CPA005'):
                notesList = this.getNotesMetaData_CA_NATIONALBANK_CPA005();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_CA_NATIONALBANK_CPA005</Name>
				<Source><![CDATA[
    private container getNotesMetaData_CA_NATIONALBANK_CPA005()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['CA-NATIONALBANK-CPA005','AP-DD','-Processing Center and Test file flag are stored on the EFT+ bank account > AP EFT+ > Wire/IAT ordering party tab. Originator A/C Number is not required for this payment specification.:-Client Id is stored in ID field and Client name is stored in Name field on EFT+ bank account > AP EFT+ > Wire/IAT ordering party tab.:-Originator\'s Short Name is stored in Originator\'s Short Name field on EFT+ bank account > AP EFT+ > Wire/IAT ordering party tab.:-Canadian Payment Association (CPA) Transaction Code is \'460\':-This payment specification does not support Vendor bank debits.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('CA-NATIONALBANK-CPA005'):
                validationsList = this.getValidationsMetaData_CA_NATIONALBANK_CPA005();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_CA_NATIONALBANK_CPA005</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_CA_NATIONALBANK_CPA005()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-NATIONALBANK-CPA005','AP-DD','','Bank Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ID','Header Record > Client Number > Position 11-20 and Payment Record > Client Number > Position 11-20 and 165-174','Id related to bank','15','WOrdPartyId','','',0,0,'','10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-NATIONALBANK-CPA005','AP-DD','','Bank Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Payment Record > Client Name > Position 135-164','Name related to bank','15','WOrdPartyName','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-NATIONALBANK-CPA005','AP-DD','','User\'s institution','Cash and bank management > Select bank account > edit > General (fast tab) Bank/Transit','Payment Record > User\'s institution > Position 194-202','Routing Number related to Bank',0,'RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-NATIONALBANK-CPA005','AP-DD','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Payment Record > CAD Financial Institution and Branch Transit > Position 44-52','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-NATIONALBANK-CPA005','AP-DD','','Vendor bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Payment Record > Account Number > Position 53-64','Account Number related to vendor bank','9','AccountNum','','',0,0,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-NATIONALBANK-CPA005','AP-DD','','Return account number','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','Payment Record > Account Number > Position 203-214','Account Number related to vendor bank',0,'AccountNum','','',0,0,1,'12',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CA-NATIONALBANK-CPA005','Opcode','Operation code']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Payroll Deposit','200']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Special Payroll','201']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Vacation Pay','202']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Overtime Pay','203']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Advance Payroll','204']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Commission Payroll','205']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Bonus Payroll','206']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Adjustment Payment','207']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Pension','230']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Federal Pension','231']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Provincial Pension','232']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Private Pension','233']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Annuity','240']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Dividend','250']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Common Dividend','251']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Preferred Dividend','252']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Investment','260']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Mutual Funds','261']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Spousal RSP Contribution','265']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','RESP Contribution','266']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','RSP Contribution','271']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Retirement Income Fund','272']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Tax Free Savings Account','273']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','RDSP Contribution','274']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Interest','280']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Lottery Prize Payment','281']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Miscellaneous Payments','450']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','Opcode','Accounts Payable','460']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData</Name>
				<Source><![CDATA[
    protected container getFormatLookupsMetaData(str _formatID)
    {
        container   formatLookupsList;

        //Metadata column names of data elements

        switch (_formatID)
        {
        }

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('CA-NATIONALBANK-CPA005'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_CA_NATIONALBANK_CPA005();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_CA_NATIONALBANK_CPA005</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_CA_NATIONALBANK_CPA005()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-NATIONALBANK-CPA005','CA-NATIONALBANK-CPA005','AP-DD','Opcode','Operation code',0,'Opcode','Accounts Payable',0,'','','Pos 20-37']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CA-NATIONALBANK-CPA005','CA-NATIONALBANK-CPA005','FormatValidations','AP-DD','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CA-NATIONALBANK-CPA005','CA-NATIONALBANK-CPA005','FormatValidations','AP-DD','15','W03']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CA-NATIONALBANK-CPA005','CA-NATIONALBANK-CPA005','FormatValidations','AP-DD','15','W02']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CA-NATIONALBANK-CPA005','TestFile','Test file (Y/N)']);

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','TestFile','Y','Y']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-NATIONALBANK-CPA005','TestFile','N','N']);

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('CA-NATIONALBANK-CPA005'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_CA_NATIONALBANK_CPA005();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_CA_NATIONALBANK_CPA005</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_CA_NATIONALBANK_CPA005()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-NATIONALBANK-CPA005','CA-NATIONALBANK-CPA005','UserName','Abbrivated user Name',1,'UserName','',1,'','XXXXXXXXXXXXXXX','Abbrivated user Name']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-NATIONALBANK-CPA005','CA-NATIONALBANK-CPA005','TestFile','Test file (Y/N)',0,'TestFile','',0,'','','Test file (Y/N)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-NATIONALBANK-CPA005','CA-NATIONALBANK-CPA005','Address','Addressee',1,'Address','',1,'','XXXXX','Addressee']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('CA-NATIONALBANK-CPA005'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('UserName', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('TestFile', gSKS_EFT_Bank.W02, true);
                }
                if(gSKS_EFT_Bank.W03)
                {
                    this.updateBankFields('Address', gSKS_EFT_Bank.W03);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>