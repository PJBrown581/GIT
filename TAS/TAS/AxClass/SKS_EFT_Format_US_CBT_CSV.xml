<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_CBT_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_CBT_CSV extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_US_CBT_CSV extends SKS_EFT_Format
{
    #define.FormatVersion('20220118')
    #define.Separator(',')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    [SuppressBPWarningAttribute("BPCheckNestedLoopinCode","Necessary to allow the processing of every invoice(inner loop) for every relevant parent file detail record(outer loop)")]
    protected void formatStructure()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        this.rec_Header();
    
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();
    
            // Get SKS_EFT_Bank
            this.getSKS_EFT_Bank();
    
            while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
            {
                if(invSKS_EFT_FileDetail.InvoiceNumber != '')
                {
                    // Details
                    this.rec_Details(invSKS_EFT_FileDetail);
                }
            }
            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Details</Name>
				<Source><![CDATA[
    public boolean rec_Details(SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //---------------------------------------------------------------------------------
        //Nbr   Description
        // 1    Buyer ID
        // 2    Instruction ID
        // 3    Gross Amount
        // 4    Invoice Number
        // 5    Invoice Amount
        // 6    Invoice Date
        // 7    Supplier ID
        //---------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        // 1    Buyer ID
        sb.Append(this.wrapField(mSKS_EFT_Bank.WOrdPartyId));
    
        // 2    Instruction ID
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 9));
    
        // 3    Gross Amount
        sb.Append(this.wrapField(num2str((mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur) * -1,0,2,1,0)));
    
        // 4    Invoice Number
        sb.Append(this.wrapField(_invSKS_EFT_FileDetail.InvoiceNumber, 30));
    
        // 5    Invoice Amount
        sb.Append(this.wrapField(num2str(_invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0)));
    
        // 6    Invoice Date
        sb.Append(this.wrapField(SKS_PP_StringFormats::strDateMMDDYYYY(_invSKS_EFT_FileDetail.InvoiceDate)));
    
        // 7    Supplier ID
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.AccountNum, 30, false));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Header</Name>
				<Source><![CDATA[
    public boolean rec_Header()
    {
        //---------------------------------------------------------------------------------
        //Nbr   Description
        // 1    Buyer ID
        // 2    Instruction ID
        // 3    Gross Amount
        // 4    Invoice Number
        // 5    Invoice Amount
        // 6    Invoice Date
        // 7    Supplier ID
        //---------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        // 1    Buyer ID
        sb.Append(this.wrapField('BUYER ID'));
    
        // 2    Instruction ID
        sb.Append(this.wrapField('INSTRUCTION ID'));
    
        // 3    Gross Amount
        sb.Append(this.wrapField('GROSS AMOUNT'));
    
        // 4    Invoice Number
        sb.Append(this.wrapField('INVOICE NUMBER'));
    
        // 5    Invoice Amount
        sb.Append(this.wrapField('INVOICE AMOUNT'));
    
        // 6    Invoice Date
        sb.Append(this.wrapField('INVOICE DATE'));
    
        // 7    Supplier ID
        sb.Append(this.wrapField('SUPPLIER ID', 0, false));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '', int _fieldLength = 0, boolean _addSeparator = true)
    {
        str text;
        ;
        if(_fieldLength > 0)
        {
            text = subStr(_field, 1, _fieldLength);
        }
        else
        {
            text = _field;
        }
        if(_addSeparator)
        {
            text += #Separator;
        }
        return text;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>