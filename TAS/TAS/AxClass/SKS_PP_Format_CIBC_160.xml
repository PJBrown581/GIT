<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_CIBC_160</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_CIBC_160 extends SKS_PP_Format_BankGroup
{
    BankAccount mBankAcct;
    BankRegNum  mBankTransit;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtFormatHeader</Name>
				<Source><![CDATA[
    // POS  1-1      Record type ID ('\\')
    // POS  3        Filler (Spaces)
    // POS  4 – 11   File type
    // POS  12 - 41  Legacy system identifier
    // POS  42       Filler (Space)
    // POS  43 – 46  Record length
    // POS  47 - 50  PROD indicator
    // POS  51 – 80  Filler
    protected str txtFormatHeader()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str legSysId;
        ;

        // 1    Record type ID
        sb.Append('\\\\');

        // 2    Filler
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 3    File type
        sb.Append(SKS_PP_StringFormats::strFill(8, 'AR', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 4    Legacy system identifier
        legSysId = subStr(mSKS_PP_FileDetail.BnkBankTransit, strLen(mSKS_PP_FileDetail.BnkBankTransit), -5) + '00000' + strAlpha(mSKS_PP_FileDetail.BnkBankAcct) + subStr(mSKS_PP_FileDetail.FileNbr, strLen(mSKS_PP_FileDetail.FileNbr), -3);

        sb.Append(SKS_PP_StringFormats::strFill(30, legSysId, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 5    Filler
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 6    Record length
        sb.Append('0160');

        // 7    PROD indicator
        sb.Append('PROD');

        // 8    Filler
        sb.Append(SKS_PP_StringFormats::strFill(30, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    // 01 - 05      Bank Transit Number
    // 06 - 17      Account Number
    // 18 - 25      Issue Date
    // 26 – 35      Cheque Serial Number
    // 36 - 45      Cheque Amount
    // 46           Record ID
    // 47 – 49      Filler
    // 50 – 64      Short Payee Name
    // 65 - 80      Filler
    // 81 - 160     Full Payee Name

    protected str txtDetail()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;

        // 1    Bank Transit Number
        sb.Append(SKS_PP_StringFormats::strFill(5,  mBankTransit, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 2    Account Number
        sb.Append(SKS_PP_StringFormats::strFill(12, strAlpha(mSKS_PP_FileDetail.BnkBankAcct), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        mBankAcct = mSKS_PP_FileDetail.BnkBankAcct;

        // 3    Issue Date
        sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(mSKS_PP_FileDetail.ChkDocDate));

        // 4    Cheque Serial Number
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 5    Cheque Amount
        sb.Append(SKS_PP_StringFormats::strMoney(mSKS_PP_FileDetail.ChkCuryAmt, 10));

        if(mSKS_PP_FileDetail.ChkType == SKS_PP_ChequeType::Cheque)
        {
            // 6    Record ID
            sb.Append('D');

            // 7    Filler
            sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            // 8    Short Payee Name
            sb.Append(SKS_PP_StringFormats::strFill(15, mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            // 9    Filler
            sb.Append(SKS_PP_StringFormats::strFill(16, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            // 10   Full Payee Name
            sb.Append(SKS_PP_StringFormats::strFill(80, mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            // 6    Record ID
            sb.Append('V');

            // 7    Filler
            sb.Append(SKS_PP_StringFormats::strFill(114, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupHeader</Name>
				<Source><![CDATA[
    // Pos 01 - 05      Bank Transit Number
    // Pos 06 – 17      Account Number
    // Pos 18 – 25      File Creation Date
    // Pos 26 - 45      Filler
    // Pos 46           Record ID
    // Pos 47 - 160     Filler
    protected str txtGroupHeader()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;

        // 1    Bank Transit Number
        mBankTransit = subStr(mSKS_PP_FileDetail.BnkBankTransit, strLen(mSKS_PP_FileDetail.BnkBankTransit), -5);
        
        sb.Append(SKS_PP_StringFormats::strFill(5, mBankTransit, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 2    Account Number
        sb.Append(SKS_PP_StringFormats::strFill(12, strAlpha(mSKS_PP_FileDetail.BnkBankAcct), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 3    File Creation Date
        sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));

        // 4    Filler
        sb.Append(SKS_PP_StringFormats::strFill(20, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 5    Record ID
        sb.Append('H');

        // 6    Filler
        sb.Append(SKS_PP_StringFormats::strFill(114, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupTrailer</Name>
				<Source><![CDATA[
    // 01 - 05      Bank Transit Number
    // 06 - 17      Account Number
    // 18 - 25      Issue Date
    // 26 – 45      Filler
    // 46           Record ID
    // 47 – 160     Filler

    protected str txtGroupTrailer()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;

        // 1    Bank Transit Number
        sb.Append(SKS_PP_StringFormats::strFill(5, mBankTransit, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 2    Account Number
        sb.Append(SKS_PP_StringFormats::strFill(12, strAlpha(mBankAcct), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 3    Issue Date
        sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));

        // 4    Filler
        sb.Append(SKS_PP_StringFormats::strFill(20, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 5    Record ID
        sb.Append('T');

        // 7    Filler
        sb.Append(SKS_PP_StringFormats::strFill(114, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>