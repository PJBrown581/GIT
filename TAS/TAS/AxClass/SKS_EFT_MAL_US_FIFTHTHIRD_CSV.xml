<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_MAL_US_FIFTHTHIRD_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_EFT_MAL_US_FIFTHTHIRD_CSV extends SKS_EFT_Mal
{
    #define.Separator(',')
    #define.DoubleQuotes('"')
    #define.Purpose('5TH3RD Vendor file primary contact')

    int TotAddCount;
    int TotUpdateCount;


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    //FIFTHTHIRD BANK Card payables
    //MVL Comma Delimited File
    //Header Record
    //Detail Record
    //Trailer Record
    protected void formatStructure()
    {
        //Header Record
        this.rec_MHeader();

        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_Bank
            this.getSKS_EFT_Bank();

            //Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();

            //Detail Record
            this.rec_MDetail();

            next mSKS_EFT_FileDetail;
        }

        //Trailer Record
        this.rec_MTrailer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_MDetail</Name>
				<Source><![CDATA[
    //Nbr   Content
    // 1    Record Type
    // 2    Function Code
    // 3    Vendor ID
    // 4    Vendor Tax ID
    // 5    Vendor Company Name
    // 6    Vendor Address Line 1
    // 7    Vendor Address Line 2
    // 8    Vendor Address Line 3
    // 9    Vendor City
    // 10   Vendor State
    // 11   Vendor Zip Code Main
    // 12   Vendor Zip Code Extension
    // 13   Vendor Country
    // 14   Vendor Contact Name
    // 15   Vendor Contact E-Mail
    // 16   Vendor Contact Phone
    // 17   Vendor Contact Fax
    // 18   Primary Client Contact Name
    // 19   Primary Client Contact Phone
    // 20   Primary Client Contact E-Mail
    // 21   Secondary Client Contact Name
    // 22   Secondary Client Contact Phone
    // 23   Secondary Client Contact E-Mail
    // 24   Vendor Type
    // 25   Master Vendor ID
    // 26   Filler - Spaces

    public boolean rec_MDetail()
    {
        System.Text.StringBuilder   sb = new System.Text.StringBuilder();
        ;

        // 1    Record Type
        sb.Append(this.wrapField('D'));

        //2    Function Code

        if(mSKS_EFT_VendorPaym.MALStatus == SKS_EFT_MALStatus::New)
        {
            sb.Append(this.wrapField('A'));
            TotAddCount++;
        }
        else if(mSKS_EFT_VendorPaym.MALStatus == SKS_EFT_MALStatus::Update)
        {
            sb.Append(this.wrapField('U'));
            TotUpdateCount++;
        }

        // 3    Vendor ID
        sb.Append(this.wrapField(mSKS_EFT_VendorPaym.VendAccount, true, 20, true));

        // 4    Vendor Tax ID
        sb.Append(this.wrapField(''));

        // 5    Vendor Company Name
        sb.Append(this.wrapField(mSKS_EFT_VendorPaym.WBeneName, true, 30, true));

        // 6    Vendor Address Line 1
        sb.Append(this.wrapField(mSKS_EFT_VendorPaym.WBeneAddr, true, 30, true));

        // 7    Vendor Address Line 2
        sb.Append(this.wrapField(mSKS_EFT_VendorPaym.WBeneAddr2, true, 30, true));

        // 8    Vendor Address Line 3
        sb.Append(this.wrapField(''));

        // 9    Vendor City
        sb.Append(this.wrapField(mSKS_EFT_VendorPaym.WBeneCity, true, 20, true));

        // 10   Vendor State
        sb.Append(this.wrapField(mSKS_EFT_VendorPaym.WBeneState, true, 2));

        // 11   Vendor Zip Code Main
        sb.Append(this.wrapField(mSKS_EFT_VendorPaym.WBeneZipPostal, true, 5));

        // 12   Vendor Zip Code Extension
        sb.Append(this.wrapField(''));

        // 13   Vendor Country
        sb.Append(this.wrapField(this.getLogisticsAddressCountryISO(mSKS_EFT_VendorPaym.WBeneCountryRegionId), true, 20));

        // 14   Vendor Contact Name
        sb.Append(this.wrapField(this.getContactName(mSKS_EFT_VendorPaym.LogisticsElectronicAddressRecId), true, 30, true));

        // 15   Vendor Contact E-Mail
        sb.Append(this.wrapField(this.getContactEmail(mSKS_EFT_VendorPaym.LogisticsElectronicAddressRecId), true, 64, true));

        // 16   Vendor Contact Phone
        sb.Append(this.wrapField(this.getAddressContactInfo(mSKS_EFT_VendorPaym.WBeneRemittanceLocation, LogisticsElectronicAddressMethodType::Phone), true, 10));

        // 17   Vendor Contact Fax
        sb.Append(this.wrapField(''));

        // 18   Primary Client Contact Name
        sb.Append(this.wrapField(this.findElectronicAddressInfoByPartyLocationRole(CompanyInfo::findDataArea(mSKS_EFT_FileDetail.AccountCompany).RecId, #Purpose), true, 30, true));

        // 19   Primary Client Contact Phone
        sb.Append(this.wrapField(strKeep(this.findElectronicAddressInfoByPartyLocationRole(CompanyInfo::findDataArea(mSKS_EFT_FileDetail.AccountCompany).RecId, #Purpose, LogisticsElectronicAddressMethodType::Phone),'0123456789'), true, 10));

        // 20   Primary Client Contact E-Mail
        sb.Append(this.wrapField(this.findElectronicAddressInfoByPartyLocationRole(CompanyInfo::findDataArea(mSKS_EFT_FileDetail.AccountCompany).RecId, #Purpose, LogisticsElectronicAddressMethodType::Email), true, 64));

        // 21   Secondary Client Contact Name
        sb.Append(this.wrapField(''));

        // 22   Secondary Client Contact Phone
        sb.Append(this.wrapField(''));

        // 23   Secondary Client Contact E-Mail
        sb.Append(this.wrapField(''));

        // 24   Vendor Type
        sb.Append(this.wrapField(''));

        // 25   Master Vendor ID
        sb.Append(this.wrapField(''));

        // 26   Filler - Spaces
        sb.Append(this.wrapField('', false));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_MHeader</Name>
				<Source><![CDATA[
    //Nbr   Content
    // 1    Record Type
    // 2    File Type
    // 3    Filler - Space
    // 4    Client ID
    // 5    Filler - Space
    // 6    Date Created
    // 7    Filler - Space
    // 8    Time Created
    // 9    Filler - Spaces

    public boolean rec_MHeader()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;

        // 1    Record Type
        sb.Append(this.wrapField('H'));

        // 2    File Type
        sb.Append(this.wrapField('CCPVN'));

        // 3    Filler - Space
        sb.Append(this.wrapField(' '));

        // 4    Client ID
        sb.Append(this.wrapField(mSKS_EFT_Bank.WOrdPartyId, true, 6, true));

        // 5    Filler - Space
        sb.Append(this.wrapField(' '));

        // 6    Date Created
        sb.Append(this.wrapField(SKS_PP_StringFormats::strDateMMDDYYYY(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()), DateSeparator::Slash)));

        // 7    Filler - Space
        sb.Append(this.wrapField(' '));

        // 8    Time Created
        sb.Append(this.wrapField(time2Str(DateTimeUtil::getTimeNow(DateTimeUtil::getUserPreferredTimeZone()), TimeSeparator::Colon, TimeFormat::Hour24)));

        // 9    Filler - Spaces
        sb.Append(this.wrapField(' '));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_MTrailer</Name>
				<Source><![CDATA[
    //Nbr   Content
    // 1    Record Type
    // 2    Filler - Space
    // 3    Total Add Records
    // 4    Filler - Space
    // 5    Total Update Records
    // 6    Filler - Space
    // 7    Total Terminate Records
    // 8    Filler - Space
    // 9    Total Remove Records
    // 10   Filler - Spaces

    public boolean rec_MTrailer()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;

        // 1    Record Type
        sb.Append(this.wrapField('T'));

        // 2    Filler - Space
        sb.Append(this.wrapField(''));

        // 3    Total Add Records
        sb.Append(this.wrapField(num2str(TotAddCount, 0, 0, 0, 0), true, 5));

        // 4    Filler - Space
        sb.Append(this.wrapField(''));

        // 5    Total Update Records
        sb.Append(this.wrapField(num2str(TotUpdateCount, 0, 0, 0, 0), true, 5));

        // 6    Filler - Space
        sb.Append(this.wrapField(''));

        // 7    Total Terminate Records
        sb.Append(this.wrapField('0'));

        // 8    Filler - Space
        sb.Append(this.wrapField(''));

        // 9    Total Remove Records
        sb.Append(this.wrapField('0'));

        // 10   Filler - Spaces
        sb.Append(this.wrapField('', false));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '', boolean _addSeparator = true, int _fieldLength = 0, boolean quotes = false)
    {
        str text;
        ;
        if(_fieldLength > 0)
        {
            text = subStr(_field, 1, _fieldLength);
        }
        else
        {
            text = _field;
        }
        if(quotes && text != '')
        {
            text = #DoubleQuotes + text + #DoubleQuotes;
        }
        if(_addSeparator)
        {
            text += #Separator;
        }
        return text;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>