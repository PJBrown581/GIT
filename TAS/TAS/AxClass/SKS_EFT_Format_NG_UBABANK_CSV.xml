<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_NG_UBABANK_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_NG_UBABANK_CSV  extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_NG_UBABANK_CSV  extends SKS_EFT_Format
{
    #define.FormatVersion('20230317')
    #define.IFT('IFT')
    #define.ACH('ACH')

    #define.Separator(',')
    #define.DoubleQuote('"')
    str purposeText;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '', boolean _addSeparator = true)
    {
        str text;

        text = _field;

        if(_addSeparator)
        {
            if(text != '' && strContains(text, ','))
            {
                text = #DoubleQuote + text + #DoubleQuote + #Separator;
            }
            else
            {
                text = text + #Separator;
            }
        }
        else
        {
            text = _field;
        }

        return text;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        //  Header Record
        this.rec_Header();

        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            // Payment Details
            this.rec_PaymentDetails();

            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Header</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_Header
    /// </summary>
    /// <returns>boolean</returns>
    private boolean rec_Header()
    {
        
        //1     #RECORDTYPE
        //2     DEBIT_ACCOUNT_NUMBER
        //3     BENEFICIARY_NAME
        //4     BENEFICIARY_ACCOUNT
        //5     BENEFICIARY_BANKCODE
        //6     CURRENCY
        //7     AMOUNT
        //8     DATE
        //9     FREQUENCY
        //10    NO_OF_PAYMENTS
        //11    NARRATION
        //12    BRANCH_CODE
        //13    RIB_CODE
        //----------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        //1     #RECORDTYPE
        sb.Append(this.wrapField('#RECORDTYPE'));

        //2     DEBIT_ACCOUNT_NUMBER
        sb.Append(this.wrapField('DEBIT_ACCOUNT_NUMBER'));

        //3     BENEFICIARY_NAME
        sb.Append(this.wrapField('BENEFICIARY_NAME'));

        //4     BENEFICIARY_ACCOUNT
        sb.Append(this.wrapField('BENEFICIARY_ACCOUNT'));

        //5     BENEFICIARY_BANKCODE
        sb.Append(this.wrapField('BENEFICIARY_BANKCODE'));

        //6     CURRENCY
        sb.Append(this.wrapField('CURRENCY'));

        //7     AMOUNT
        sb.Append(this.wrapField('AMOUNT'));

        //8     DATE
        sb.Append(this.wrapField('DATE')); 

        //9     FREQUENCY
        sb.Append(this.wrapField('FREQUENCY'));

        //10    NO_OF_PAYMENTS
        sb.Append(this.wrapField('NO_OF_PAYMENTS'));

        //11    NARRATION
        sb.Append(this.wrapField('NARRATION'));

        //12    BRANCH_CODE
        sb.Append(this.wrapField('BRANCH_CODE'));

        //13    RIB_CODE
        sb.Append(this.wrapField('RIB_CODE',false));

        this.fileWrite(sb.ToString());

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_PaymentDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_PaymentDetails
    /// </summary>
    /// <returns>boolean</returns>
    boolean rec_PaymentDetails()
    {
        //1     #RECORDTYPE
        //2     DEBIT_ACCOUNT_NUMBER
        //3     BENEFICIARY_NAME
        //4     BENEFICIARY_ACCOUNT
        //5     BENEFICIARY_BANKCODE
        //6     CURRENCY
        //7     AMOUNT
        //8     DATE
        //9     FREQUENCY
        //10    NO_OF_PAYMENTS
        //11    NARRATION
        //12    BRANCH_CODE
        //13    RIB_CODE
        //----------------------------------------------------------------------

        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        //1     #RECORDTYPE
        sb.Append(this.wrapField(mSKS_EFT_FileFormatPaymSpec.TransactionCode));

        //2     DEBIT_ACCOUNT_NUMBER
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.BankBankAcct));

        //3     BENEFICIARY_NAME
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName)));

        //4     BENEFICIARY_ACCOUNT
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepBankAcct));

        //5     BENEFICIARY_BANKCODE
        sb.Append(this.wrapField(SKS_EFT_Format::getCodelookupvalue('BankCode',mSKS_EFT_FileDetail.RecId)));

        //6     CURRENCY
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.PaymentCurrencyCode));

        //7     AMOUNT
        sb.Append(this.wrapField(num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0)));

        //8     DATE
        sb.Append(this.wrapField(strUpr(date2str(mSKS_EFT_FileDetail.PaymentTransDate, 123, DateDay::Digits2, DateSeparator::Slash, DateMonth::Digits2, DateSeparator::Slash, DateYear::Digits4)))); //SKS#DevOps:16054

        //9     FREQUENCY
        sb.Append(this.wrapField(SKS_EFT_Format::getCodelookupvalue('Frequency',mSKS_EFT_FileDetail.RecId)));

        //10    NO_OF_PAYMENTS
        sb.Append(this.wrapField('1'));

        //11    NARRATION
        msks_EFT_FileDetail_PaymentLine = sks_EFT_FileDetail_PaymentLine::find(mSKS_EFT_FileDetail.RecId);
        purposeText = mSKS_EFT_FileDetail.PaymentReference;
        if(msks_EFT_FileDetail_PaymentLine.TransactionTxt)
        {
            purposeText += msks_EFT_FileDetail_PaymentLine.TransactionTxt;
        }
        sb.Append(this.wrapField(this.CharacterReplacement(purposeText)));

        //12    BRANCH_CODE
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepBankTransit));

        //13    RIB_CODE
        sb.Append(this.wrapField(SKS_EFT_Format::getCodelookupvalue('RIBCode',mSKS_EFT_FileDetail.RecId),false));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
            join mSKS_EFT_FileDetail_BenBank
            join mSKS_EFT_FileDetail_Intermediary
              order by mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_BenBank.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_Intermediary.RefRecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>