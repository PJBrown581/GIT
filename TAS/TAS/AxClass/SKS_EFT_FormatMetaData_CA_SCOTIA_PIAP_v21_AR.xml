<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_CA_SCOTIA_PIAP_v21_AR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_CA_SCOTIA_PIAP_v21_AR Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_CA_SCOTIA_PIAP_v21_AR Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20221109';
        dataContractVersion = '1.0';
        conFormatID = ['CA-SCOTIA-PIAP-v21-AR'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,1,0,0,0,'','','','',0,'','','Customer name','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',1,'Canada - Scotia bank - PIAP version 2.1.0 - AR','','','','CA-SCOTIA-PIAP-v21-AR',1,'','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,0,'',0,'','','','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'CA-SCOTIA-PIAP-v21-AR',1]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('CA-SCOTIA-PIAP-v21-AR'):
                paymSpecList = this.getPaymSpecsMetaData_CA_SCOTIA_PIAP_v21_AR();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_CA_SCOTIA_PIAP_v21_AR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_CA_SCOTIA_PIAP_v21_AR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'DIRECT PAY',0,0,0,1,1,'Payment - 460',1,'PMT-460','','PMT-460','',0,'CA-SCOTIA-PIAP-v21-AR',0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,2,0,0,0,1,2,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('CA-SCOTIA-PIAP-v21-AR'):
                notesList = this.getNotesMetaData_CA_SCOTIA_PIAP_v21_AR();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_CA_SCOTIA_PIAP_v21_AR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_CA_SCOTIA_PIAP_v21_AR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['CA-SCOTIA-PIAP-v21-AR','PMT-460','-eBanking Suite > Bank Account > AR EFT+ > FIle Info(fast tab):--Customer number is stored in this tab.:--Payee (DFI) Indentification Number is stored in this tab.:-eBanking Suite > Bank Account > AR EFT+ > Company Info(fast tab):--Customer name is stored in this tab.::-Customer eBanking Details > Account info (Fast tab):--Institution Code is stored in this tab:--Originator Short Name is stored in this tab']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('CA-SCOTIA-PIAP-v21-AR'):
                validationsList = this.getValidationsMetaData_CA_SCOTIA_PIAP_v21_AR();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_CA_SCOTIA_PIAP_v21_AR</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_CA_SCOTIA_PIAP_v21_AR()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-SCOTIA-PIAP-v21-AR','PMT-460','','Routing number','TAS > Common > Customer eBanking details> Customer bank accounts > General tab > Identification(group) > Routing number','Batch Header Record > Debit Bank (DFI) Identification Number','Routing number related to Customer',1,'RegistrationNum','','','3',0,1,'11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-SCOTIA-PIAP-v21-AR','PMT-460','','SWIFT code','TAS > Common > Customer eBanking details > Payment specifications > Customer bank accounts > General tab > Identification(group) > SWIFT code','Batch Header Record > Debit Bank (DFI) Identification Number','Customer BIC',1,'SWIFTNo','','','3',0,1,'11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-SCOTIA-PIAP-v21-AR','PMT-460','','Bank account number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Bank account number','Batch Header Record > Debit Bank Account','Bank account number related to customer',1,'AccountNum','','',0,0,1,'50',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-SCOTIA-PIAP-v21-AR','PMT-460','','Country/Region','Customer eBanking details > Select a customer > Customer bank accounts > Address > Country/region','Batch Header Record > Country Code','Country related to customer bank','8','CountryRegionId','','',0,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-SCOTIA-PIAP-v21-AR','PMT-460','','Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','Payment Record > Payee (DFI) Indentification Number','Swift code related to Bank',0,'SWIFTNo','','','3',0,1,'11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-SCOTIA-PIAP-v21-AR','PMT-460','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','Payment Record > Payee (DFI) Indentification Number','Routing number related to Bank',0,'RegistrationNum','','','3',0,1,'11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-SCOTIA-PIAP-v21-AR','PMT-460','','IBAN','Cash and bank management > Select bank account > edit > General (fast tab) > IBAN','Payment Record > Payee IBAN','Bank IBAN',0,'IBAN','','',1,0,1,'50',0,1]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('CA-SCOTIA-PIAP-v21-AR'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_CA_SCOTIA_PIAP_v21_AR();
                break;
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_CA_SCOTIA_PIAP_v21_AR</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_CA_SCOTIA_PIAP_v21_AR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-SCOTIA-PIAP-v21','CA-SCOTIA-PIAP-v21-AR','PMT-460','InstitutionCode','Institution Code',1,'InstitutionCode','',0,'','XXX','Institution Code']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-SCOTIA-PIAP-v21','CA-SCOTIA-PIAP-v21-AR','PMT-460','OrgShortNm','Originator Short Name',1,'OrgShortNm','',0,'','XXXXXXXXXXXXXXX','Originator Short Name']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('CA-SCOTIA-PIAP-v21-AR'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_CA_SCOTIA_PIAP_v21_AR();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_CA_SCOTIA_PIAP_v21_AR</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_CA_SCOTIA_PIAP_v21_AR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-SCOTIA-PIAP-v21-AR','CA-SCOTIA-PIAP-v21-AR','CustNum','Customer number',1,'CustNum','',1,'','XXXXXXXXXXXXXXXXXXXX','Customer number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-SCOTIA-PIAP-v21-AR','CA-SCOTIA-PIAP-v21-AR','InstitutnCode','Institution Code',1,'InstitutnCode','',0,'','XXX','Institution Code']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateARBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateARBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('CA-SCOTIA-PIAP-v21-AR'):
                if(gSKS_EFTAR_Bank.W01)
                {
                    this.updateARBankFields('CustNum', gSKS_EFTAR_Bank.W01);
                }
                if(gSKS_EFTAR_Bank.W02)
                {
                    this.updateARBankFields('InstitutnCode', gSKS_EFTAR_Bank.W02);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCustomerCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating customer code lookpus from BE0X
    /// </summary>
    protected void updateCustomerCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('CA-SCOTIA-PIAP-v21-AR'):
                if(gSKS_EFT_CustomerPaym.BE01)
                {
                    this.updateCustomerFields('InstitutionCode', gSKS_EFT_CustomerPaym.BE01);
                }
                if(gSKS_EFT_CustomerPaym.BE02)
                {
                    this.updateCustomerFields('OrgShortNm', gSKS_EFT_CustomerPaym.BE02);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>