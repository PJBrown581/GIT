<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_IHB_InhousePrintStatementController</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_IHB_InhousePrintStatementController extends SKS_IHB_InhouseBankStatementController
{
    RecId   recidStatement;
    SKS_IHB_InhouseBankAccountsStatementDetails inhouseBankStatement;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        SKS_IHB_InhousePrintStatementController::construct(_args).startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Construct the <c>SKS_APR_RemitAttachController</c> object.
    /// </summary>
    public static SKS_IHB_InhousePrintStatementController construct(Args _args)
    {
        SKS_IHB_InhousePrintStatementController   controller  = new SKS_IHB_InhousePrintStatementController();
        controller.parmReportName(ssrsReportStr(SKS_IHB_InhouseBankStatementReport, BankStatement));
        controller.parmArgs(_args);
        controller.parmShowDialog(false);
        
        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    public void prePromptModifyContract()
    {
        SKS_IHB_InhouseBankAccountsStatementDetails inhouseBankAccountStatement;
        inhouseBankAccountStatement = this.parmArgs().record();
        SKS_IHB_InhousePrintStatementContract contract = this.parmReportContract().parmRdpContract() as SKS_IHB_InhousePrintStatementContract;
        contract.parmstatementTableRecId(inhouseBankAccountStatement.RecId);
        contract.parmstatementTableAccountId(inhouseBankAccountStatement.AccountId);
        contract.parmstatementTablestmtDate(inhouseBankAccountStatement.StatementDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRange</Name>
				<Source><![CDATA[
    public void setRange(Query _query)
    {
        SKS_IHB_InhouseBankAccountsStatementDetails inhouseBankAccountStatement;
        QueryBuildDataSource        qbds;        
        FormDataSource              inhouseBankAccountStatement_ds;
        FormRun                     caller;
        MultiSelectionHelper        helper;


        if (this.parmArgs() && this.parmArgs().dataset() == (tablenum(SKS_IHB_InhouseBankAccountsStatementDetails)))
        {
            inhouseBankAccountStatement = this.parmArgs().record();
            inhouseBankAccountStatement_ds = inhouseBankAccountStatement.dataSource();
            caller  =  this.parmArgs().caller();
            helper  = MultiSelectionHelper::createFromCaller(caller);

            qbds    = _query.dataSourceTable(tablenum(SKS_IHB_InhouseBankAccountsStatementDetails));           
            helper.createQueryRanges(qbds, fieldStr(SKS_IHB_InhouseBankAccountsStatementDetails, RecId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the report Name SKS_APR_RemitAttachmentDetail.
    /// </summary>
    /// <param name = "calledFromInitParmDefault"></param>
    protected void initializeParameters(boolean calledFromInitParmDefault)
    {
        this.parmReportName(ssrsReportStr(SKS_IHB_InhouseBankStatementReport, BankStatement));
        super(calledFromInitParmDefault);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getstatementTableRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the record ID of the journal record that should be passed to the contract.
    /// </summary>
    /// <returns>
    /// The record ID of the journal record.
    /// </returns>
    protected RecId getstatementTableRecId()
    {
        return inhouseBankStatement.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataContractRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>VendPurchOrderJour</c> record.
    /// </summary>
    /// <param name="_common">
    /// The <c>VendPurchOrderJour</c> record.
    /// </param>
    protected void setDataContractRecord(Common _common)
    {
        inhouseBankStatement = args.record();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>