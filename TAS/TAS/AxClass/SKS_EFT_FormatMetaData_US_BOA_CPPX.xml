<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_BOA_CPPX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_BOA_CPPX Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_US_BOA_CPPX Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20230428';
        dataContractVersion = '1.0';
        conFormatID = ['US-BOA-CPPX'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'US - Bank of America - Comprehensive Payables/Paymode - X',0,'','','US-BOA-CPPX',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,1,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-BOA-CPPX',0,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-BOA-CPPX'):
                paymSpecList = this.getPaymSpecsMetaData_US_BOA_CPPX();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_BOA_CPPX</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_BOA_CPPX()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check - Standard',1,'CHK-S','','CHK-S','TRADE PAY',0,'US-BOA-CPPX',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ePayables (CCC)',1,'CCC','','ePay-CC','DIRECT PAY',0,'US-BOA-CPPX',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Paymode-X',1,'CDA','','Paymode-X','DIRECT PAY',0,'US-BOA-CPPX',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire',1,'WIRE','','WIRE','DIRECT PAY',0,'US-BOA-CPPX',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-BOA-CPPX'):
                notesList = this.getNotesMetaData_US_BOA_CPPX();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_BOA_CPPX</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_BOA_CPPX()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-CPPX','CHK-S','-Buyer account number is set on the Payment ID field on the Invoice tab of the Invoice Journal or on the Payment ID field in Payment Journal.::-The Divert code is set in the Mail handling field on Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications and will default to No if left blank.::-Purchase order information comes from the Accounts payable > All Purchase orders']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-CPPX','ePay-CC','-Buyer account number is set on the Payment ID field on the Invoice tab of the Invoice Journal or on the Payment ID field in Payment Journal.::-Purchase order information comes from the Accounts payable > All Purchase orders']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-CPPX','Paymode-X','-Buyer account number is set on the Payment ID field on the Invoice tab of the Invoice Journal or on the Payment ID field in Payment Journal.:-Disbursing Paymode-X Account ID is recommended and stored on the Disbursing Paymode-X id field on Wire/IAT ordering party tab of AP EFT+ bank account screen.:-Collecting Paymode-X Account ID is required and is stored on the Collecting Paymode-X id field of the Account info tab of Vendor eBanking details > Payment specification defaults.::-Purchase order information comes from the Accounts payable > All Purchase orders']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-CPPX','Wire','-Buyer account number is set on the Payment ID field on the Invoice tab of the Invoice Journal or on the Payment ID field in Payment Journal.::-Beneficiary Bank Account Type can be set to either Savings or Checking and will default to Checking if not set to Savings. It is stored in the Bank account type field on Vendor eBanking details - Payment specifications - Vendor bank accounts.::-Purchase order information comes from the Accounts payable > All Purchase orders']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-BOA-CPPX'):
                validationsList = this.getValidationsMetaData_US_BOA_CPPX();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_BOA_CPPX</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_BOA_CPPX()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','CHK-S','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','P type Records > 9th Position > Beneficiary Name','Beneficiary Name','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','CHK-S','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','P type Records > 11th Position > Vendor Address Line 1','Vendor Address Line 1','16','WBeneAddr','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','CHK-S','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','P type Records > 12th and 13th Position > Vendor Address Line 2','Vendor Address Line 2','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','CHK-S','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','P type Records > 14th Position > Vendor City','Vendor City','16','WBeneCity','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','CHK-S','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','P type Records > 15th Position > Vendor State','Vendor State','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','CHK-S','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','P type Records > 16th Position > Vendor Zip','Vendor Zip','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','CHK-S','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','P type Records > 17th Position > Vendor Country','Vendor Country','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','CHK-S','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','P type Records > 4th Position > Disbursing Bank ID (ABA Routing Transit)','Disbursing Bank ID (ABA Routing Transit',0,'RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','CHK-S','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','P type Records > 5th Position >Disbursing Bank Account','Disbursing Bank Account',0,'AccountNum','','',0,0,1,'17',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','ePay-CC','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','P type Records > 9th Position > Beneficiary Name','Beneficiary Name','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','ePay-CC','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','P type Records > 11th Position > Vendor Address Line 1','Vendor Address Line 1','16','WBeneAddr','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','ePay-CC','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','P type Records > 12th and 13th Position > Vendor Address Line 2','Vendor Address Line 2','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','ePay-CC','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','P type Records > 14th Position > Vendor City','Vendor City','16','WBeneCity','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','ePay-CC','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','P type Records > 15th Position > Vendor State','Vendor State','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','ePay-CC','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','P type Records > 16th Position > Vendor Zip','Vendor Zip','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','ePay-CC','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','P type Records > 17th Position > Vendor Country','Vendor Country','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','ePay-CC','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','P type Records > 4th Position > Disbursing Bank ID (ABA Routing Transit)','Disbursing Bank ID (ABA Routing Transit',0,'RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','ePay-CC','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','P type Records > 5th Position >Disbursing Bank Account','Disbursing Bank Account',0,'AccountNum','','',0,0,1,'17',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Paymode-X','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','P type Records > 9th Position > Beneficiary Name','Beneficiary Name','16','WBeneName','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Paymode-X','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','P type Records > 11th Position > Vendor Address Line 1','Vendor Address Line 1','16','WBeneAddr','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Paymode-X','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','P type Records > 12th and 13th Position > Vendor Address Line 2','Vendor Address Line 2','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Paymode-X','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','P type Records > 14th Position > Vendor City','Vendor City','16','WBeneCity','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Paymode-X','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','P type Records > 15th Position > Vendor State','Vendor State','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Paymode-X','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','P type Records > 16th Position > Vendor Zip','Vendor Zip','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Paymode-X','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','P type Records > 17th Position > Vendor Country','Vendor Country','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Paymode-X','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','P type Records > 4th Position > Disbursing Bank ID (ABA Routing Transit)','Disbursing Bank ID (ABA Routing Transit',0,'RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Paymode-X','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','P type Records > 5th Position >Disbursing Bank Account','Disbursing Bank Account',0,'AccountNum','','',0,0,1,'17',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Wire','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','P type Records > 9th Position > Beneficiary Name','Beneficiary Name','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Wire','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','P type Records > 11th Position > Vendor Address Line 1','Vendor Address Line 1','16','WBeneAddr','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Wire','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','P type Records > 12th and 13th Position > Vendor Address Line 2','Vendor Address Line 2','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Wire','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','P type Records > 14th Position > Vendor City','Vendor City','16','WBeneCity','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Wire','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','P type Records > 15th Position > Vendor State','Vendor State','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Wire','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','P type Records > 16th Position > Vendor Zip','Vendor Zip','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Wire','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','P type Records > 17th Position > Vendor Country','Vendor Country','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Wire','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','P type Records > 4th Position > Disbursing Bank ID','Disbursing Bank ID',0,'SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Wire','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','P type Records > 4th Position > Disbursing Bank ID (ABA Routing Transit)','Disbursing Bank ID (ABA Routing Transit',0,'RegistrationNum','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Wire','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','P type Records > 5th Position >Disbursing Bank Account','Disbursing Bank Account',0,'IBAN','','',1,1,1,'17',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Wire','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','P type Records > 5th Position >Disbursing Bank Account','Disbursing Bank Account',0,'AccountNum','','',1,1,1,'17',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Wire','','SWIFT code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > SWIFT code','P type Records > 28th Position > Beneficiary Bank ID','Beneficiary Bank ID','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Wire','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','P type Records > 28th Position > Beneficiary Bank ID','Beneficiary Bank ID','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Wire','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','P type Records > 30th Position > Beneficiary Account Number','Beneficiary Account Number','9','BankIBAN','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Wire','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','P type Records > 30th Position > Beneficiary Account Number','Beneficiary Account Number','9','AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Wire','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','P type Records > 31th Position > Beneficiary Bank Name','Beneficiary Bank Name','16','WBenBankName','','',1,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Wire','','Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Address','P type Records > 32th Position > Beneficiary Bank Address line 1','Beneficiary Bank Address line 1','16','WBenBankAddr','','',0,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Wire','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','P type Records > 34th Position > Beneficiary Bank City','Beneficiary Bank City','16','WBenBankCity','','',0,1,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CPPX','Wire','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','P type Records > 37th Position > Beneficiary Bank City','Beneficiary Bank Country Code','16','WBenBankCountryRegionId','','',0,1,'','',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-BOA-CPPX','DivertCode','Divert Code']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-CPPX','DivertCode','Yes','YES']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-CPPX','DivertCode','No','NO']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('US-BOA-CPPX'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_BOA_CPPX();
                break;
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_BOA_CPPX</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_BOA_CPPX()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-CPPX','US-BOA-CPPX','CHK-S','DivertCode','Divert Code',0,'DivertCode','',1,'','','DivertCode']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-CPPX','US-BOA-CPPX','ePay-CC','DivertCode','Divert Code',0,'DivertCode','',1,'','','DivertCode']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-CPPX','US-BOA-CPPX','Paymode-X','DivertCode','Divert Code',0,'DivertCode','',1,'','','DivertCode']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-CPPX','US-BOA-CPPX','WIRE','DivertCode','Divert Code',0,'DivertCode','',1,'','','DivertCode']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-CPPX','US-BOA-CPPX','Paymode-X','CollctngPaymodexId','Collecting Paymode-X id',1,'CollctngPaymodexId','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXX','P type Records > 5th Position > Paymode-X Account ID']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-CPPX','US-BOA-CPPX','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-CPPX','US-BOA-CPPX','FormatValidations','*','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-CPPX','US-BOA-CPPX','FormatValidations','*','16','BE01']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch(_formatID)
        {
            case ('US-BOA-CPPX'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_BOA_CPPX();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_BOA_CPPX</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_BOA_CPPX()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-CPPX','US-BOA-CPPX','PaymodexId','Disbursing Paymode-X id',1,'PaymodexId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','P type Records > 3th Position > Disbursing Paymode-X ID']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        if(gSKS_EFT_Bank.W01)
        {
            this.updateBankFields('PaymodexId', gSKS_EFT_Bank.W01);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        if(gSKS_EFT_VendorPaym.BE01)
        {
            this.updateVendorFields('CollctngPaymodexId', gSKS_EFT_VendorPaym.BE01);
        }
        if(gSKS_EFT_VendorPaym.WBeneMailHandling)
        {
            this.updateVendorFields('DivertCode', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>