<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_SVB_FCS_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_SVB_FCS_CSV Extends SKS_PP_Format_BankGroup
{
        //Silicon Valley csv
        // Transaction type: IA, ID, VA, VD
        // BANK ABA Number (9 digits)
        // Bank Account Number
        // Check Num
        // Payment/Check date
        // Check Amt
        // Vend Payee
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        int Mult;
        str ItemType;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str Comma = ',';
        str locTempChkRefNum;
        ;
    
        //Convert negative void numbers to positives
        Mult = 1;
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'VA';
            if(mSKS_PP_FileDetail.chkcuryamt < 0)
            {
                Mult = -1;
            }
        }
        else
        {
            ItemType = 'IA';
        }
    
        sb.Append(ItemType);
        sb.Append(Comma);
        sb.Append(mSKS_PP_FileDetail.BnkBankAcct);
        sb.Append(Comma);
        locTempChkRefNum = mSKS_PP_FileDetail.ChkRefNbr;
        sb.Append(locTempChkRefNum);
        sb.Append(Comma);
        sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(Comma);
        sb.Append(Num2Str(mSKS_PP_FileDetail.ChkCuryAmt * Mult,1, 2, 1,0));
        sb.Append(Comma);
    
        if(strContains(mSKS_PP_FileDetail.VendName, ','))
        {
            sb.Append('"');
        }
        sb.Append(mSKS_PP_FileDetail.VendName);
        if(strContains(mSKS_PP_FileDetail.VendName, ','))
        {
            sb.Append('"');
        }
    
        Return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>