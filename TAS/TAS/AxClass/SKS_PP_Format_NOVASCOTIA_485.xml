<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_NOVASCOTIA_485</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_NOVASCOTIA_485 Extends SKS_PP_Format_BankGroup
{
    int chkCount;
    real chkSum;
    int printFooter;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    // 1-1    Record Type ('J')
    // 2-10   Routing Number
    // 11-17  Filler (Spaces)
    // 18-24  Account Number
    // 25-38  Payment ID (Check Number)
    // 39-48  Payment Amount
    // 49-60  Payment Status ('CHECK' or 'VOID')
    // 61-68  Payment Date (YYYYMMDD)
    // 68-158 Filler (Spaces)
    // 159-161 Currency Code ('CAD')
    // 221-252 Address
    // 253-485 Filler (Spaces)
    protected str txtDetail()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        int Mult = 1;
        str ItemType;
        ;
    
    
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'VOID';
            if(mSKS_PP_FileDetail.ChkCuryAmt < 0)
            {
               Mult = -1;
            }
        }
        else
        {
            ItemType = 'CHECK';
        }
    
        chkCount++;
        chkSum = chkSum + mSKS_PP_FileDetail.ChkCuryAmt;
    
        sb.Append('J');
        sb.Append(SKS_PP_StringFormats::strFill(9,  mSKS_PP_FileDetail.BnkBankTransit, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(7, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(7, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(14, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(Mult * mSKS_PP_FileDetail.ChkCuryAmt, 10));
        sb.Append(SKS_PP_StringFormats::strFill(12, ItemType, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(SKS_PP_StringFormats::strFill(90, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append('CAD');
        sb.Append(SKS_PP_StringFormats::strFill(31,mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(32, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(233, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupHeader</Name>
				<Source><![CDATA[
    // 1-1   Record Type
    // 2-11  Customer Number (Assuming Vendor Account #)
    // 12-20 Routing Number
    // 21-27 Filler (Spaces)
    // 28-34 Account Number
    // 35-37 Currency CD ('CAD')
    // 38-39 County Code ('CA')
    // 40-69 Filler (Spaces)
    // 70-77 File Date (Today's Date format YYYYMMDD)
    // 78-83 File Type ('ISSUED')
    // 84-93 Filler (Spaces)
    // 94-96 Bank Identifier ('BNS')
    protected str txtGroupHeader()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        sb.Append('A');
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.VendorAccount, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(9, mSKS_PP_FileDetail.BnkBankTransit, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(7, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(7, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append('CAD');
        sb.Append('CA');
        sb.Append(SKS_PP_StringFormats::strFill(30, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));
        sb.Append('ISSUED');
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        sb.Append('BNS');
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupTrailer</Name>
				<Source><![CDATA[
    // 1-1   Record Type ('Z')
    // 2-23  Filler (Spaces)
    // 24-31 Record Count
    // 32-45 Total Amount
    // 46-89 Filler (Zeros)
    protected str txtGroupTrailer()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        sb.Append('Z');
        sb.Append(SKS_PP_StringFormats::strFill(22, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(8, int2str(chkCount) , SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(chkSum, 14));
        sb.Append(SKS_PP_StringFormats::strFill(44, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        chkCount = 0;
        chkSum = 0.00;
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>