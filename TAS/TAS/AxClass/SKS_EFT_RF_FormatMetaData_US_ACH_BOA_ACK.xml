<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_RF_FormatMetaData_US_ACH_BOA_ACK</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SKS_EFT_RF_FormatMetaData_US_ACH_BOA_ACK Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new()
    {
        productVersion = '';
        formatGroupVersion = '20210512';
        conFormatID = ['US-ACH-BOA-ACK'];
        formatfiletype = 'EFTInbound';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundFormatMetaData</Name>
				<Source><![CDATA[
    protected container getInboundFormatMetaData()
    {
        container   inboundFormatList;

        //Metadata column names of data elements
        ////FormatId,Description,Selected,ProductVersion,FormatVersion

        inboundFormatList = ConIns(inboundFormatList,conLen(inboundFormatList)+1,[productVersion,formatGroupVersion,'US-ACH-BOA-ACK','US - ACH - BOA - Acknowledgement',0]);

        return inboundFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundStatusMetaData</Name>
				<Source><![CDATA[
    protected container getInboundStatusMetaData(str _formatID)
    {
        container   inboundStatusList;

        //Metadata column names of data elements
        //FormatId,StatusType,StatusId,StatusIdDisplay,Origin

        switch (_formatID)
        {
            case ('US-ACH-BOA-ACK'):
                inboundStatusList = this.getInboundStatusMetaData_US_ACH_BOA_ACK();
                break;

        }

        return inboundStatusList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundStatusMetaData_US_ACH_BOA_ACK</Name>
				<Source><![CDATA[
    private container getInboundStatusMetaData_US_ACH_BOA_ACK()
    {
        container   inboundStatusList;

        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['US-ACH-BOA-ACK',0,'<Empty>','Empty status id',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['US-ACH-BOA-ACK',0,'File Received','File Received',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['US-ACH-BOA-ACK',0,'File Rejected','File Rejected',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['US-ACH-BOA-ACK',1,'<Empty>','Empty status id',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['US-ACH-BOA-ACK',1,'Rejected','Rejected',1]);

        return inboundStatusList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundRCodeMetaData</Name>
				<Source><![CDATA[
    protected container getInboundRCodeMetaData(str _formatID)
    {
        container   reasonCodeList;

        //Metadata column names of data elements
        //FormatId,ReasonCode,ReasonDesc,Origin

        switch (_formatID)
        {
            case ('US-ACH-BOA-ACK'):
                reasonCodeList = this.getInboundRCodeMetaData_US_ACH_BOA_ACK();
                break;

        }

        return reasonCodeList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundRCodeMetaData_US_ACH_BOA_ACK</Name>
				<Source><![CDATA[
    private container getInboundRCodeMetaData_US_ACH_BOA_ACK()
    {
        container   reasonCodeList;

        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','<Empty>','Empty reason code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R01','Insufficient funds',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R02','Account closed',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R03','No account/unable to locate account',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R04','Invalid account number',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R05','Unauthorized Debit to Consumer Account Using Corporate SEC code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R06','Returned per ODFIs request',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R07','Authorization revoked by customer',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R08','Payment stopped',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R09','Uncollected funds',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R10','Customer advises not authorized',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R11','Check truncation entry return',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R12','Branch sold to another DFI',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R13','RDFI not qualified to participate',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R14','Representative payee deceased or unable to continue in that capacity',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R15','Beneficiary of account holder deceased',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R16','Account frozen / Entry Returned per OFAC Instruction',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R17','File record edit criteria',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R18','Improper effective entry date',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R19','Amount field error',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R20','Non-transaction account',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R21','Invalid company identification',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R22','Invalid individual ID number',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R23','Credit entry refused by receiver',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R24','Duplicate entry',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R25','Addenda error',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R26','Mandatory field error',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R27','Trace number error',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R28','Routing number check digit error',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R29','Corporate customer advises not authorized',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R30','RDFI not partiipant in check truncation program',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R31','Permissible return entry',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R32','RDFI non-settlement',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R33','Return of XCK entry',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R34','Limited particiption DFI',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R35','Return of improper debit entry',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R36','Return of improper credit entry',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R37','Source Document Presented for Payment (ARC BOC and POP only)',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R38','Stop Payment on Source Document',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R39','Improper Source Document (ARC BOC and POP only) ',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R50','State law affecting RCK acceptance',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R51','RCK Item is ineligible/notice not provided/signature not genuine',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R52','Stop payment on RCK item',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R53','Item and ACH Entry Presented for Payment',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R80','Cross-border coding error',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R81','Non-participant in cross-border program',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R82','Invalid foreign receiving DFI identification',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R83','Foreign received DFI unable to settle',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R84','Entry not Processed by OGO ',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-ACH-BOA-ACK','R85','Incorrectly coded outbound International Payment ',1]);

        return reasonCodeList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   conDelete;
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        return deleteList;

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>