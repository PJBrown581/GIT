<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_CC_PayLinkPopulateSourceGridFields_Job</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_CC_PayLinkPopulateSourceGridFields_Job
{        
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Used to populate fields added to the SalesTable table 
    /// for SalesTableListPage form for PayLink related fields.
    /// The fields are displayed on the Grid control of the form.    
    /// </summary>
    /// <param name = "_args">The specified arguments.</param>
    public static void main(Args _args)
    {
        Dialog dialog = new Dialog("@SKS:SKGCCPopulatePayLinkFieldsForSourceGrids");
        
        DialogText dialogTextMsg = dialog.addText(strFmt("@SKS:SKGCCPopulatePayLinkFieldsDlgMsg", '\n'), 500);

        dialog.run();

        if (!dialog.closedOk())        
        {
            return;
        }

        SKS_CC_PayLinkPopulateSourceGridFields_Job::populatePayLinkSourceGridFields(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>populatePayLinkSourceGridFields</Name>
				<Source><![CDATA[
    public static void populatePayLinkSourceGridFields(boolean _showInfologMessage = false)
    {
        #OCCRetryCount

        SKS_PP_Setup sKS_PP_Setup = SKS_PP_Setup::find();
        if (!sKS_PP_Setup)
        {
            return;
        }

        if (!(sKS_PP_Setup.CCPLEnablePayLinks || sKS_PP_Setup.CCPLEnableWalletLinks))
        {
            return;
        }

        if (!sKS_PP_Setup.CCPLEnableListPageFields)
        {
            return;
        }

        SalesTable salesTable;
        SKS_CC_SalesOrderLastPayLinkStatusView salesOrderLastPayLinkView;
        Counter salesOrderUpdCnt;

        while select salesTable
            where (salesTable.SalesStatus == SalesStatus::Backorder
            || salesTable.SalesStatus == SalesStatus::Delivered)
            && salesTable.SKS_CC_PayLinkStatus == SKS_CC_PayLinkProcessStatus::NA
        join salesOrderLastPayLinkView
            where salesOrderLastPayLinkView.SalesOrderId == salesTable.SalesId
        {
            try
            {
                salesTable.selectForUpdate(true);
                ttsbegin;
                salesTable.SKS_CC_PayLinkStatus = salesOrderLastPayLinkView.Status;
                if (salesTable.SKS_CC_PayLinkStatus == SKS_CC_PayLinkProcessStatus::Error)
                {
                    salesTable.SKS_CC_PayLinkErrorMsg = salesOrderLastPayLinkView.PayLinkErrorMsg;
                }

                salesTable.SKS_CC_PayLinkCount = any2Int(salesOrderLastPayLinkView.PayLinkCount);

                salesTable.doUpdate();
                ttscommit;
                salesOrderUpdCnt++;
            }
            catch (Exception::Deadlock)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::Deadlock;
                }
                else
                {
                    retry;
                }
            }
            catch (Exception::UpdateConflict)
            {
                if (appl.ttsLevel() == 0)
                {
                    if (xSession::currentRetryCount() >= #RetryNum)
                    {
                        throw Exception::UpdateConflictNotRecovered;
                    }
                    else
                    {
                        retry;
                    }
                }
                else
                {
                    throw Exception::UpdateConflict;
                }
            }
            catch (Exception::DuplicateKeyException)
            {
                error("@SKS:SKGCCDuplicateKeyErrorOccurredDuringUpdate");
            }
            catch (Exception::Error)
            {
                ttsabort;
                error(strFmt("@SKS:SKGCCErrorMsgWhileUpdatingPayLinkFields", salesTable.SalesId));
            }
        }

        if (_showInfologMessage)
        {
            if (salesOrderUpdCnt)
            {                
                info("@SKS:SKGCCProcessToPopulatePayLinkFieldsCompleted");
                info(strFmt("@SKS:SKGCCSalesOrderRecordsUpdatedX", salesOrderUpdCnt));
            }
            else
            {
                info("@SKS:SKGCCNoRecordsToUpdateWereFound");
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>