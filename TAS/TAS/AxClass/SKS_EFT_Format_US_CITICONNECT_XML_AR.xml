<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_CITICONNECT_XML_AR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_CITICONNECT_XML_AR extends SKS_EFT_Format_ISO_20022_00800102
/// </summary>
class SKS_EFT_Format_US_CITICONNECT_XML_AR extends SKS_EFT_Format_ISO_20022_00800102
{
    //------------------------------------------------------------------------------------------------------
    /// <summary>
    /// This is extending the SKS_EFT_Format_ISO_20022_00800102 Format
    /// </summary>
    //------------------------------------------------------------------------------------------------------
    #define.FormatVersion('20220802')
    #define.CCD('ACH-CCD')
    #define.CTX('ACH-CTX')
    #define.CA700('CITI700')
    #define.PPDP4('PPDP-4')
    #define.DRC501('DRC-501')
    #define.CCD504('CCD-504')
    #define.SEPA858('SEPA-858')
    #define.SEPA933('SEPA-933')
    #define.ACH74('ACH-74')
    #define.ACH163('ACH-163')
    #define.SEPA851('SEPA-851')
    #define.DD327('DD-327')    
    #define.DD800('DD-800')
    #define.DD830('DD-830')  

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_DbtrAcct</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_DbtrAcct(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.73: DbtrAcct
        //              Id
        //                  Othr
        //                      Id
        //              Tp
        //              Nm
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeDbtrAcct;
        XmlElement nodeDbtrAcctId;
        XmlElement nodeOthr;
        int len;
    
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #CCD:
            case #CTX:
            case #CA700:
            case #DRC501:
            case #SEPA858:
            case #SEPA933:
            case #ACH74:
            case #ACH163:
            case #SEPA851:
            case #DD327:                        
                if(mSKS_EFT_FileDetail.DepBankIBAN == '')
                {
                    //          2.73: DbtrAcct
                    nodeDbtrAcct = _nodeDrctDbtTxInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
                    //              Id
                    nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));
    
                    //                  Othr
                    nodeOthr = nodeDbtrAcctId.appendChild(xmlDoc.createElement('Othr'));
    
                    //                      Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.DepBankAcct, 34);
    
                    if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #DRC501)
                    {
                        //              Tp
                        this.node_DrctDbtTxInf_DbtrAcct_Type(nodeDbtrAcct);
                    }

                    //              Nm
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcct, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail.AccountName), 35, false);
                }
                else
                {
                    super(_nodeDrctDbtTxInf);
                }
                break;
            case #DD830:
            case #PPDP4:
            case #CCD504:
            case #DD800:
                //          2.73: DbtrAcct
                nodeDbtrAcct = _nodeDrctDbtTxInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
                //              Id
                nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));
    
                //                  Othr
                nodeOthr = nodeDbtrAcctId.appendChild(xmlDoc.createElement('Othr'));

                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PPDP4    ||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CCD504)
                {
                    len = 17;
                }
                else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DD800)
                {
                    len = 13;
                }
                else
                {
                    len = 30;
                }    
                //                      Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.DepBankAcct, len);

                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PPDP4    ||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CCD504)
                {
                    //              Tp
                    this.node_DrctDbtTxInf_DbtrAcct_Type(nodeDbtrAcct);
                }
                //              Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcct, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail.AccountName), 70, false);
                break;
            default:
                super(_nodeDrctDbtTxInf);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_DbtrAcct_Type</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_DbtrAcct_Type(XmlElement _nodeDbtrAcct)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.73: DbtrAcct
        //              Tp
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeDbtrAcctTp;
        str value;
    
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #CCD:
            case #CTX:
            case #PPDP4:
            case #CCD504:
                if(mSKS_EFT_FileDetail.DepBankAcctType == BankAccountType::SavingsAccount)
                {
                    value = 'SVGS';
                }
                else
                {
                    value = 'CACC';
                }
                break;
            default:
                value = '';
                break;
        }
    
        if(value != '')
        {
            //              Tp
            nodeDbtrAcctTp = _nodeDbtrAcct.appendChild(xmlDoc.createElement('Tp'));
    
            //                  Cd/Ptry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctTp, 'Cd', value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_DbtrAgt</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_DbtrAgt(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.70: DbtrAgt
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeDbtrAgt;
        XmlElement nodeFinInstnId;
        //CustBankAccount lCustBankAccount;
        //LogisticsPostalAddress lLogisticsPostalAddress;
    
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #CCD:
            case #CTX:
            case #CA700:
            case #PPDP4:
            case #CCD504:
            case #ACH74:
            case #ACH163:
            case #DD327:
            case #DD800:
            case #DD830:
                //          2.77: DbtrAgt
                nodeDbtrAgt = _nodeDrctDbtTxInf.appendChild(xmlDoc.createElement('DbtrAgt'));
    
                //              FinInstnId
                nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
                //                  ClrSysMmbId
                this.node_DrctDbtTxInf_DbtrAgt_ClrSysMmbId(nodeFinInstnId);
    
                //lCustBankAccount = CustBankAccount::find(mSKS_EFT_FileDetail.AccountNum, mSKS_EFT_FileDetail.DepBankAccountId);
                //select location, CountryRegionId, City, Street, Zipcode from lLogisticsPostalAddress where lLogisticsPostalAddress.Location == lCustBankAccount.Location;
                //lCustBankAccount = CustBankAccount::find(mSKS_EFT_FileDetail.AccountNum, mSKS_EFT_FileDetail.DepBankAccountId);
                select msks_EFT_FileDetail_BankAddress where
                    msks_EFT_FileDetail_BankAddress.RefRecId == mSKS_EFT_FileDetail.RecID
                    && msks_EFT_FileDetail_BankAddress.AddressType == SKS_EFT_AddressType::CustBankAddress;              
    
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode  == #CCD504  ||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode  == #DD327   ||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode  == #DD800)
                {
                    //                  Nm
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(msks_EFT_FileDetail_BankAddress.Name), 35, false); //FDD-10590
                }
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode  == #CCD ||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode  == #CTX ||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode  == #CA700)
                {
                    //                  PstlAdr
                    this.node_PstlAdr(nodeFinInstnId, this.getLogisticsAddressCountryISO(msks_EFT_FileDetail_BankAddress.CountryRegionId), '', '', ''); //FDD-10590
                }
                else
                {
                    //                  PstlAdr
                    this.node_PstlAdr(nodeFinInstnId, this.getLogisticsAddressCountryISO(msks_EFT_FileDetail_BankAddress.CountryRegionId), msks_EFT_FileDetail_BankAddress.Addr, msks_EFT_FileDetail_BankAddress.Zipcode, msks_EFT_FileDetail_BankAddress.City); //FDD-10590
                }
                break;
            default:
                super(_nodeDrctDbtTxInf);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_DbtrAgt_ClrSysMmbId</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_DbtrAgt_ClrSysMmbId(XmlElement _nodeFinInstnId)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.70: DbtrAgent
        //              ClrSysMmbId
        //                  MmbId
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeClrSysMmbId;
        int len;
    
        //              ClrSysMmbId
        nodeClrSysMmbId = _nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
        
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #DD830:
                len = 16;
                break;
            case #ACH74:
                len = 10;
                break;
            default:
                len = 0;
                break;
        }
        //                  MmbId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, len, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_RmtInf</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_RmtInf(XmlElement _nodeDrctDbtTxInf)
    {
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #CTX:
            case #DD327:
                this.node_DrctDbtTxInf_RmtInf_Strd(_nodeDrctDbtTxInf);
                break;
            case #PPDP4:
            case #DRC501:
            case #CCD504:
            case #SEPA858:
            case #SEPA933:            
            case #ACH74:
            case #ACH163:
            case #SEPA851:
            case #DD800:
            case #DD830:
                this.node_DrctDbtTxInf_RmtInf_Ustrd(_nodeDrctDbtTxInf);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_RmtInf_Strd</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_RmtInf_Strd(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.88: RmtInf
        //------------------------------------------------------------------------------------------------------
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        XmlElement nodeRmtInf;
        XmlElement nodeStrd;
        XmlElement nodeRfrdDocAmt;
        Boolean firstRec = true;
    
        while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
        {
            if(invSKS_EFT_FileDetail.InvoiceNumber != '')
            {
                if(firstRec)
                {
                    //          2.88: RmtInf
                    nodeRmtInf = _nodeDrctDbtTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                    firstRec = false;
                }
    
                //              2.9: Strd
                nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));
    
                //              2.91: RfrdDocInf
                this.node_DrctDbtTxInf_RmtInf_Strd_RfrdDocInf(nodeStrd, invSKS_EFT_FileDetail);
    
                //              2.99 RfrdDocAmt
                nodeRfrdDocAmt = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocAmt'));
                this.node_DrctDbtTxInf_RmtInf_Strd_RfrdDocAmt(nodeRfrdDocAmt, invSKS_EFT_FileDetail);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_RmtInf_Strd_RfrdDocAmt</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_RmtInf_Strd_RfrdDocAmt(XmlElement _nodeRfrdDocAmt, SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.99: RfrdDocAmt
        //              2.1: DuePyblAmt
        //              2.101: DscntApldAmt
        //              2.109: RmtdAmt
        //------------------------------------------------------------------------------------------------------
        XmlElement  currentElement;
        AmountMST   gross = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
    
        //              2.1: DuePyblAmt
        currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DuePyblAmt', num2str(gross,0,2,1,0));
        SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
    
        //              2.101: DscntApldAmt
        currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DscntApldAmt', num2str(_invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur,0,2,1,0));
        SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
    
        //              2.109: RmtdAmt
        currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'RmtdAmt', num2str(_invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur,0,2,1,0));
        SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_RmtInf_Strd_RfrdDocInf</Name>
				<Source><![CDATA[
    private void node_DrctDbtTxInf_RmtInf_Strd_RfrdDocInf(XmlElement _nodeStrd, SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //------------------------------------------------------------------------------------------------------
        //              2.91: RfrdDocInf
        //                  2.97: Number
        //                  2.98: RltdDt
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeRfrdDocInf;
    
        //              2.91: RfrdDocInf
        nodeRfrdDocInf = _nodeStrd.appendChild(xmlDoc.createElement('RfrdDocInf'));
    
        //                  2.97: Number
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', _invSKS_EFT_FileDetail.InvoiceNumber);
    
        //                  2.98: RltdDt
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(_invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          Nm
        //          PstlAdr
        //          Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtr;
    
        //      2.19: Cdtr
        nodeCdtr = nodePmtInf.appendChild(xmlDoc.createElement('Cdtr'));
    
        //          Nm
        this.node_PmtInf_Cdtr_Nm(nodeCdtr);

        //          PstlAdr
        this.node_PmtInf_Cdtr_PstlAdr(nodeCdtr);
    
        //          Id
        this.node_PmtInf_Cdtr_Id(nodeCdtr);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_Id(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          Id
        //              OrgId
        //                  Othr
        //                      Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOthr;
    
        if(mSKS_EFT_FileDetail.FileACHCompanyId != ''               && 
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CA700    &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA858  &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA933  &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ACH74    &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ACH163   &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA851  &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #DD327    &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #DD800)
        {
            //          Id
            nodeId = _nodeCdtr.appendChild(xmlDoc.createElement('Id'));
    
            //              OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            //                  Othr
            nodeOthr = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
            //                      Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', this.CharacterReplacement(mSKS_EFT_FileDetail.FileACHCompanyId), 35, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_Nm</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_Nm(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          Nm
        //------------------------------------------------------------------------------------------------------
        int len;

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #DRC501:
                len = 30;
                break;
            case #DD830:
                len = 35;
                break;
            default:
                len = 140;
                break;
        }
        //          Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtr, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail.FileACHCompanyName), len, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_PmtInf_CdtrAcct(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.20: CdtrAcct
        //          Id
        //              IBAN
        //              Othr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtrAcct;
        XmlElement nodeCdtrAcctId;
    
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #CCD:
            case #CTX:
            case #DD800:
            case #DRC501:
            case #ACH74:
            case #ACH163:
            case #DD327:
            case #PPDP4:
            case #CCD504:
                //      2.20: CdtrAcct
                nodeCdtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
                //          Id
                nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
    
                //              Othr
                this.node_PmtInf_CdtrAcct_Id_Othr(nodeCdtrAcctId);
                break;
            case #DD830:  
                if(mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CITICONNECT-XML-NZ')
                {
                    //      2.20: CdtrAcct
                    nodeCdtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
                    //          Id
                    nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
    
                    //              Othr
                    this.node_PmtInf_CdtrAcct_Id_Othr(nodeCdtrAcctId);
                }
                else
                {
                    super(_nodePmtInf);
                }
                break;
            default:
                super(_nodePmtInf);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_PmtInf_CdtrAgt(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.21: CdtrAgt
        //          FinInstnId
        //              ClrSysMmbId
        //                  MmbId
        //              PstlAdr
        //                  Ctry
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCdtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmBId;
        str value;
    
        //      2.21: CdtrAgt
        nodeCdtrAgt = _nodePmtInf.appendChild(xmlDoc.createElement('CdtrAgt'));
    
        //          FinInstnId
        nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
        if(mSKS_EFT_FileDetail.BankBankSwiftNo != '' &&
           (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DRC501  ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CCD504   ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA858  ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA933  ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH74    ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH163   ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA851  ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DD327    ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DD800    ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DD830))
        {
            //              BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc,nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.BankBankSwiftNo, 11, false);
        }
        else
        {
            switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
            {
                case #CCD:
                case #CTX:
                case #CA700:
                case #PPDP4:
                    value = mSKS_EFT_FileDetail.BankBankTransit;
                    break;
                default:
                    value = '';
                    break;
            }
    
            if(value != '')
            {
                //              ClrSysMmbId
                nodeClrSysMmBId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
    
                //                  MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmBId, 'MmbId', value);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_CtgyPurp</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_CtgyPurp(XmlElement _nodePmtTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.15: CtgyPurp
        //            2.17: Prtry
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCtgyPurp;
        str value;
    
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #CA700:
                value = '700';
                break;
            case #DRC501:
                value = 'INTC';
                break;
            default:
                value = '';
                break;
        }
    
        if(value != '')
        {
            //          2.15: CtgyPurp
            nodeCtgyPurp = _nodePmtTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
    
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DRC501)
            {
                //            2.16: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', value);
            }
            else
            {
                //            2.17: Prtry
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Prtry', value);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_LclInstrm</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_LclInstrm(XmlElement _nodePmtTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.11: LclInstrm
        //              2.13: Prtry
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeLclInstrm;
    
        str value;
    
        switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
        {
            case #CA700:
                value = #CA700;
                break;
            case #CCD:
                value = 'CITI2';
                break;
            case #CTX:
                value = 'CITI5';
                break;
            case #PPDP4:
                value = 'CITI4';
                break;
            case #DRC501:
                value = '501';
                break;
            case #CCD504:
                value = 'CITI504';
                break; 
            case #DD800:
                value = 'CITI800';
                break;
            case #DD830:
                value = 'CITI830';
                break;
            default:
                value = '';
                break;
        }
    
        if(value != '')
        {
            //          2.11: LclInstrm
            nodeLclInstrm = _nodePmtTpInf.appendChild(xmlDoc.createElement('LclInstrm'));
    
            //            2.13: Prtry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Prtry', value);
        }
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA933  ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA851  ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA858)
        {           
            msks_EFT_FileDetail_Mandate = SKS_EFT_FileDetail_Mandate::find(mSKS_EFT_FileDetail.RecId); //FDD-10590

            if(msks_EFT_FileDetail_Mandate)
            {
                //          2.11: LclInstrm
                nodeLclInstrm = _nodePmtTpInf.appendChild(xmlDoc.createElement('LclInstrm'));
                if(msks_EFT_FileDetail_Mandate.MandateScheme == CustMandateScheme::B2B)
                {
                    value = 'B2B';
                }
                else if(msks_EFT_FileDetail_Mandate.MandateScheme == CustMandateScheme::COR1)
                {
                    value = 'COR1';
                }
                else
                {
                    value = 'CORE';
                }

                //            2.12: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Cd', value);
            }
            
        }
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA858 ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA933 ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH163)
        {
            //          2.14: SeqTp
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtTpInf, 'SeqTp', 'RCUR');
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA851 ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA933 ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH163)
        {
            //          2.14: SeqTp
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtTpInf, 'SeqTp', 'FRST');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl(XmlElement _nodePmtTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.8: SvcLvl
        //              2.9: Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeSvcLvl;
        str value;
    
        switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
        {
            case #CA700:
            case #CCD504:
            case #ACH74:
            case #ACH163:
            case #DD327:
            case #DD830:
                value = 'NURG';
                break;
            case #SEPA858:
            case #SEPA933:
            case #SEPA851:
                value = 'SEPA';
                break;
            default:
                value = '';
                break;
        }
    
        if(value != '')
        {
            //          2.8: SvcLvl
            nodeSvcLvl = _nodePmtTpInf.appendChild(xmlDoc.createElement('SvcLvl'));
    
            //            2.9: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSvcLvl, 'Cd', value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_RmtInf_Ustrd</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_RmtInf_Ustrd(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeRmtInf;
        str invNumbers;        
    
        invNumbers = this.getInvoiceNbrs();
        if(invNumbers)
        {
            //          2.98: RmtInf
            nodeRmtInf = _nodeDrctDbtTxInf.appendChild(xmlDoc.createElement('RmtInf'));

            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
        }         
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceNbrs</Name>
				<Source><![CDATA[
    protected str getInvoiceNbrs()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str invString;
    
        select InvoiceNumber from invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId;
    
        while(invSKS_EFT_FileDetail)
        {
            if(invSKS_EFT_FileDetail.InvoiceNumber == '')
            {
                // If no invoice number, go to next record
                next invSKS_EFT_FileDetail;
                continue;
            }
            sb.Append(invSKS_EFT_FileDetail.InvoiceNumber);
    
            next invSKS_EFT_FileDetail;
    
            if(invSKS_EFT_FileDetail)
            {
                sb.Append(', ');
            }
        }
    
        invString = this.CharacterReplacement(sb.ToString());
        return invString;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_PstlAdr(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          Nm
        //------------------------------------------------------------------------------------------------------       
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA858  ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA933  ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA851  ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DD327    ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DD830)
        {            
            mSKS_EFT_FileDetail_BankAccount = SKS_EFT_FileDetail_BankAccount::find(mSKS_EFT_FileDetail.RecId); //FDD-10590
    
            this.node_PstlAdr(_nodeCdtr, mSKS_EFT_FileDetail_BankAccount.CountryRegionId, mSKS_EFT_FileDetail_BankAccount.Addr, mSKS_EFT_FileDetail_BankAccount.ZipPostal, mSKS_EFT_FileDetail_BankAccount.City, 70, mSKS_EFT_FileDetail_BankAccount.Addr2, mSKS_EFT_FileDetail_BankAccount.State); //FDD-10590
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_CdtrNodes</Name>
				<Source><![CDATA[
    protected void node_PmtInf_CdtrNodes(XmlElement _nodePmtInf)
    {
        //      2.19: Cdtr
        this.node_PmtInf_Cdtr(_nodePmtInf);
    
        //      2.20: CdtrAcct
        this.node_PmtInf_CdtrAcct(_nodePmtInf);
    
        //      2.21: CdtrAgt
        this.node_PmtInf_CdtrAgt(_nodePmtInf);
       
        //      CdtrSchmeId
        this.node_PmtInf_CdtrSchmeId(_nodePmtInf);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_CdtrSchmeId</Name>
				<Source><![CDATA[
    protected void node_PmtInf_CdtrSchmeId(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      CdtrSchmeId
        //          Id
        //              PrvtId
        //                  Othr
        //                      Id
        //------------------------------------------------------------------------------------------------------
        
        XmlElement nodeCdtrSchmeId;
        XmlElement nodeId;
        XmlElement nodePrvtId;
        XmlElement nodeOthr;
    
        if(mSKS_EFT_FileDetail.FileACHCompanyId != '' &&
           (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA858 ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA933 ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA851))
        {
            //          CdtrSchmeId
            nodeCdtrSchmeId = _nodePmtInf.appendChild(xmlDoc.createElement('CdtrSchmeId'));

            //              Id
            nodeId = nodeCdtrSchmeId.appendChild(xmlDoc.createElement('Id'));
    
            //                  PrvtId
            nodePrvtId = nodeId.appendChild(xmlDoc.createElement('PrvtId'));
    
            //                      Othr
            nodeOthr = nodePrvtId.appendChild(xmlDoc.createElement('Othr'));
    
            //                      Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', this.CharacterReplacement(mSKS_EFT_FileDetail.FileACHCompanyId), 35, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf()
    {
        //------------------------------------------------------------------------------------------------------
        //      2.28: DrctDbtTxInf
        //          2.29: PmtId
        //          2.32: PmtTpInf
        //          2.44: InstdAmt
        //          2.45: ChrgBr
        //          2.70: DbtrAgt
        //          2.79: Dbtr
        //          2.80: DbtrAcct
        //          2.98: RmtInf
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDrctDbtTxInf;
        
        //      2.28: DrctDbtTxInf
        nodeDrctDbtTxInf = nodePmtInf.appendChild(xmlDoc.createElement('DrctDbtTxInf'));
        
        //          2.29: PmtId
        this.node_DrctDbtTxInf_PmtId(nodeDrctDbtTxInf);
        
        //          2.32 PmtTpInf
        this.node_DrctDbtTxInf_PmtTpInf(nodeDrctDbtTxInf);
        
        //          2.44: InstdAmt
        this.node_DrctDbtTxInf_Amt(nodeDrctDbtTxInf);

        //          2.45: ChrgBr
        this.node_DrctDbtTxInf_ChrgBr(nodeDrctDbtTxInf);
        
        //          2.48: DrctDbtTx
        this.node_DrctDbtTxInf_DrctDbtTx(nodeDrctDbtTxInf);

        //          2.70: DbtrAgt
        this.node_DrctDbtTxInf_DbtrAgt(nodeDrctDbtTxInf);
        
        //          2.72: Dbtr
        this.node_DrctDbtTxInf_Dbtr(nodeDrctDbtTxInf);
        
        //          2.73: DbtrAcct
        this.node_DrctDbtTxInf_DbtrAcct(nodeDrctDbtTxInf);
        
        //          2.75: InstrForCdtrAgt
        this.node_DrctDbtTxInf_InstrForCdtrAgt(nodeDrctDbtTxInf);
        
        //          2.88: RmtInf
        this.node_DrctDbtTxInf_RmtInf(nodeDrctDbtTxInf);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_ChrgBr(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.45 ChrgBr
        //------------------------------------------------------------------------------------------------------
    
        //      2.24 ChrgBr
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA858  ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA933  ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA851)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeDrctDbtTxInf, 'ChrgBr', 'SLEV');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_DrctDbtTx</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_DrctDbtTx(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          DrctDbtTx
        //              MndtRltdInf
        //                  MndtId
        //                  DtOfSgntr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDrctDbtTx;
        XmlElement nodeMndtRltdInf;
              
        msks_EFT_FileDetail_Mandate = SKS_EFT_FileDetail_Mandate::find(mSKS_EFT_FileDetail.RecId); //FDD-10590

        if(msks_EFT_FileDetail_Mandate.MandateReference &&
           (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA858 ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA933 ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH163  ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA851 ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DD327))
        {
            //        DrctDbtTx
            nodeDrctDbtTx = _nodeDrctDbtTxInf.appendChild(xmlDoc.createElement('DrctDbtTx'));
            
            //              MndtRltdInf
            nodeMndtRltdInf = nodeDrctDbtTx.appendChild(xmlDoc.createElement('MndtRltdInf'));
            
            //                  MndtId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeMndtRltdInf, 'MndtId', msks_EFT_FileDetail_Mandate.MandateReference); //FDD-10590
            
            //                  DtOfSgntr
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeMndtRltdInf, 'DtOfSgntr', SKS_PP_StringFormats::strDateYYYYMMDD(msks_EFT_FileDetail_Mandate.SignatureDate, DateSeparator::Hyphen)); //FDD-10590
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_Dbtr</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_Dbtr(XmlElement _node_DrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.72: Dbtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtr;
    
        //          2.72: Dbtr
        nodeDbtr = _node_DrctDbtTxInf.appendChild(xmlDoc.createElement('Dbtr'));
    
        //              Nm
        this.node_DrctDbtTxInf_Dbtr_Nm(nodeDbtr);

        //           PstlAdr
        this.node_DrctDbtTxInf_Dbtr_PstlAdr(nodeDbtr);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_Dbtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_Dbtr_PstlAdr(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.72: Dbtr
        //              PstlAdr     
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA858  ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA933  ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA851  ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DD327    ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DD830)
        {
            if(mSKS_EFT_FileDetail.AccountNum && mSKS_EFT_FileDetail.AccountType == LedgerJournalACType::Cust)
            {
                msks_EFT_FileDetail_CustAddress = sks_EFT_FileDetail_CustAddress::find(mSKS_EFT_FileDetail.RecId); //FDD-10590            
    
                this.node_PstlAdr(_nodeDbtr, msks_EFT_FileDetail_CustAddress.CustCountryRegionId, msks_EFT_FileDetail_CustAddress.CustAddr, msks_EFT_FileDetail_CustAddress.CustZipPostal, msks_EFT_FileDetail_CustAddress.CustCity, 75, msks_EFT_FileDetail_CustAddress.CustAddr2, msks_EFT_FileDetail_CustAddress.CustState);//FDD-10590                
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_BtchBookg</Name>
				<Source><![CDATA[
    protected void node_PmtInf_BtchBookg(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.23 BtchBookg
        //------------------------------------------------------------------------------------------------------

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA933)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'BtchBookg', 'TRUE');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_Dbtr_Nm</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_Dbtr_Nm(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.72: Dbtr
        //              Nm
        //------------------------------------------------------------------------------------------------------        
        int len;

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #SEPA933:
            case #DD830:
                len = 70;
                break;
            default:
                len = 140;
                break;
        }
        //              Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeDbtr, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail.AccountName), len);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>