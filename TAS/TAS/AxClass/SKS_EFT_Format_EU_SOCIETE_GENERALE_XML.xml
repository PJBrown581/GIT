<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_EU_SOCIETE_GENERALE_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_EU_SOCIETE_GENERALE_XML extends SKS_EFT_Format_ISO_20022_001001003
/// </summary>
class SKS_EFT_Format_EU_SOCIETE_GENERALE_XML extends SKS_EFT_Format_ISO_20022_001001003
{
    //------------------------------------------------------------------------------------------------------
    /// <summary>
    /// This is extending the ISO_20022_001001003 Format
    /// </summary>
    //------------------------------------------------------------------------------------------------------
    #define.FormatVersion('20230516')
    #define.URGP('URGP')
    #define.NURG('NURG')
    #define.SEPA('SEPA')
    #define.TREA('TREA')
    #define.DOM('DOM')
    #define.NON_SEPA('NON-SEPA')
    #define.QRR('QRR')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Cdtr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Cdtr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.79: Cdtr
        //              Nm
        //              PstlAdr
        //              Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtr;
    
        //          2.79: Cdtr
        nodeCdtr = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Cdtr'));
        
        //              Nm
        this.node_CdtTrfTxInf_Cdtr_Nm(nodeCdtr);
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGP ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NURG ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #QRR ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NON_SEPA)    //SKS#DevOps:21598
        {
            //              PstlAdr
            this.node_PmtInf_Cdtr_PstlAdr(nodeCdtr);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Cdtr_Nm</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Cdtr_Nm(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.79: Cdtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
        str name = mSKS_EFT_FileDetail.AccountName;
        
        if(mRemittanceName != '')        
        {
            name = mRemittanceName;
        }
        
        //              Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtr, 'Nm', this.CharacterReplacement(name), 70);
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAcct(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.80: CdtrAcct
        //              Id
        //                  IBAN
        //                  Othr
        //                      Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCdtrAcct;
        XmlElement nodeCdtrAcctId;
        XmlElement nodeOthr;

        if(mSKS_EFT_FileDetail.DepBankIBAN && mSKS_EFT_FileDetail.PaymSpec == #QRR)
            {
                //          2.80: CdtrAcct
                nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
            
                //              Id
                nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));

                //                  IBAN
            nodeCdtrAcctId = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN);
            
            }
            else if(mSKS_EFT_FileDetail.DepBankIBAN || mSKS_EFT_FileDetail.DepBankAcct)
            {
                //          2.80: CdtrAcct
                nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
                //              Id
                nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
    
            if(mSKS_EFT_FileDetail.DepBankIBAN)
            {
                //                  IBAN
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN);
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA)
            {
                //                  Othr
                nodeOthr = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));
    
                //                      Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.DepBankAcct, 34);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.77: CdtrAgt
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                      MmbId
        //                  Nm
        //                  PstlAdr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmBId;
        boolean printCdtrAgt = true;

       if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA &&
          mSKS_EFT_FileDetail.DepBankIBAN != '')
        {
           printCdtrAgt = false;
        }
        else if(printCdtrAgt && (mSKS_EFT_FileDetail.DepSwiftNo != '' || mSKS_EFT_FileDetail.DepBankTransit != ''))
        {
            //          2.77: CdtrAgt
            nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));
    
            //              FinInstnId
            nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
            if(mSKS_EFT_FileDetail.DepSwiftNo != '')
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 0, false);

                if(mSKS_EFT_FileDetail.PaymSpec == #QRR)
                {
                    //                  Nm
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_VendorPaym.WBenBankName), 0, false);
                    
                    //                  PstlAdr
                    this.node_CdtTrfTxInf_CdtrAgt_PstlAdr(nodeFinInstnId);
                }
            }
            else
            {
                //                  ClrSysMmbId
                nodeClrSysMmBId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
    
                //                      MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmBId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 0, false);
    
                //                  Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_VendorPaym.WBenBankName), 0, false);
    
                //                  PstlAdr
                this.node_CdtTrfTxInf_CdtrAgt_PstlAdr(nodeFinInstnId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_IntrmyAgt1</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_IntrmyAgt1(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.71: IntrmyAgt1
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                      MmbId
        //                  Nm
        //                  PstlAdr
        //              BrnchId
        //                  Id
        //------------------------------------------------------------------------------------------------------
        
        //To be overidden.
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf(XmlElement _nodeCdtTrfTxInf)
    {
       //------------------------------------------------------------------------------------------------------
       //          2.98: RmtInf
       //------------------------------------------------------------------------------------------------------
        
       if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #QRR)
        {
            this.node_CdtTrfTxInf_RmtInf_Strd(_nodeCdtTrfTxInf);
        }
        else
        {
            this.node_CdtTrfTxInf_RmtInf_Ustrd(_nodeCdtTrfTxInf);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_Strd</Name>
				<Source><![CDATA[
     Protected void node_CdtTrfTxInf_RmtInf_Strd(XmlElement _nodeCdtTrfTxInf)
    {
            XmlElement  nodeRmtInf;
            XmlElement  nodeStrd;
            XmlElement  nodeCdtrRefInf;
            XmlElement  nodeTp;
            XmlElement  nodeCdOrPrtry;
            VendTrans   lVendTrans;
            boolean     firstRec = true;
            SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #QRR)
        {
                    while select invSKS_EFT_FileDetail
                        where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                            && invSKS_EFT_FileDetail.InvoiceNumber != ''
            {
                            select crossCompany PaymId, Invoice from lVendTrans
                                where lVendTrans.RecId == invSKS_EFT_FileDetail.VendTransRecId;
                              if(lVendTrans.PaymId != '')
                                {
                                if(firstRec)
                                    {
                                       //          2.98: RmtInf
                                      nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                       firstRec = false;
                                    }
                                    //               2.100: Strd
                                    nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));
                    
                                    //            2.120: CdtrRefInf
                                    nodeCdtrRefInf = nodeStrd.appendChild(xmlDoc.createElement('CdtrRefInf'));
                    
                                    //              2.121: Tp
                                   nodeTp = nodeCdtrRefInf.appendChild(xmlDoc.createElement('Tp'));
                    
                                    //                  2.122: CdOrPrtry
                                    nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));

                                    if(mSKS_EFT_FileDetail.PaymSpec == #QRR)
                                    {
                                     SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Prtry', 'QRR');
                                    }
                                    else
                                    {
                                    //                      2.123: Cd
                                     SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'SCOR');
                                     }
                    
                                    //               2.126: Ref
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrRefInf, 'Ref', lVendTrans.PaymId, 35, false);
                    
                                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_BtchBookg</Name>
				<Source><![CDATA[
    protected void node_PmtInf_BtchBookg(XmlElement _BtchBookg)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.3: BtchBookg
        //------------------------------------------------------------------------------------------------------
        
        str value, btchBookg;
        
        btchBookg = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BtchBookg', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));

        if(btchBookg == 'Y')
        {
            value = 'true';
        }
        else
        {
            value = 'false';
        }
        
        //              2.3: BtchBookg
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _BtchBookg, 'BtchBookg', value, 0, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          Nm
        //          PstlAdr
        //          Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtr;
        
        //      2.19: Dbtr
        nodeDbtr = nodePmtInf.appendChild(xmlDoc.createElement('Dbtr'));
        
        //          Nm
        this.node_PmtInf_Dbtr_Nm(nodeDbtr);
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NON_SEPA)        //SKS#DevOps:21598
        {
            // PstlAdr
            this.node_PmtInf_Dbtr_PstlAdr(nodeDbtr);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_Id(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.79: Cdtr
        //          Id
        //              OrgId
        //                  BICorBEI
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
    
        //          Id
        nodeId = _nodeCdtr.appendChild(xmlDoc.createElement('Id'));
    
        //              OrgId
        nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
        //                  BICorBEI
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOrgId, 'BICorBEI', this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BusinessEntyId', mSKS_EFT_FileDetail.RecId)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_ChrgBr(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.24 ChrgBr
        //------------------------------------------------------------------------------------------------------
        str value;
    
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #SEPA:
                value = 'SLEV';
                break;
            case #TREA:
                value = 'SHAR';
                break;
            default:
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Charges', mSKS_EFT_FileDetail.RecId));
                break;
        }
    
        //      2.24 ChrgBr
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'ChrgBr', value, 0, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct_Id_Othr</Name>
				<Source><![CDATA[
   protected void node_PmtInf_DbtrAcct_Id_Othr(XmlElement _nodeAcctId)
    {
            //------------------------------------------------------------------------------------------------------
            //              Othr
            //                  Id
            //                  SchmeNm
            //                      Cd
            //------------------------------------------------------------------------------------------------------
            XmlElement nodeOthr;
            XmlElement nodeSchmeNm;
        
            //              Othr
            nodeOthr = _nodeAcctId.appendChild(xmlDoc.createElement('Othr'));
        
            //                  Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.BankBankAcct);
        
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #NON_SEPA)    //SKS#DevOps:21598
                {
                    //                  SchmeNm
                nodeSchmeNm = nodeOthr.appendChild(xmlDoc.createElement('SchmeNm'));
            
                //                      Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', 'BBAN');
            
                }   
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAgt</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAgt(XmlElement _nodePmtInf)
    {
            //------------------------------------------------------------------------------------------------------
            //      2.21: DbtrAgt
            //          FinInstnId
            //              BIC
            //------------------------------------------------------------------------------------------------------
            XmlElement nodeDbtrAgt;
            XmlElement nodeFinInstnId;
            XmlElement nodeOthr;
        
            //      2.21: DbtrAgt
            nodeDbtrAgt = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAgt'));
        
            //          FinInstnId
            nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
        
            if(mBankAccountTable.SWIFTNo)
            {
                    //              BIC
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mBankAccountTable.SWIFTNo, 0, false);
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA)   //SKS#DevOps:21598
                    {
                    //              Othr
                    nodeOthr = nodeFinInstnId.appendChild(xmlDoc.createElement('Othr'));
            
                    //          Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', 'NOTPROVIDED');
                    }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.6: PmtTpInf
        //------------------------------------------------------------------------------------------------------
    
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #NURG:
            case #DOM:
            case #NON_SEPA:
                break;
            default:
                super(_nodePmtInf);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_CtgyPurp</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_CtgyPurp(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.14: CtgyPurp
        //              2.15: Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCtgyPurp;
    
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #TREA:
                //              2.14: CtgyPurp
                nodeCtgyPurp = _nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
    
                //                  2.16: Prtry
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', 'TREA');
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_InstrPrty</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_InstrPrty(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.7: InstrPrty
        //------------------------------------------------------------------------------------------------------
    
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #URGP:
                //          2.7: InstrPrty
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmftTpInf, 'InstrPrty', 'HIGH');
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.8: SvcLvl
        //              2.9: Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeSvcLvl;
        nodeSvcLvl = _nodePmftTpInf.appendChild(xmlDoc.createElement('SvcLvl'));

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #SEPA:
                super(_nodePmftTpInf);
                break;
            case #QRR:
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSvcLvl, 'Cd', 'NURG');
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl_Cd</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl_Cd(XmlElement _nodeSvcLvl)
    {
        //------------------------------------------------------------------------------------------------------
        //              2.9: Cd
        //------------------------------------------------------------------------------------------------------
    
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
             case #SEPA:
              //              2.9: Cd
              SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeSvcLvl, 'Cd', 'SEPA');
              break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>