<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_BANKOFAM_110</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_BANKOFAM_110 Extends SKS_PP_Format_BankGroup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    // Standard Positive Pay
        // 1-10    10      Check Serial Number RJ-LZF (Check Number)
        // 11-21   11      Check Amount - RJ-LZF (2 implied Decimals)
        // 22-27   6       Check Issue Date YYMMDD
        // 28-33   6       Filler - Space
        // 34-43   10      Account Number - RJ-LZF
        // 44-44   1       Record Type Code 'O'-Outstanding 'V'-Void
        // 45-59   15      Additional Data - Optional
        // 60-74   15      Additional Data - Optional
        // 75-89   15      Additional Data - Optional
        // 90-110  21      Filler - Spaces
    protected str txtDetail()
    {
        int Mult;
        str ItemType;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        //Convert negative void numbers to positives
        Mult = 1;
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'V';
            if(mSKS_PP_FileDetail.ChkCuryAmt < 0)
            {
                Mult = -1;
            }
        }
        else
        {
            ItemType = 'O';
        }
    
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(Mult * mSKS_PP_FileDetail.chkcuryamt, 11));
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(SKS_PP_StringFormats::strFill(6, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(ItemType);
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(21, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>