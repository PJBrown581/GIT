<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_CA_SCOTIA_PIAP_v21_AR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_CA_SCOTIA_PIAP_v21_AR  extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_CA_SCOTIA_PIAP_v21_AR  extends SKS_EFT_Format
{
    #define.FormatVersion('20221109')
    SKS_EFT_SequenceNumber mSequenceNumber;
    AmountMST mPaymentAmount;
    AmountMST mBatchAmount;
    int mPaymentCount;
    int mBatchCount;
    int mPaymentTotal;
    CustBankAccount                         lcustBankAccount;
    LogisticsPostalAddress                  lLogisticsPostalAddress;
    BankAccountTable mBankAccountTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        BankAccountId           prevBankAccount;
        AddressCountryRegionId  prevCountryRegionId;

        //Get sequence number
        this.getSequence();

        // Get SKS_EFT_ARBank
        this.getSKS_EFTAR_Bank();

        // Format header
        this.rec_File_Header();    

        while(mSKS_EFT_FileDetail)
        {
            this.getCustomerBankDetails(mSKS_EFT_FileDetail);

            //  getSKS_EFT_CustomerPaym()
            this.getSKS_EFT_CustomerPaym();           

            if(prevBankAccount != mSKS_EFT_FileDetail.BankAccountId         ||
               prevCountryRegionId != lLogisticsPostalAddress.CountryRegionId)
            {
                // Batch Header
                this.rec_Batch_Header();
            }

            mBankAccountTable = BankAccountTable::find(mSKS_EFT_FileDetail.BankAccountId);

            // Detail Record
            this.rec_Payments();
    
            prevBankAccount = mSKS_EFT_FileDetail.BankAccountId;
            prevCountryRegionId = lLogisticsPostalAddress.CountryRegionId;

            next mSKS_EFT_FileDetail;            

            if(prevBankAccount != mSKS_EFT_FileDetail.BankAccountId ||
               prevCountryRegionId !=lLogisticsPostalAddress.CountryRegionId)
            {
                // Format trailer
                this.rec_Batch_Totals();
            }
        }
        // Format trailer
        this.rec_File_Trailer();
    
        //Set sequence number
        this.setSequence();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustomerBankDetails</Name>
				<Source><![CDATA[
    private void getCustomerBankDetails(SKS_EFT_FileDetail _sks_eft_FileDetail)
    {
        lcustBankAccount = custBankAccount::findByCompany(_sks_eft_FileDetail.AccountCompany, _sks_eft_FileDetail.AccountNum, _sks_eft_FileDetail.DepBankAccountId);
        select firstonly CountryRegionId from lLogisticsPostalAddress where lLogisticsPostalAddress.Location == lcustBankAccount.Location;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSequence</Name>
				<Source><![CDATA[
    private void getSequence()
    {
        if(mSKS_EFT_FileFormat)
        {
            //Get Next Sequence Number
            mSequenceNumber = mSKS_EFT_FileFormat.NextSequenceNumber;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>incrementSequenceNumber</Name>
				<Source><![CDATA[
    private void incrementSequenceNumber()
    {
        if(mSequenceNumber >= 9999 || mSequenceNumber == 0)
        {
            mSequenceNumber = 1;
        }
        else
        {
            mSequenceNumber++;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_File_Header</Name>
				<Source><![CDATA[
    public boolean rec_File_Header()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str custNum;
    
        // 1    Record Type                                     1      (      1)
        sb.Append('A');
    
        // 2    Customer Number                                20      (  2- 21)
        custNum = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CustNum', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        sb.Append(SKS_PP_StringFormats::strFill(20, this.CharacterReplacement(custNum), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 3    Customer Name                                  30      ( 22- 51)
        sb.Append(SKS_PP_StringFormats::strFill(30, this.CharacterReplacement(mSKS_EFTAR_Bank.ACHCompanyName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 5    File Creation Number                            4      ( 52- 55)
        sb.Append(SKS_PP_StringFormats::strFill(4,num2str(mSequenceNumber,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        // 7    FCD                                             8      ( 56- 63)
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));
    
        // 8    FCT                                             6      ( 64- 69)
        sb.Append(SKS_PP_StringFormats::strTimeHHMMSS());
    
        // 9    Version                                         7      ( 70- 76)
        sb.Append('PIAP2.1');
        
        // 10   SC Customer ID                                  6      (77-82)
        sb.Append(SKS_PP_StringFormats::strFill(6, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 11 Test                                              1       (83-83)
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 12                                                   17      (84-100)
        sb.Append(SKS_PP_StringFormats::strFill(17, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.incrementSequenceNumber();
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Batch_Header</Name>
				<Source><![CDATA[
    public boolean rec_Batch_Header()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        LogisticsPostalAddress  postalAddress;
        str idNumber;
        mBatchCount++;
    
        // 1    Record Type                                     1      (      1)
        sb.Append('B');
    
        if(SKS_EFT_Format::getCodelookupvalue('InstitutionCode', mSKS_EFT_FileDetail.RecId))
        {
            // 2    Debit Account Qualifier                         2      (  2-  3)
            sb.Append('04');
    
            // 3    Debit Bank (DFI) Identification Number         11      (  4- 14)
            idNumber = '0' + SKS_PP_StringFormats::strFill(3, this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InstitutionCode', mSKS_EFT_FileDetail.RecId)), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left) +
                             SKS_PP_StringFormats::strFill(5, mSKS_EFT_FileDetail.DepBankTransit, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left);
    
            sb.Append(SKS_PP_StringFormats::strFill(11, idNumber, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));    
        }
        else if(mSKS_EFT_FileDetail.DepSwiftNo != '')
        {
            // 2    Debit Account Qualifier                         2      (  2-  3)
            sb.Append('02');
    
            // 3    Debit Bank (DFI) Identification Number         11      (  4- 14)
            sb.Append(SKS_PP_StringFormats::strFill(11, mSKS_EFT_FileDetail.DepSwiftNo, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else if(mSKS_EFT_FileDetail.DepBankTransit)
        {
            // 2    Debit Account Qualifier                         2      (  2-  3)
            sb.Append('01');
    
            // 3    Debit Bank (DFI) Identification Number         11      (  4- 14)
            sb.Append(SKS_PP_StringFormats::strFill(11, mSKS_EFT_FileDetail.DepBankTransit, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            // 2    Debit Account Qualifier                         2      (  2-  3)
            sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 3    Debit Bank (DFI) Identification Number         11      (  4- 14)
            sb.Append(SKS_PP_StringFormats::strFill(11, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
    
        // 4    Debit Bank Account                             50      ( 15- 64)
        sb.Append(SKS_PP_StringFormats::strFill(50,mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 6    Filler                                          5      ( 65- 69)
        sb.Append(SKS_PP_StringFormats::strFill(5,'', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 7    Return Bank Identification Qualifier                2      ( 70- 71)
        sb.Append(SKS_PP_StringFormats::strFill(2,'', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 8    Return Bank (DFI) Identification Number        11      ( 72- 82)
        sb.Append(SKS_PP_StringFormats::strFill(11,'', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 9    Return Bank Account                            50      ( 83-132)
        sb.Append(SKS_PP_StringFormats::strFill(50,'', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //10    Filler                                          5      (133-137)
        sb.Append(SKS_PP_StringFormats::strFill(5, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //11    In Currency                                     3      (138-140)
        sb.Append(SKS_PP_StringFormats::strFill(3, mSKS_EFT_FileDetail.PaymentCurrencyCode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //12    Out Currency                                    3      (141-143)
        sb.Append(SKS_PP_StringFormats::strFill(3, mSKS_EFT_FileDetail.PaymentCurrencyCode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //13    Country Code                                    2      (144-145)
        postalAddress = this.findPostalAddressLineByPartyLocationRole(CustTable::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum).Party, 'Direct debit');
        
        sb.Append(SKS_PP_StringFormats::strFill(2, this.getLogisticsAddressCountryISO(postalAddress.CountryRegionId), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //14    Payment Type                                    4      (146-149)
        sb.Append(SKS_PP_StringFormats::strFill(4, '04', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
              
        //15    Service group                                         11      (150-160)
        sb.Append(SKS_PP_StringFormats::strFill(11, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //16    Service group name                                    64      (161-224)
        sb.Append(SKS_PP_StringFormats::strFill(64, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //17    Scotia connect indicator                              01      (225-225)
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //18    SC Template ID                                         30      (226-255)
        sb.Append(SKS_PP_StringFormats::strFill(30, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //19    Filler                                                  75      (256-332)
        sb.Append(SKS_PP_StringFormats::strFill(77, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Payments</Name>
				<Source><![CDATA[
    public boolean rec_Payments()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str institutionNumber;
        str institutnCode;
        mPaymentCount++;
        mPaymentTotal++;
    
        // 1    Record Type                                     1      (      1)
        sb.Append('P');
    
        // 2    Payee Debit/Credit                              1      (      2)
        sb.Append('D');
    
        // 3    Payable Date                                    8      (  3- 10)
        sb.Append(SKS_PP_StringFormats::strFill(8, SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 4    Payment Number                                 30      ( 11- 40)
        sb.Append(SKS_PP_StringFormats::strFill(30, this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 5    Transaction Reference Number                   19      ( 41- 59)
        sb.Append(SKS_PP_StringFormats::strFill(19,this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 6    Reference Number                               14      ( 60- 73)
        sb.Append(SKS_PP_StringFormats::strFill(14, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 7    Payee Name                                     35      ( 74-108)
        sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_FileDetail.AccountName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 8    Payee Amount                                   15      (109-123)
        mPaymentAmount += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        mBatchAmount   += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
    
        sb.Append(SKS_PP_StringFormats::strMoney(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 15));
    
        institutnCode = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InstitutnCode', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        if(institutnCode != '')
        {
            // 9    Payee Account Qualifier                         2      (124-125)
            sb.Append('04');
    
            //10    Payee (DFI) Indentification Number             11      (126-136)
            institutionNumber = '0' + SKS_PP_StringFormats::strFill(3, this.CharacterReplacement(institutnCode), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left) +
                                    SKS_PP_StringFormats::strFill(5, mSKS_EFT_FileDetail.BankBankTransit, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left);
    
            sb.Append(SKS_PP_StringFormats::strFill(11, institutionNumber, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else if(mBankAccountTable.SWIFTNo)
        {
            // 9    Payee Account Qualifier                         2      (124-125)
            sb.Append('02');
    
            //10    Payee (DFI) Indentification Number             11      (126-136)
            sb.Append(SKS_PP_StringFormats::strFill(11, mBankAccountTable.SWIFTNo, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else if(mSKS_EFT_FileDetail.BankBankTransit)
        {
            // 9    Payee Account Qualifier                         2      (124-125)
            sb.Append('01');
    
            //10    Payee (DFI) Indentification Number             11      (126-136)
            sb.Append(SKS_PP_StringFormats::strFill(11, mSKS_EFT_FileDetail.BankBankTransit, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            // 9    Payee Account Qualifier                         2      (124-125)
            sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            //10    Payee (DFI) Indentification Number             11      (126-136)
            sb.Append(SKS_PP_StringFormats::strFill(11, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
    
        //11    Payee Account                                  50      (137-186)
        sb.Append(SKS_PP_StringFormats::strFill(50, mSKS_EFT_FileDetail.BankBankAcct,SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //12    Payee IBAN                                     50      (187-236)
        if(mBankAccountTable.IBAN)
        {
            sb.Append(SKS_PP_StringFormats::strFill(50, mBankAccountTable.IBAN,SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(50, '',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
        }
        
        //13    CPA/Payment Type                                3      (237-239)
        sb.Append('460');
               
        //14    Originator Short Name                          15      (240-254)
        sb.Append(SKS_PP_StringFormats::strFill(15,this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('OrgShortNm', mSKS_EFT_FileDetail.RecId)), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //15    Originator Long Name                           30      (255-284)
        sb.Append(SKS_PP_StringFormats::strFill(30, this.CharacterReplacement(mSKS_EFT_FileDetail.AccountName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //16    Customer Sundry Information                    15      (285-299)
        sb.Append(SKS_PP_StringFormats::strFill(15, this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //17    File Processing                                 1      (    300)
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //------US ACH Domestic-------------------------------------------------
        //18    Payee Saving/Chequing                           1      (    301)
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //19    Standard Entry Class Code                       3      (302-304)
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //20    Foreign Exhange Rate                           10      (305-317)
        sb.Append(SKS_PP_StringFormats::strFill(13, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //21    FX Contract Number                             10      (318-327)
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //      Filler                                         12      (328-339)
        sb.Append(SKS_PP_StringFormats::strFill(12, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //22    Priority Wire                                   1      (    340)
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
               
        //23    Filler                                         15      (341-355)
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //24    Serial Number                                  10      (356-365)
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //25    City Code                                       2      (366-367)
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //26    ABA Code                                        4      (368-371)
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //27    Fed Code                                        4      (372-375)
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //28    Stamp Tax ID                                   10      (376-385)
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //29    Filler                                         15      (386-400)
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //30    Recipient ID                                  10      (401-410)
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //31    Agreement ID                                  16      (411-426)
        sb.Append(SKS_PP_StringFormats::strFill(16, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //32    Vendor Number                                 30      (427-456)
        sb.Append(SKS_PP_StringFormats::strFill(30, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //33    Filler                                        4      (457-460)
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //34    Root Model                                   2      (461-462)
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //35    Control digit                                2      (463-464)
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //36    Payment reference                            20      (465-484)
        sb.Append(SKS_PP_StringFormats::strFill(20, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //37    Payment/Transfer Sub type                    1      (485)
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //38    Sign                                       1      (486)
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //39    Flag unpaid                               1       (487)
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //40    Currency re-calculate indicator             1      (488)
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //41    Trade Number                               8      (489-496)
        sb.Append(SKS_PP_StringFormats::strFill(8, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //42    Transfer debit amount                      11      (497-507)
        sb.Append(SKS_PP_StringFormats::strFill(11, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //43    Expence account                             20      (508-527)
        sb.Append(SKS_PP_StringFormats::strFill(20, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //44    RUC of other bank                            11      (528-538)
        sb.Append(SKS_PP_StringFormats::strFill(11, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //45    ODFI Account type                           1      (539)
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //46    Security question                          40      (540-579)
        sb.Append(SKS_PP_StringFormats::strFill(40, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //47    Security answer                            25      (580-604)
        sb.Append(SKS_PP_StringFormats::strFill(25, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //48    Recipient  language preference             2      (605-606)
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //49    Filler                                     46      (607-652)
        sb.Append(SKS_PP_StringFormats::strFill(46, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Batch_Totals</Name>
				<Source><![CDATA[
    public boolean rec_Batch_Totals()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        // 1    Record Type                                     1      (      1)
        sb.Append('Y');
    
        // 2    Filler                                          6      (  2-  7)
        sb.Append(SKS_PP_StringFormats::strFill(6, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 3    Number of Payments in Batch                    10      (  8- 17)
        sb.Append(SKS_PP_StringFormats::strFill(10, int2str(mPaymentCount), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        // 4    Dollar Total of Batch                          17      ( 18- 34)
        sb.Append(SKS_PP_StringFormats::strMoney(mBatchAmount, 17));
    
        // 5    Filler                                         66      ( 35-100)
        sb.Append(SKS_PP_StringFormats::strFill(66, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //Reset Batch values
        mBatchAmount = 0;
        mPaymentCount = 0;
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_File_Trailer</Name>
				<Source><![CDATA[
    private boolean rec_File_Trailer()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        // 1    Record Type                                     1      (      1)
        sb.Append('Z');
    
        // 2    Total Number of Batches                         6      (  2-  7)
        sb.Append(SKS_PP_StringFormats::strFill(6, int2str(mBatchCount), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        // 3    Total Number of Payments in file               10      (  8- 17)
        sb.Append(SKS_PP_StringFormats::strFill(10, int2str(mPaymentTotal), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        // 4    Total Value of all Batches in file             17      ( 18- 34)
        sb.Append(SKS_PP_StringFormats::strMoney(mPaymentAmount, 17));
    
        // 5    Filler                                         66      ( 35-100)
        sb.Append(SKS_PP_StringFormats::strFill(66, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSequence</Name>
				<Source><![CDATA[
    private void setSequence()
    {
        SKS_EFT_FileFormat sks_eft_fileformat;
        ;
    
        select firstOnly forUpdate sks_eft_fileformat
            where sks_eft_fileformat.FormatId == mSKS_EFT_FileFormat.FormatId;
    
        if(sks_eft_fileformat)
        {
            sks_eft_fileformat.NextSequenceNumber = mSequenceNumber;
            sks_eft_fileformat.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPostalAddressLineByPartyLocationRole</Name>
				<Source><![CDATA[
    protected LogisticsPostalAddress findPostalAddressLineByPartyLocationRole(
        DirPartyRecId   _party,
        LogisticsLocationRoleName   _roleName)
    {
        DirPartyLocation        partyLocation;
        LogisticsLocation       logisticsLocation;
        LogisticsPostalAddress  postalAddress;
    
        while select partyLocation
            where partyLocation.Party == _party
        {
            if(strScan(partyLocation.locationRoleNames(),_roleName,1,strLen(partyLocation.locationRoleNames())))
            {
                logisticsLocation = logisticsLocation::find(partyLocation.Location);
                if(logisticsLocation.IsPostalAddress)
                {
                    postalAddress = LogisticsPostalAddress::findByLocation(logisticsLocation.RecId);
                    break;
                }
            }
        }
    
        return postalAddress;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>