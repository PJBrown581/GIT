<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_BANKOFWEST_120</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_BANKOFWEST_120 extends SKS_PP_Format_BankGroup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        //  Field number        Field MAX Length    Field Desc
        //      1                      1                Filler
        //      2                      9                Account #
        //      3                      6                Issue Date
        //      4                      10               Cheque #
        //      5                      10               Amount
        //      6                      40               Payee Name
        //      7                      40               Payee Name
        //      8                      3                Filler
        //      9                      1                Void Indicator
    
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        int mult;
        str itemType;
    
        //Convert negative void numbers to positives
        mult = 1;
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            itemType = 'V';
            if(mSKS_PP_FileDetail.chkcuryamt < 0)
            {
                mult = -1;
            }
        }
        else
        {
            itemType = ' ';
        }
    
        //Filler 1 space
        sb.Append('0');
    
        // Account #
        sb.Append(SKS_PP_StringFormats::strFill(9, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        //Issue Date MMDDYY
        sb.Append(SKS_PP_StringFormats::strDateMMDDYY(mSKS_PP_FileDetail.ChkDocDate, DateSeparator::None));
    
        //Check #
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        //Amount
        sb.Append(SKS_PP_StringFormats::strMoney(mult * mSKS_PP_FileDetail.Chkcuryamt, 10));
    
        //Payee Name
        sb.Append(SKS_PP_StringFormats::strFill(40, subStr(mSKS_PP_FileDetail.VendName, 0, 40), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(40, subStr(mSKS_PP_FileDetail.VendName, 41, 80), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //Filler 3 space
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
    
        //Void Indicator
        sb.Append(itemType);
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>