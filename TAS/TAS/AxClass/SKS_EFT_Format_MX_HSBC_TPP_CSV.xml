<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_MX_HSBC_TPP_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_MX_HSBC_TPP_CSV extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_MX_HSBC_TPP_CSV extends SKS_EFT_Format
{
    #define.FormatVersion('20220518')
    #define.Separator(',')
    #define.DoubleQuote('"')
    //SKS_VSTS_13443 -->
    #define.TPP('TPP')
    #define.TPP_WOFP('TPP-WOFP')
    //SKS_VSTS_13443 <--
    int  mRecCount;
    int  seqNum;
    VendBankAccount mVendBankAccount;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        BankAccountId prevBankAccount;

        while(mSKS_EFT_FileDetail)
        {
            this.getVendBankAccount();

            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();

            this.rec_Detail();

            prevBankAccount = mSKS_EFT_FileDetail.BankAccountId;

            next mSKS_EFT_FileDetail;

            if(prevBankAccount != mSKS_EFT_FileDetail.BankAccountId)
            {
                this.rec_Summary();
                mRecCount = 0;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVendBankAccount</Name>
				<Source><![CDATA[
    void getVendBankAccount()
    {
        if(mVendBankAccount.AccountID != mSKS_EFT_FileDetail.DepBankAccountId || mVendBankAccount.VendAccount != mSKS_EFT_FileDetail.AccountNum)
        {
            mVendBankAccount = VendBankAccount::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum, mSKS_EFT_FileDetail.DepBankAccountId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Detail</Name>
				<Source><![CDATA[
    boolean rec_Detail()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        VendTable lVendTable;
        LogisticsPostalAddress lLogisticsPostalAddress;
        mRecCount++;

        //  1       Transaction Number
        sb.Append(this.wrapField(subStr(num2str(mRecCount, 0, 0, 0, 0), 1, 6)));

        //  2       Ordering Account
        sb.Append(this.wrapField(substr(mSKS_EFT_FileDetail.BankBankAcct, 1, 10)));

        //  3       Beneficiary Account
        select firstonly CountryRegionId from lLogisticsPostalAddress where lLogisticsPostalAddress.Location == mVendBankAccount.Location;
        
        if(mVendBankAccount.CurrencyCode == 'MXN' && lLogisticsPostalAddress.CountryRegionId == 'MEX' && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TPP)    //SKS#DevOps:16597
        {
            sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.DepBankAcct, 8, 10)));
        }
        else if(mVendBankAccount.CurrencyCode == 'USD' && lLogisticsPostalAddress.CountryRegionId != 'MEX' && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TPP)
        {
            sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.DepBankAcct, 9, 9)));
        }
        else
        {
            sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(10,mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));
        }

        //  4       Amount
        sb.Append(this.wrapField(num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 0, 2, 1, 0)));

        //  5       Currency
        if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'MXN')
        {
            sb.Append(this.wrapField('1'));
        }
        else if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'USD')
        {
            sb.Append(this.wrapField('2'));
        }
        else
        {
            sb.Append(this.wrapField(''));
        }

        // 6        Reference
        sb.Append(this.wrapField(substr(mSKS_EFT_FileDetail.PaymentReference, 1, 30)));

        // 7        Beneficiary Name (35)
        sb.Append(this.wrapField(subStr(mSKS_EFT_VendorPaym.WBeneName,1,40),true));

        lVendTable = VendTable::findByCompany(mSKS_EFT_VendorPaym.VendCompany, mSKS_EFT_VendorPaym.VendAccount);

        if(lVendTable.Rfc_MX && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TPP)//SKS_VSTS_13443
        {
            //  8       Fiscal Voucher (FV)
            sb.Append(this.wrapField('1'));

            //  9       Beneficiary Taxpayer ID (RFC)
            sb.Append(this.wrapField(subStr(lVendTable.Rfc_MX, 1, 18), true));

            //  10      VAT (IVA)
            sb.Append(this.wrapField(num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1 * 0.16, 0, 2, 1, 0)));
        }
        else
        {
            //  8       Fiscal Voucher (FV)
            sb.Append(this.wrapField('0'));

            //  9       Beneficiary Taxpayer ID (RFC)
            sb.Append(this.wrapField(''));

            //  10      VAT (IVA)
            sb.Append(this.wrapField(''));
        }

        // 11 Beneficiary Email Address
        sb.Append(this.wrapField(''));


        // 12       Ordering Party Account
        sb.Append(this.wrapField(''));


        // 13       Ordering Party Name
        sb.Append(this.wrapField(''));

        // 14   Ordering Party  Address 1
        sb.Append(this.wrapField(''));

        // 15    Ordering Party Address 2
        sb.Append(this.wrapField(''));

        // 16    Ordering Party Address 3
        sb.Append(this.wrapField(''));

        // 17   Ordering party Institution BIC
        sb.Append(this.wrapField(''));

        // 18   Ordering party Institution Name
        sb.Append(this.wrapField(''));

        // 19   Ordering party Institution address
        sb.Append(this.wrapField(''));

        // 20   Ordering party Institution address 1
        sb.Append(this.wrapField(''));

        // 21   Ordering party Institution address 2
        sb.Append(this.wrapField(''));

        // 22   Ordering party Institution
        sb.Append(this.wrapField(''));

        // 23   Purpose of Payment
        if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'MXN')
        {
            sb.Append(this.wrapField('',false,false));
        }
        else
        {
            sb.Append(this.wrapField(SKS_EFT_Format::getValueFromCode('PurPmt',mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId), false, false));
        }

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Summary</Name>
				<Source><![CDATA[
    //  1       Block Number
    //  2       Total Transactions
    //  3       Concept
    boolean rec_Summary()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        seqNum++;

        //  1       Block Number
        sb.Append(this.wrapField(subStr(num2str(seqNum, 0, 0, 0, 0), 1, 6)));

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TPP_WOFP)//SKS_VSTS_13443
        {
            //  2       Total Transactions
            sb.Append(this.wrapField(subStr(num2str(mRecCount, 0, 0, 0, 0), 1, 6), false, false));
        }
        else
        {
            //  2       Total Transactions
            sb.Append(this.wrapField(subStr(num2str(mRecCount, 0, 0, 0, 0), 1, 6)));
            
            //  3       Concept
            sb.Append(this.wrapField('', false, false));
        }

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '',  boolean _Quote = false, boolean _addSeparator = true)
    {
        if(_addSeparator)
        {
            if(_Quote && _field != '' || _Quote == true)
            {
                return strReplace(_field, ',', ' ') + #Separator;
            }
            else
            {
                return _field + #Separator;
            }
        }
        else
        {
            if(_Quote && _field != '' || _Quote == true)
            {
                return strReplace(_field, ',', ' ');
            }
            else
            {
                return _field;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>