<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_UNION_PAYER_DIRECT_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_UNION_PAYER_DIRECT_CSV extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_US_UNION_PAYER_DIRECT_CSV extends SKS_EFT_Format
{
    #define.FormatVersion('20220623')
    #define.Separator(',')
    #define.DoubleQuote('"')
    boolean batchFlag = true;       //SKS#DevOps:15701
    str     batchNumber;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;

        this.rec_Header();

        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            if(batchFlag)
            {
                batchNumber = SKS_EFT_Format::getCodelookupvalue('NextSequenceNumber', mSKS_EFT_FileDetail.RecId);
                if(batchNumber)
                {
                    batchFlag = false;
                }
            }
            while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
            {
                this.rec_Detail(invSKS_EFT_FileDetail);
            }
            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Header</Name>
				<Source><![CDATA[
    private boolean rec_Header()
    {
        //---------------------------------------------------------------------------------------------
        //1.Batch Number
        //2.Payee Name
        //3.Client Payee ID
        //4.Payee Location
        //5.Disbursement Number
        //6.Primary PO
        //7.Primary Invoice
        //8.Account Number
        //9.Description
        //10.Amount
        //-------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        //1.Batch Number
        sb.Append(this.wrapField('Batch Number'));

        //2.Payee Name
        sb.Append(this.wrapField('Payee Name'));

        //3.Client Payee ID
        sb.Append(this.wrapField('Client Payee ID'));

        //4.Payee Location
        sb.Append(this.wrapField('Payee Location'));

        //5.Disbursement Number
        sb.Append(this.wrapField('Disbursement Number'));

        //6.Primary PO
        sb.Append(this.wrapField('Primary PO'));

        //7.Primary Invoice
        sb.Append(this.wrapField('Primary Invoice'));

        //8.Account Number
        sb.Append(this.wrapField('Account Number'));

        //9.Description
        sb.Append(this.wrapField('Description'));

        //10.Amount
        sb.Append(this.wrapField('Amount', false));
        
        this.fileWrite(sb.ToString());
        
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Detail</Name>
				<Source><![CDATA[
    private boolean rec_Detail(SKS_EFT_FileDetail tmpSKS_EFT_FileDetail)
    {
        //---------------------------------------------------------------------------------------------
        //1.Batch Number
        //2.Payee Name
        //3.Client Payee ID
        //4.Payee Location
        //5.Disbursement Number
        //6.Primary PO
        //7.Primary Invoice
        //8.Account Number
        //9.Description
        //10.Amount
        //-------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        //1.Batch Number
        sb.Append(this.wrapField(batchNumber));

        //2.Payee Name
        sb.Append(this.wrapField(SubStr(mSKS_EFT_FileDetail_VendAddress.BeneName, 1, 40)));

        //3.Client Payee ID
        str payeeID = SKS_PP_StringFormats::strLTrimZeroes(mSKS_EFT_FileDetail.AccountNum);

        sb.Append(this.wrapField(SubStr(payeeID, 1, 40)));

        //4.Payee Location
        sb.Append(this.wrapField());

        //5.Disbursement Number
        sb.Append(this.wrapField(SKS_PP_StringFormats::strRight(mSKS_EFT_FileDetail.PaymentReference, 20)));

        //6.Primary PO
        sb.Append(this.wrapField(this.get_POInfo(tmpSKS_EFT_FileDetail)));

        //7.Primary Invoice
        sb.Append(this.wrapField(tmpSKS_EFT_FileDetail.InvoiceNumber, 40));

        //8.Account Number
        sb.Append(this.wrapField(VendTable::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum).YourAccountNum, 80));

        //9.Description
        sb.Append(this.wrapField(tmpSKS_EFT_FileDetail.InvoiceTransactionTxt, 80));

        //10.Amount
        sb.Append(this.wrapField(num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0), false));

        
        this.fileWrite(sb.ToString());
        
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>get_POInfo</Name>
				<Source><![CDATA[
    private str get_POInfo(SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        VendInvoiceJour vendInvoiceJour;
        Container companyInfo;
        str value = '';
    
        companyInfo += _invSKS_EFT_FileDetail.InvoiceCompany;
    
        // See if PO exists
        if(conPeek(companyInfo, 1) != '')
        {
            select firstOnly crossCompany:companyInfo PurchId, InvoiceAccount, InvoiceDate, InvoiceId from vendInvoiceJour where
                vendInvoiceJour.InvoiceAccount == _invSKS_EFT_FileDetail.AccountNum &&
                vendInvoiceJour.InvoiceDate == _invSKS_EFT_FileDetail.InvoiceDate &&
                vendInvoiceJour.InvoiceId == _invSKS_EFT_FileDetail.InvoiceNumber &&
                vendInvoiceJour.PurchId != '';
    
            if(vendInvoiceJour)
            {
                value = vendInvoiceJour.PurchId;
            }
        }
        return this.CharacterReplacement(value);
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '',  boolean _addSeparator = true)
    {
        if(_addSeparator)
        {
            if(_field != '' && strContains(_field, ','))
            {
                return #DoubleQuote + _field + #DoubleQuote + #Separator;
            }
            else
            {
                return _field + #Separator;
            }
        }
        else
        {
            return _field;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
            join mSKS_EFT_FileDetail_BenBank
              order by mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_BenBank.RefRecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>