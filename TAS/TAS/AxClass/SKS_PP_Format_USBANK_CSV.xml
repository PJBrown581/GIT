<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_USBANK_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_USBANK_CSV Extends SKS_PP_Format_BankGroup
{
    #define.Comma(',')
    #define.doubleQuotes('"')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    //Standard Positive Pay
    // CSV format
    // Bank Account Number   Appears on the check
    // Check Number          Check Number on the check
    // Check Amount          includes decimal and 2 decimal positions.
    // Payee 1               Payee Name
    // Check date            Date on the check  MM/DD/YYYY
    // Item type             "CN" if the check is voided
    protected str txtDetail()
    {
        str ChkNbr;
        int Mult;
        str ItemType;
        str Vendname;
        
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
        
        Mult = 1;
        
        vendName = mSKS_PP_FileDetail.VendName;
        if(strContains(mSKS_PP_FileDetail.VendName, #Comma))
        {
            vendName = #doubleQuotes + mSKS_PP_FileDetail.VendName + #doubleQuotes;
        }
        
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'CN';
            if(mSKS_PP_FileDetail.chkcuryamt < 0)
            {
                Mult = -1;
            }
        }
        else
        {
            ItemType = 'IS';
        }
        
        ChkNbr = mSKS_PP_FileDetail.ChkRefNbr;
        sb.Append(subStr(mSKS_PP_FileDetail.BnkBankAcct, 1, 12));
        sb.Append(#Comma);
        sb.Append(subStr(ChkNbr, 1, 10));
        sb.Append(#Comma);
        sb.Append(Num2Str(mSKS_PP_FileDetail.ChkCuryAmt * Mult,1, 2, 1,0));
        sb.Append(#Comma);

        if(ItemType == 'IS')
        {
            sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(mSKS_PP_FileDetail.ChkDocDate, DateSeparator::None));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()), DateSeparator::None));
        }

        sb.Append(#Comma);
        sb.Append(ItemType);
        sb.Append(#Comma);
        sb.Append(subStr(Vendname, 1, 40));
        sb.Append(#Comma);
        
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>