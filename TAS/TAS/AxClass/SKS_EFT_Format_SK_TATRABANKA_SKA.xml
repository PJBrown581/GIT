<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_SK_TATRABANKA_SKA</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_SK_TATRABANKA_SKA extends  SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_SK_TATRABANKA_SKA extends  SKS_EFT_Format
{
    #define.FormatVersion('20220609')
    #define.Comma(',')

    BankAccountTable mBankAccountTable;
    AmountMST mPaymentAmount;
    SKS_EFT_SequenceNumber  mSequenceNumber;
    real numOfOrders;
    int countOrders;
    boolean sign = false;
    boolean firstPayment;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        // Get sequence number
        this.getSequence();

        while(mSKS_EFT_FileDetail)
        {
            firstPayment = false;

            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();

            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            // Get Bank account
            if(mBankAccountTable.AccountID != mSKS_EFT_FileDetail.BankAccountId)
            {
                // Get SKS_EFT_Bank
                this.getSKS_EFT_Bank();
    
                // Get Bank account
                mBankAccountTable = BankAccountTable::find(mSKS_EFT_FileDetail.BankAccountId);
               
                this.rec_01();
                this.rec_02();
                this.rec_03();
                this.rec_04();
                this.rec_05();
                this.rec_07();
            }
    
            //Payment Header lines
            this.rec_OrderHeader();
            this.rec_20();
            this.rec_32A();
            this.rec_50();
            this.rec_52D();
            this.rec_57A();
            this.rec_57D();
            this.rec_59();
            this.rec_70();
            this.rec_71A();
            this.rec_72();            
            

            next mSKS_EFT_FileDetail;
        }
        if(numOfOrders > 1)
        {
            sb.Append('-}');

            this.fileWrite(sb.ToString());
        }
        
        // Increment sequence number
        this.incrementSequenceNumber();

        // Set sequence number
        this.setSequence();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSequence</Name>
				<Source><![CDATA[
    private void setSequence()
    {
        SKS_EFT_FileFormat sks_eft_fileformat;
        ;

        select firstOnly forUpdate sks_eft_fileformat
        where sks_eft_fileformat.FormatId == mSKS_EFT_FileFormat.FormatId;

        if(sks_eft_fileformat)
        {
            sks_eft_fileformat.NextSequenceNumber = mSequenceNumber;
            sks_eft_fileformat.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSequence</Name>
				<Source><![CDATA[
    private void getSequence()
    {
        if(mSKS_EFT_FileFormat)
        {
            //Get Next Sequence Number
            mSequenceNumber = mSKS_EFT_FileFormat.NextSequenceNumber;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>incrementSequenceNumber</Name>
				<Source><![CDATA[
    private void incrementSequenceNumber()
    {
        if(mSequenceNumber >= 9999 || mSequenceNumber == 0)
        {
            mSequenceNumber = 1;
        }
        else
        {
            mSequenceNumber++;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_01</Name>
				<Source><![CDATA[
    //1     Tag
    //2     Customer Reference
    boolean rec_01()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        //1     Tag
        if(firstPayment)
        {
            sb.Append('-}');
            sb.AppendLine();
        }
        firstPayment = true;
        sb.AppendLine();
        sb.Append(':01:');

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_02</Name>
				<Source><![CDATA[
    boolean rec_02()
    {
        SKS_EFT_FileDetail tmpSKS_EFT_FileDetail;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        // Select count and sum for this file
        select COUNT(InvoiceOrigAmountCur), SUM(InvoiceSettleAmountPmtCur) from tmpSKS_EFT_FileDetail
            where
                tmpSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                tmpSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                tmpSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary&&
                tmpSKS_EFT_FileDetail.BankAccountId == mSKS_EFT_FileDetail.BankAccountId;

        //1     Tag
        sb.Append(':02:');

        //2     Total amount of all orders
        sb.Append(num2str(this.getPositiveAmount(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur),0,2,2,0));

        numOfOrders = tmpSKS_EFT_FileDetail.InvoiceOrigAmountCur;

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_03</Name>
				<Source><![CDATA[
    boolean rec_03()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        //1     Tag
        sb.Append(':03:');

        //2      Number of orders in the file
        sb.Append(SKS_PP_StringFormats::strFill(5, num2str(numOfOrders,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_04</Name>
				<Source><![CDATA[
    boolean rec_04()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        if(mBankAccountTable.SWIFTNo)
        {
            //1     Tag
            sb.Append(':04:');

            //2      Ordering party Swift address
            sb.Append(subStr(strUpr(mBankAccountTable.SWIFTNo), 1, 11));
        
            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_05</Name>
				<Source><![CDATA[
    boolean rec_05()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        if(mSKS_EFT_Bank.WOrdPartyName  ||  mSKS_EFT_Bank.WOrdPartyAddr || mSKS_EFT_Bank.WOrdPartyAddr2 ||  
           mSKS_EFT_Bank.WOrdPartyZipCode   ||  mSKS_EFT_Bank.WOrdPartyCity ||  mSKS_EFT_Bank.WOrdPartyState  ||    mSKS_EFT_Bank.WOrdPartyCountryRegionId)
        {
            //1     Tag
            sb.Append(':05:');

            //2      Ordering party name and address
            sb.Append(subStr(mSKS_EFT_Bank.WOrdPartyName, 1, 35));
            sb.AppendLine();

            sb.Append(subStr(strUpr(mSKS_EFT_Bank.WOrdPartyAddr + ',' + mSKS_EFT_Bank.WOrdPartyAddr2), 1, 35));
            sb.AppendLine();

            sb.Append(subStr(strUpr(mSKS_EFT_Bank.WOrdPartyZipCode + ',' + mSKS_EFT_Bank.WOrdPartyCity), 1, 35));
            sb.AppendLine();

            sb.Append(subStr(strUpr(mSKS_EFT_Bank.WOrdPartyState) + ',' + this.getLogisticsAddressCountryISO(mSKS_EFT_Bank.WOrdPartyCountryRegionId), 1, 35));

            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_07</Name>
				<Source><![CDATA[
    boolean rec_07()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        //1     Tag
        sb.Append(':07:');

        //2       Name of the file SKA
        sb.Append(subStr(strUpr(mSKS_EFT_File.FileName), 1, 12));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_OrderHeader</Name>
				<Source><![CDATA[
    boolean rec_OrderHeader()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        countOrders++;
        
        if(numOfOrders  > 1)
        {
            if(sign)
            {
                sb.Append('-}$');
            }
            sign = true;
        }
            
        sb.Append('{');

        sb.Append('1:F01');

        //      bank code of ordering party        
        sb.Append(subStr(mBankAccountTable.IBAN, 5, 4) + 'XXXXAXXX');
    
        //      file-number
        sb.Append(SKS_PP_StringFormats::strFill(4,num2str(mSequenceNumber,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        //      transaction number
        sb.Append(SKS_PP_StringFormats::strFill(6,num2str(countOrders,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        sb.Append('}{');

        sb.Append('2:I100');

        if(strLen(mSKS_EFT_FileDetail.DepSwiftNo) == 11)
        {
            sb.Append(subStr(strUpr(mSKS_EFT_FileDetail.DepSwiftNo), 1, 8) + 'A' + subStr(strUpr(mSKS_EFT_FileDetail.DepSwiftNo), 9, 3));
        }
        else 
        {
            sb.Append(subStr(strUpr(mSKS_EFT_FileDetail.DepSwiftNo), 1, 8) + 'A' + 'XXX');
        }
        sb.Append('N1');

        sb.Append('}{');
        sb.Append('4:');

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_20</Name>
				<Source><![CDATA[
    boolean rec_20()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        sb.Append(':20:');
    
        //2     Customer Reference
        sb.Append(SKS_PP_StringFormats::strFill(16, mSKS_EFT_FileDetail.PaymentReference, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_32A</Name>
				<Source><![CDATA[
    boolean rec_32A()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        //1     Tag
        sb.Append(':32A:');
    
        //2     order’s value date
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(mSKS_EFT_FileDetail.EffectiveDate));

        //3     ISO code of the amount’s currency
        sb.Append(mSKS_EFT_FileDetail.PaymentCurrencyCode);

        //4     Amount
        sb.Append(num2str(this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur) ,0,2,2,0));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_50</Name>
				<Source><![CDATA[
    boolean rec_50()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        if(mSKS_EFT_Bank.WOrdPartyAddr || mSKS_EFT_Bank.WOrdPartyAddr2  ||  mSKS_EFT_Bank.WOrdPartyZipCode  ||  
           mSKS_EFT_Bank.WOrdPartyCity  ||  mSKS_EFT_Bank.WOrdPartyState  ||   mSKS_EFT_Bank.WOrdPartyCountryRegionId)
        {
            //1     Tag
            sb.Append(':50:');
    
            //2     Ordering party
            sb.Append(subStr(mSKS_EFT_Bank.WOrdPartyName, 1, 35));
            sb.AppendLine();

            sb.Append(subStr(strUpr(mSKS_EFT_Bank.WOrdPartyAddr + ',' + mSKS_EFT_Bank.WOrdPartyAddr2), 1, 35));
            sb.AppendLine();
        
            sb.Append(subStr(strUpr(mSKS_EFT_Bank.WOrdPartyZipCode + ',' + mSKS_EFT_Bank.WOrdPartyCity), 1, 35));
            sb.AppendLine();

            sb.Append(subStr(strUpr(mSKS_EFT_Bank.WOrdPartyState) + ',' + this.getLogisticsAddressCountryISO(mSKS_EFT_Bank.WOrdPartyCountryRegionId), 1, 35));

            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_52D</Name>
				<Source><![CDATA[
    boolean rec_52D()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        //1     Tag
        sb.Append(':52D:');
    
        //2     Ordering party account number
        sb.Append(SKS_PP_StringFormats::strFill(16, mSKS_EFT_FileDetail.BankBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.AppendLine();

        //3     Charges account number
        sb.Append(SKS_PP_StringFormats::strFill(16, mSKS_EFT_FileDetail.BankBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.AppendLine();
        
        //4     Ordering party account currency ISO code , Ordering party charges account currency ISO code
        sb.Append(mBankAccountTable.CurrencyCode);
        sb.Append(' ');
        sb.Append(mBankAccountTable.CurrencyCode);
        sb.AppendLine();

        //5 Statistical code, Beneficiary country code (ISO), Beneficiary bank's country code (ISO)
        sb.Append('120');
        sb.Append(' ');
        sb.Append(this.getLogisticsAddressCountryISO(mSKS_EFT_VendorPaym.WBeneCountryRegionId));        
        sb.Append(' ');
        sb.Append(this.getLogisticsAddressCountryISO(mSKS_EFT_VendorPaym.WBenBankCountryRegionId));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_57A</Name>
				<Source><![CDATA[
    boolean rec_57A()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        if(mSKS_EFT_FileDetail.DepSwiftNo)
        {
            sb.Append(':57A:');

            //      Beneficiary bank Swift address
            sb.Append(SKS_PP_StringFormats::strFill(11,strUpr(mSKS_EFT_FileDetail.DepSwiftNo), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_57D</Name>
				<Source><![CDATA[
    boolean rec_57D()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        sb.Append(':57D:');

        if(mSKS_EFT_VendorPaym.WBenBankName ||  mSKS_EFT_VendorPaym.WBenBankAddr  ||  mSKS_EFT_VendorPaym.WBenBankCity  ||  mSKS_EFT_VendorPaym.WBenBankCountryRegionId)
        {
            //      Beneficiary bank name
            sb.Append(subStr(strUpr(mSKS_EFT_VendorPaym.WBenBankName), 1, 35)); 

            if(strLen(mSKS_EFT_VendorPaym.WBenBankName) > 35)
            {
                sb.AppendLine();
                sb.Append(subStr(strUpr(mSKS_EFT_VendorPaym.WBenBankName), 36, 35));
            }
            sb.AppendLine();
            sb.AppendLine();

            //  Beneficiary bank address
            sb.Append(subStr(strUpr(mSKS_EFT_VendorPaym.WBenBankAddr), 1, 35));
            sb.AppendLine();

            sb.Append(subStr(strUpr(mSKS_EFT_VendorPaym.WBenBankCity) + ',' + this.getLogisticsAddressCountryISO(mSKS_EFT_VendorPaym.WBenBankCountryRegionId), 1, 35));

            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_59</Name>
				<Source><![CDATA[
    boolean rec_59()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        if(mSKS_EFT_FileDetail.DepBankAcct  ||  mSKS_EFT_VendorPaym.WBeneName   ||  mSKS_EFT_VendorPaym.WBeneAddr   ||
           mSKS_EFT_VendorPaym.WBeneCity || mSKS_EFT_VendorPaym.WBeneCountryRegionId)
        {
            //1     Tag
            sb.Append(':59:');
    
            //2     Hyphen "/"
            sb.Append('/');

            //3     Beneficiary account number
            sb.Append(subStr(mSKS_EFT_FileDetail.DepBankAcct, 1, 35));
            sb.AppendLine();

            //3     Beneficiary name
            sb.Append(subStr(strUpr(mSKS_EFT_VendorPaym.WBeneName), 1, 35));            

            if(strLen(mSKS_EFT_VendorPaym.WBeneName) > 35)
            {
                sb.AppendLine();
                sb.Append(subStr(strUpr(mSKS_EFT_VendorPaym.WBeneName), 36, 35));
            }            
            sb.AppendLine();
            sb.AppendLine();

            //4     Beneficiary address
            sb.Append(subStr(strUpr(mSKS_EFT_VendorPaym.WBeneAddr), 1, 35));
            sb.AppendLine();
    
            sb.Append(subStr(strUpr(mSKS_EFT_VendorPaym.WBeneCity) + ',' + this.getLogisticsAddressCountryISO(mSKS_EFT_VendorPaym.WBeneCountryRegionId), 1, 35));
        }
        this.fileWrite(sb.ToString());    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_70</Name>
				<Source><![CDATA[
    boolean rec_70()
    {
        str invoiceDetails;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        invoiceDetails = strUpr(this.getInvoiceNbrs());
        if(invoiceDetails)
        {
            //1     Tag
            sb.Append(':70:');
    
            //2    Payment details
            sb.Append(subStr(invoiceDetails, 1, 35));

            if(strLen(invoiceDetails) > 35)
            {
                sb.AppendLine();
                sb.Append(subStr(invoiceDetails, 35, 35));
            }
            if(strLen(invoiceDetails) > 70)
            {
                sb.AppendLine();
                sb.Append(subStr(invoiceDetails, 70, 35));
            }
        
            if(strLen(invoiceDetails) > 105)
            {
                sb.AppendLine();
                sb.Append(subStr(invoiceDetails, 105, 35));
            }

            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_71A</Name>
				<Source><![CDATA[
    boolean rec_71A()
    {
        str value;        
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        //1     Tag
        value = SKS_EFT_Format::getValueFromCode('CostAccount', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId);

        if(value)
        {
            sb.Append(':71A:');
    
            //2    cost accounting
            sb.Append(value);

            this.fileWrite(sb.ToString());
        }   
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_72</Name>
				<Source><![CDATA[
    boolean rec_72()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        //1     Tag
        sb.Append(':72:');
    
        sb.Append('01 00 00 00');
        sb.AppendLine();

        sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.AppendLine();

        sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));        
        
        if(numOfOrders == 1)
        {
            sb.AppendLine();
            sb.Append('-}');
        }

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceNbrs</Name>
				<Source><![CDATA[
    protected str getInvoiceNbrs()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str invString;
    
        select InvoiceNumber from invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId;
    
        while(invSKS_EFT_FileDetail)
        {
            if(invSKS_EFT_FileDetail.InvoiceNumber == '')
            {
                // If no invoice number, go to next record
                next invSKS_EFT_FileDetail;
                continue;
            }
            sb.Append(invSKS_EFT_FileDetail.InvoiceNumber);
    
            next invSKS_EFT_FileDetail;
    
            if(invSKS_EFT_FileDetail)
            {
                sb.Append(', ');
            }
        }
    
        invString = this.CharacterReplacement(sb.ToString());
        return invString;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodePage</Name>
				<Source><![CDATA[
    protected int getCodePage()
    {
        return 852;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>