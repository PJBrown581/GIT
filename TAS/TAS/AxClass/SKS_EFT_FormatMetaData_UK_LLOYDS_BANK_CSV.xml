<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_UK_LLOYDS_BANK_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_UK_LLOYDS_BANK_CSV Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_UK_LLOYDS_BANK_CSV Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20221111';
        dataContractVersion = '1.0';
        conFormatID = ['UK-LLOYDS-BANK-CSV'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'UK - LLOYDS - BANK - CSV',0,'','','UK-LLOYDS-BANK-CSV',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',0,0,'',0,0,1,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-LLOYDS-BANK-CSV',1,1,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('UK-LLOYDS-BANK-CSV'):
                paymSpecList = this.getPaymSpecsMetaData_UK_LLOYDS_BANK_CSV();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_LLOYDS_BANK_CSV</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_LLOYDS_BANK_CSV()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Faster payment',1,'FPS','','FPS','TRADE PAY',0,'UK-LLOYDS-BANK-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'CHAPS with IBAN',1,'CHAPS-IBAN','','CHAPS-IBAN','TRADE PAY',0,'UK-LLOYDS-BANK-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'CHAPS with Acc No & Sort Code',1,'CHAPS','','CHAPS','TRADE PAY',0,'UK-LLOYDS-BANK-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'BACS payment',1,'BACS','','BACS','TRADE PAY',0,'UK-LLOYDS-BANK-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International with IBAN',1,'INTL-IBAN','','INTL-IBAN','TRADE PAY',0,'UK-LLOYDS-BANK-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International with Acc No & BIC',1,'INTL-BIC','','INTL-BIC','TRADE PAY',0,'UK-LLOYDS-BANK-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International with Acc No & Clearing Code',1,'INTL-CC','','INTL-CC','TRADE PAY',0,'UK-LLOYDS-BANK-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA Instant Credit Transfer',1,'SEPA-URG','','SEPA-URG','TRADE PAY',0,'UK-LLOYDS-BANK-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA Credit Transfer',1,'SEPA-STD','','SEPA-STD','TRADE PAY',0,'UK-LLOYDS-BANK-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Inter account transfer',1,'IAT','','IAT','TRADE PAY',0,'UK-LLOYDS-BANK-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('UK-LLOYDS-BANK-CSV'):
                notesList = this.getNotesMetaData_UK_LLOYDS_BANK_CSV();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UK_LLOYDS_BANK_CSV</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UK_LLOYDS_BANK_CSV()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UK-LLOYDS-BANK-CSV','FPS','-Payment notes are stored in Payment journal > Payment tab > Note section']);
        notesList = ConIns(notesList,conLen(notesList)+1,['UK-LLOYDS-BANK-CSV','CHAPS-IBAN','-Payment notes are stored in Payment journal > Payment tab > Note section.::-Payment Id Stored in Payment tab of Payment journal']);
        notesList = ConIns(notesList,conLen(notesList)+1,['UK-LLOYDS-BANK-CSV','CHAPS','-Payment notes are stored in Payment journal > Payment tab > Note section.::-Payment Id Stored in Payment tab of Payment journal']);
        notesList = ConIns(notesList,conLen(notesList)+1,['UK-LLOYDS-BANK-CSV','BACS','-Payment notes are stored in Payment journal > Payment tab > Note section::-Payment Id Stored in Payment tab of Payment journal']);
        notesList = ConIns(notesList,conLen(notesList)+1,['UK-LLOYDS-BANK-CSV','INTL-IBAN','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Central bank purpose code is stored in the Payment journal > Payment > Notification to the Central Bank section.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['UK-LLOYDS-BANK-CSV','INTL-BIC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Central bank purpose code is stored in the Payment journal > Payment > Notification to the Central Bank section.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['UK-LLOYDS-BANK-CSV','INTL-CC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Central bank purpose code is stored in the Payment journal > Payment > Notification to the Central Bank section.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['UK-LLOYDS-BANK-CSV','SEPA-URG','-Central bank purpose code is stored in the Payment journal > Payment > Notification to the Central Bank section.::-Payment notes are stored in Payment journal > Payment tab > Note section::-Payment Id Stored in Payment tab of Payment journal']);
        notesList = ConIns(notesList,conLen(notesList)+1,['UK-LLOYDS-BANK-CSV','SEPA-STD','-Central bank purpose code is stored in the Payment journal > Payment > Notification to the Central Bank section.::-Payment notes are stored in Payment journal > Payment tab > Note section::-Payment Id Stored in Payment tab of Payment journal']);
        notesList = ConIns(notesList,conLen(notesList)+1,['UK-LLOYDS-BANK-CSV','IAT','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Central bank purpose code is stored in the Payment journal > Payment > Notification to the Central Bank section.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('UK-LLOYDS-BANK-CSV'):
                validationsList = this.getValidationsMetaData_UK_LLOYDS_BANK_CSV();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_LLOYDS_BANK_CSV</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_LLOYDS_BANK_CSV()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','FPS','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 5 > Debit Account Number','Bank account number',0,'AccountNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','FPS','','Bank sort code','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 5 > Debit Account Number','Bank account number',0,'BankSortCode','','',0,0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','FPS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Field 6 > Beneficiary Name','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','FPS','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Field 7 > Beneficiary Account Number','Account Number related to vendor','9','AccountNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','FPS','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Field 8 > Beneficiary Sort Code','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','CHAPS-IBAN','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 5 > Debit Account Number','Bank account number',0,'AccountNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','CHAPS-IBAN','','Bank sort code','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 5 > Debit Account Number','Bank account number',0,'BankSortCode','','',0,0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','CHAPS-IBAN','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Field 6 > Beneficiary Name','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','CHAPS-IBAN','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','Field 7 > UK Beneficiary IBAN','IBAN related to vendor','9','BankIBAN','','',0,0,1,'22',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','CHAPS-IBAN','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field 8 > Beneficiary Address Line 1','Address related to vendor','16','WBeneAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','CHAPS-IBAN','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Field 9 > Beneficiary Address Line 2','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','CHAPS-IBAN','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Field 11 > Beneficiary Address Country','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','CHAPS','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 5 > Debit Account Number','Bank account number',0,'AccountNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','CHAPS','','Bank sort code','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 5 > Debit Account Number','Bank account number',0,'BankSortCode','','',0,0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','CHAPS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Field 6 > Beneficiary Name','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','CHAPS','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Field 7 > Beneficiary Account Number','Account Number related to vendor','9','AccountNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','CHAPS','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field 8 > Beneficiary Address Line 1','Address related to vendor','16','WBeneAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','CHAPS','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Field 9 > Beneficiary Address Line 2','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','CHAPS','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Field 11 > Beneficiary Address Country','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','CHAPS','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Field 14 > Beneficiary Bank Code','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','BACS','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 5 > Debit Account Number','Bank account number',0,'AccountNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','BACS','','Bank sort code','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 5 > Debit Account Number','Bank account number',0,'BankSortCode','','',0,0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','BACS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Field 6 > Beneficiary Name','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','BACS','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Field 7 > Beneficiary Account Number','Account Number related to vendor','9','AccountNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','BACS','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Field 8 > Beneficiary Sort Code','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-IBAN','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 5 > Debit Account Number','Bank account number',0,'AccountNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-IBAN','','Bank sort code','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 5 > Debit Account Number','Bank account number',0,'BankSortCode','','',0,0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-IBAN','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Field 10 > Beneficiary Name','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-IBAN','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Field 7 > Beneficiary Account Number','Account Number related to vendor','9','AccountNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-IBAN','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','Field 7 > UK Beneficiary IBAN','IBAN related to vendor','9','BankIBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-IBAN','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field 13 > Beneficiary Address Line 1','Address related to vendor','16','WBeneAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-IBAN','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Field 14 > Beneficiary Address Line 2','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-IBAN','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Field 17 > Beneficiary Address Country','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-IBAN','','Swift code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','Field 32 > Intermediary Bank Code','Intermediary Bank Sort (ID) Code','16','WIntBankSwift','','',1,0,1,'11',0,0]);        
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-BIC','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 5 > Debit Account Number','Bank account number',0,'AccountNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-BIC','','Bank sort code','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 5 > Debit Account Number','Bank account number',0,'BankSortCode','','',0,0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-BIC','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Field 6 > Beneficiary Name','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-BIC','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Field 12 > Beneficiary Account Number','Account Number related to vendor','9','AccountNum','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-BIC','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Field 6 > Beneficiary Name','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-BIC','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field 8 > Beneficiary Address Line 1','Address related to vendor','16','WBeneAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-BIC','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Field 9 > Beneficiary Address Line 2','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-BIC','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Field 11 > Beneficiary Address Country','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-BIC','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-BIC','','Intermediary bank Swift code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','Field 32 > Intermediary Bank Code','Intermediary Bank Sort (ID) Code','16','WIntBankSwift','','',1,0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-CC','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 5 > Debit Account Number','Bank account number',0,'AccountNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-CC','','Bank sort code','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 5 > Debit Account Number','Bank account number',0,'BankSortCode','','',0,0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-CC','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Field 6 > Beneficiary Name','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-CC','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Field 7 > Beneficiary Account Number','Account Number related to vendor','9','AccountNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-CC','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Field 8 > Beneficiary Sort Code','Routing number related to Vendor','9','RegistrationNum','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-CC','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Field 6 > Beneficiary Name','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-CC','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field 8 > Beneficiary Address Line 1','Address related to vendor','16','WBeneAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-CC','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Field 9 > Beneficiary Address Line 2','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-CC','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Field 11 > Beneficiary Address Country','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','INTL-CC','','Intermediary bank Swift code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','Field 32 > Intermediary Bank Code','Intermediary Bank Sort (ID) Code','16','WIntBankSwift','','',1,0,1,'11',0,0]);        
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','SEPA-URG','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 5 > Debit Account Number','Bank account number',0,'AccountNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','SEPA-URG','','Bank sort code','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 5 > Debit Account Number','Bank account number',0,'BankSortCode','','',0,0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','SEPA-URG','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Field 6 > Beneficiary Name','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','SEPA-URG','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field 11 > Beneficiary Address Line 1','Address related to vendor','16','WBeneAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','SEPA-URG','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Field 12 > Beneficiary Address Line 2','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','SEPA-URG','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Field 15 > Beneficiary Address Country','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','SEPA-URG','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','Field 10 > Beneficiary IBAN','IBAN related to vendor','9','BankIBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','SEPA-STD','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 5 > Debit Account Number','Bank account number',0,'AccountNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','SEPA-STD','','Bank sort code','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 5 > Debit Account Number','Bank account number',0,'BankSortCode','','',0,0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','SEPA-STD','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Field 9 > Beneficiary Name','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','SEPA-STD','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field 11 > Beneficiary Address Line 1','Address related to vendor','16','WBeneAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','SEPA-STD','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Field 12 > Beneficiary Address Line 2','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','SEPA-STD','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Field 15 > Beneficiary Address Country','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','SEPA-STD','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','Field 10 > Beneficiary IBAN','IBAN related to vendor','9','BankIBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','IAT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 5 > Debit Account Number','Bank account number',0,'AccountNum','','',0,0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','IAT','','Bank sort code','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 5 > Debit Account Number','Bank account number',0,'BankSortCode','','',0,0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-LLOYDS-BANK-CSV','IAT','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Field 7 > Beneficiary Account Number','Account Number related to vendor','9','AccountNum','','',0,0,1,'15',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UK-LLOYDS-BANK-CSV','Charges','Charging method']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-LLOYDS-BANK-CSV','Charges','Shared','SHA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-LLOYDS-BANK-CSV','Charges','Born by Debtor','OUR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-LLOYDS-BANK-CSV','Charges','Born by Creditor','BEN']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('UK-LLOYDS-BANK-CSV'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_LLOYDS_BANK_CSV();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_LLOYDS_BANK_CSV</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_LLOYDS_BANK_CSV()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','INTL-IBAN','InterBankCodeType','Intermediary Bank Code Type',1,'InterBankCodeType','',0,'','XXXXXXXXXXXXXXXX','Field 31 > Intermediary Bank Code Type']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','INTL-IBAN','FXInstruction','FX Instruction',1,'FXInstruction','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','Field 38 > FX Instruction']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','INTL-BIC','FXInstruction','FX Instruction',1,'FXInstruction','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','Field 38 > FX Instruction']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','INTL-CC','FXInstruction','FX Instruction',1,'FXInstruction','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','Field 38 > FX Instruction']);


        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FPS','Charges','Charging Method',0,'Charges','',0,'','','Detail > Field 46.Charging Method']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','CHAPS-IBAN','Charges','Charging Method',0,'Charges','',0,'','','Detail > Field 46.Charging Method']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','CHAPS','Charges','Charging Method',0,'Charges','',0,'','','Detail > Field 46.Charging Method']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','BACS','Charges','Charging Method',0,'Charges','',0,'','','Detail > Field 46.Charging Method']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','INTL-IBAN','Charges','Charging Method',0,'Charges','',0,'','','Detail > Field 46.Charging Method']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','INTL-BIC','Charges','Charging Method',0,'Charges','',0,'','','Detail > Field 46.Charging Method']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','INTL-CC','Charges','Charging Method',0,'Charges','',0,'','','Detail > Field 46.Charging Method']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','SEPA-URG','Charges','Charging Method',0,'Charges','',0,'','','Detail > Field 46.Charging Method']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','SEPA-STD','Charges','Charging Method',0,'Charges','',0,'','','Detail > Field 46.Charging Method']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','IAT','Charges','Charging Method',0,'Charges','',0,'','','Detail > Field 46.Charging Method']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','*','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','*','FormatValidations','*','16','WChargesIndic']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','PaymSpecFields','*','BenBankCodeType','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','PaymSpecFields','*','BenAccountType','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','PaymSpecFields','*','BenBankCodeType','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','PaymSpecFields','*','FXContractID','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','PaymSpecFields','*','InterBankCodeType','']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','PaymSpec','CHAPS-ACCT','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','PaymSpec','INTL-CLRG','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','PaymSpec','URGP','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','PaymSpec','NON-URGP','']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatNotes','CHAPS-ACCT','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatNotes','INTL-CLRG','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatNotes','URGP','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatNotes','NON-URGP','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','CHAPS-ACCT','0','AccountNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','CHAPS-ACCT','0','BankSortCode']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','CHAPS-ACCT','16','WBeneName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','CHAPS-ACCT','9','AccountNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','CHAPS-ACCT','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','CHAPS-ACCT','16','WBeneAddr2']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','CHAPS-ACCT','16','WBeneCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','CHAPS-ACCT','9','RegistrationNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','INTL-CLRG','0','AccountNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','INTL-CLRG','0','BankSortCode']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','INTL-CLRG','16','WBeneName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','INTL-CLRG','9','AccountNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','INTL-CLRG','9','RegistrationNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','INTL-CLRG','16','WBeneName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','INTL-CLRG','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','INTL-CLRG','16','WBeneAddr2']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','INTL-CLRG','16','WBeneCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','INTL-CLRG','16','WIntBankSwift']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','URGP','0','AccountNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','URGP','0','BankSortCode']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','URGP','16','WBeneName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','URGP','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','URGP','16','WBeneAddr2']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','URGP','16','WBeneCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','URGP','9','BankIBAN']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','NON-URGP','0','AccountNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','NON-URGP','0','BankSortCode']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','NON-URGP','16','WBeneName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','NON-URGP','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','NON-URGP','16','WBeneAddr2']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','NON-URGP','16','WBeneCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','FormatValidations','NON-URGP','9','BankIBAN']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','PaymSpec','SCT','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-LLOYDS-BANK-CSV','UK-LLOYDS-BANK-CSV','PaymSpec','SICT','']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'UK-LLOYDS-BANK-CSV':
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>