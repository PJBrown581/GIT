<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_USBANK_EDI820</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_USBANK_EDI820 Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_US_USBANK_EDI820 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220928';
        dataContractVersion = '1.0';
        conFormatID = ['US-USBANK-EDI820'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'XXXXXXXXXX','Company Id','','',1,'US - US Bank - Payment Order/Remittance Advice',0,'','','US-USBANK-EDI820',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,1,0,0,1,'','','',0,0,'','',0,'','',0,'','','3',1,0,0,0,0,'US-USBANK-EDI820',0,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-USBANK-EDI820'):
                paymSpecList = this.getPaymSpecsMetaData_US_USBANK_EDI820();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_USBANK_EDI820</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_USBANK_EDI820()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Corporate check - First Class to Payee',1,'CHK-PBC-FC','','CHK-PBC-FC','TRADE PAY',0,'US-USBANK-EDI820',0,0,0,1,1,0,0,0,0,1,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'ACH - Cash Concentration and Disbursement (CCD+)',0,'ACH-CCP','','ACH-CCD+','TRADE PAY',0,'US-USBANK-EDI820',0,1,0,1,1,0,0,0,1,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'ACH - Corporate Trade Exchange (CTX)',1,'ACH-CTX','','ACH-CTX','TRADE PAY',0,'US-USBANK-EDI820',0,1,0,1,1,0,0,0,1,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'ACH - USBank Card Payment (CTX)',1,'ACH-CTX','','USBankPay','TRADE PAY',0,'US-USBANK-EDI820',0,1,0,1,1,0,0,0,1,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Wire - Fed (FWT)',1,'FWT','','Wire-FED','DIRECT PAY',0,'US-USBANK-EDI820',0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,1,0,'',0,0,0,0,0,'Wire - SWIFT (SWT)',1,'SWT','','Wire-Intl','DIRECT PAY',0,'US-USBANK-EDI820',0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Card - Payment Order/Remittance Advice (CC)',1,'CC','','CC','DIRECT PAY',0,'US-USBANK-EDI820',0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-USBANK-EDI820'):
                notesList = this.getNotesMetaData_US_USBANK_EDI820();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_USBANK_EDI820</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_USBANK_EDI820()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-USBANK-EDI820','ACH-CCD+','-This format does not support Bank debits.:-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BANK_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-The GS*02 record will automatically replace RA with CT in the 831 control record.:-BPR.10 Originating Company Identifier stored on EFT+ bank account > Account/company tab > Company Id field.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+ bank account.  If field is blank, the bank account routing number will be used.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-USBANK-EDI820','ACH-CTX','-This format does not support Bank debits.:-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BANK_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-The GS*02 record will automatically replace RA with CT in the 831 control record.:-BPR.10 Originating Company Identifier stored on EFT+ bank account > Account/company tab > Company Id field.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+ bank account.  If field is blank, the bank account routing number will be used.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-USBANK-EDI820','USBankPay','-This format does not support Bank debits.:-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BANK_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-The GS*02 record will automatically replace RA with CT in the 831 control record.:-BPR.10 Originating Company Identifier stored on EFT+ bank account > Account/company tab > Company Id field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-USBANK-EDI820','CHK-PBC-FC','-This format does not support Bank debits.:-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BANK_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-The GS*02 record will automatically replace RA with CT in the 831 control record.:-REF*PO Reference Identification will be included if a Purchase order number is present.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-USBANK-EDI820','Wire-Intl','-This format does not support Bank debits.:-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BANK_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-The GS*02 record will automatically replace RA with CT in the 831 control record.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-USBANK-EDI820','Wire-FED','-This format does not support Bank debits.:-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BANK_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-The GS*02 record will automatically replace RA with CT in the 831 control record.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-USBANK-EDI820','CC','-This format does not support Bank debits.:-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BANK_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-The GS*02 record will automatically replace RA with CT in the 831 control record.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-USBANK-EDI820'):
                validationsList = this.getValidationsMetaData_US_USBANK_EDI820();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_USBANK_EDI820</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_USBANK_EDI820()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','ACH-CCD+','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','ACH-CCD+','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','ACH-CCD+','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR.07 ODFI Identification Number','ODFI Identification Number',0,'RegistrationNum','','',1,1,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','ACH-CTX','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','ACH-CTX','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','ACH-CTX','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR.07 ODFI Identification Number','ODFI Identification Number',0,'RegistrationNum','','',1,1,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','USBankPay','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','USBankPay','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','USBankPay','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','BPR.07 ODFI Identification Number','ODFI Identification Number','9','RegistrationNum','','',1,1,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','USBankPay','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','BPR.09 Account Number','Account Number','9','AccountNum','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','CHK-PBC-FC','','Address','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N3*PE.01 Address Information','Address','10','Street','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','CHK-PBC-FC','','City','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.01 City Address','City Address','10','City','','',1,0,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','CHK-PBC-FC','','State','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.02 State or Province Code','State or Province Code','10','State','','',1,1,1,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','CHK-PBC-FC','','ZIP/Postal Code ','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.03 Postal Code','Postal Code','10','ZipCode','','',1,1,1,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','CHK-PBC-FC','','Country/Region','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.04','Country related','10','CountryRegionId','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','CHK-PBC-FC','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','CHK-PBC-FC','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','ODFI Identification Number',0,'RegistrationNum','','',1,1,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','CHK-PBC-FC','','Payment Id','Accounts payable > Invoice journal > New > Select Name > Lines > New > Invoice tab > Payment Id','REF*VV.02 Reference Identification','Reference Identification','13','PaymId','','',1,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','Wire-Intl','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*BE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','Wire-Intl','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','Wire-Intl','','Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','REF*.02 Reference Identification','Reference Identification','16','WIntBankSwift','','',1,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','Wire-Intl','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Name','N1*RB.02 Name','Intermediary Bank Name','16','WIntBankName','','',1,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','Wire-Intl','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','N1*BK.02 Beneficiary bank Name','Beneficiary bank Name','16','WBenBankName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','Wire-Intl','','Line1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Bank instruction(group) > Line1','NTE*OTH.02 Description','Bank Description Line1','16','WBankInst1','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','Wire-Intl','','Line2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Bank instruction(group) > Line2','NTE*OTH.02 Description','Bank Description Line2','16','WBankInst2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','Wire-Intl','','Line3','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Bank instruction(group) > Line3','NTE*OTH.02 Description','Bank Description Line3','16','WBankInst3','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','Wire-Intl','','Line4','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Bank instruction(group) > Line4','NTE*OTH.02 Description','Bank Description Line4','16','WBankInst4','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','Wire-FED','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*BE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','Wire-FED','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','Wire-FED','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','N1*RB.02 Beneficiary bank Name','Beneficiary bank Name','16','WBenBankName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','Wire-FED','','Line1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Bank instruction(group) > Line1','NTE*OTH.02 Description','Bank Description Line1','16','WBankInst1','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','Wire-FED','','Line2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Bank instruction(group) > Line2','NTE*OTH.02 Description','Bank Description Line2','16','WBankInst2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','Wire-FED','','Line3','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Bank instruction(group) > Line3','NTE*OTH.02 Description','Bank Description Line3','16','WBankInst3','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','Wire-FED','','Line4','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Bank instruction(group) > Line4','NTE*OTH.02 Description','Bank Description Line4','16','WBankInst4','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-EDI820','CC','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*BU.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'60',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-USBANK-EDI820','ExcludeControlRecord','Exclude Control Record']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-USBANK-EDI820','ExcludeControlRecord','Yes','Y']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-USBANK-EDI820','ExcludeControlRecord','No','N']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('US-USBANK-EDI820'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_USBANK_EDI820();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_USBANK_EDI820</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_USBANK_EDI820()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-USBANK-EDI820','US-USBANK-EDI820','CHK-PBC-FC','ExcludeControlRecord','Exclude Control Record',0,'ExcludeControlRecord','No',0,'','','Print 831']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-USBANK-EDI820','US-USBANK-EDI820','ACH-CCD+','ExcludeControlRecord','Exclude Control Record',0,'ExcludeControlRecord','No',0,'','','Print 831']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-USBANK-EDI820','US-USBANK-EDI820','ACH-CTX','ExcludeControlRecord','Exclude Control Record',0,'ExcludeControlRecord','No',0,'','','Print 831']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-USBANK-EDI820','US-USBANK-EDI820','USBankPay','ExcludeControlRecord','Exclude Control Record',0,'ExcludeControlRecord','No',0,'','','Print 831']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-USBANK-EDI820','US-USBANK-EDI820','Wire-FED','ExcludeControlRecord','Exclude Control Record',0,'ExcludeControlRecord','No',0,'','','Print 831']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-USBANK-EDI820','US-USBANK-EDI820','Wire-Intl','ExcludeControlRecord','Exclude Control Record',0,'ExcludeControlRecord','No',0,'','','Print 831']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-USBANK-EDI820','US-USBANK-EDI820','CC','ExcludeControlRecord','Exclude Control Record',0,'ExcludeControlRecord','No',0,'','','Print 831']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-USBANK-EDI820','US-USBANK-EDI820','FormatValidations','CHK-PBC-FC','3','PaymId']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-USBANK-EDI820','US-USBANK-EDI820','FormatValidations','Wire-Intl','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-USBANK-EDI820','US-USBANK-EDI820','FormatValidations','Wire-FED','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-USBANK-EDI820','US-USBANK-EDI820','FormatValidations','CC','15','W03']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-USBANK-EDI820','US-USBANK-EDI820','FormatValidations','CC','15','W04']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-USBANK-EDI820','US-USBANK-EDI820','FormatValidations','CC','15','W02']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch(_formatID)
        {
            case ('US-USBANK-EDI820'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_USBANK_EDI820();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_USBANK_EDI820</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_USBANK_EDI820()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-USBANK-EDI820','US-USBANK-EDI820','PersonalId','Personal id number',1,'PersonalId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','REF*.02 Personal id number']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-USBANK-EDI820','US-USBANK-EDI820','ShortName','Short name',1,'ShortName','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','REF*8M*.02 Reference Identification']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-USBANK-EDI820','US-USBANK-EDI820','Merchantemail','Merchant email',1,'Merchantemail','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PER*SU*.04 Communication Number']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-USBANK-EDI820','US-USBANK-EDI820','MerchantCCemail','Merchant CC email',1,'MerchantCCemail','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PER*SU*.06 Communication Number']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'US-USBANK-EDI820':
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('PersonalId', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('ShortName', gSKS_EFT_Bank.W02);
                }
                if(gSKS_EFT_Bank.W03)
                {
                    this.updateBankFields('Merchantemail', gSKS_EFT_Bank.W03);
                }
                if(gSKS_EFT_Bank.W04)
                {
                    this.updateBankFields('MerchantCCemail', gSKS_EFT_Bank.W04);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>