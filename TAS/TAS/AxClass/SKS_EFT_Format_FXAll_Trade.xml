<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_FXAll_Trade</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_FXAll_Trade extends SKS_EFT_Format_FXAll
/// </summary>
class SKS_EFT_Format_FXAll_Trade extends SKS_EFT_Format_FXAll
{
    #define.FormatVersion('20210712')
    XmlDocument             xmlDoc;
    XmlElement              nodefxOrder;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        xmlDoc = XmlDocument::newBlank();
    
        //fxOrder
        this.node_fxOrder();
    
        while(mSKS_EFT_FileDetail)
        {
            //Get FXA_Details
            this.getSKS_FXA_Details();
    
            //Get AP Bank Account
            this.getSKS_EFT_Bank();
    
            //fxTrade
            this.node_fxTrade();
    
            next mSKS_EFT_FileDetail;
        }
    
        this.fileWrite(xmlDoc.toString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_fxOrder</Name>
				<Source><![CDATA[
    private void node_fxOrder()
    {
        //------------------------------------------------------------------------------------------------------
        //  fxOrder
        //------------------------------------------------------------------------------------------------------
    
        //  fxOrder
        nodefxOrder = xmlDoc.appendChild(xmlDoc.createElement('fxOrder'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_fxTrade</Name>
				<Source><![CDATA[
    private void node_fxTrade()
    {
        //------------------------------------------------------------------------------------------------------
        //Field Name                Max Length  Required
        //  fxTrade
        //      opType                       4  (Optional)
        //      orderId                     30  (Optional)
        //      custAllocationId            30  (Optional)
        //      account                    121  (Required)
        //      ccyPair                      7  (Required)
        //      dealtCcy                     3  (Required)
        //      dealtAmount                 30  (Required)
        //      dealtDirection               1  (Required)
        //      valueDate                    8  (Required)
        //      sourceId                    30  (Optional)
        //      remarks                   1000  (Optional)
        //      fixingDate                  38  (Optional)
        //      userDefinedFields               (Optional)
        //          udf name                38  (Optional)
        //              value              128  (Optional)
        //      banks                           (Optional)
        //          bank                        (Optional)
        //------------------------------------------------------------------------------------------------------
        XmlElement node_fxTrade;
    
        //  fxTrade
        node_fxTrade = nodefxOrder.appendChild(xmlDoc.createElement('fxTrade'));
    
        //      opType                       4  (Optional)
        //      orderId                     30  (Optional)
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, node_fxTrade, 'orderId', mSKS_FXA_Details.SKS_FXA_OrderID, 30);
    
        //      custAllocationId            30  (Optional)
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, node_fxTrade, 'custAllocationId', mSKS_FXA_Details.SKS_FXA_AllocationID, 30);
    
        //      account                    121  (Required)
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, node_fxTrade, 'account', mSKS_EFT_Bank.FXAAcctName, 121);
    
        //      ccyPair                      7  (Required)
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, node_fxTrade, 'ccyPair', mSKS_FXA_Details.CurrencyPairISO, 7);
    
        //      dealtCcy                     3  (Required)
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, node_fxTrade, 'dealtCcy', mSKS_FXA_Details.DealtCurrency, 3);
    
        //      dealtAmount                 30  (Required)
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, node_fxTrade, 'dealtAmount', num2str(mSKS_FXA_Details.Amount, 0, 2, 1, 0), 30);
    
        //      dealtDirection               1  (Required)
        if(mSKS_FXA_Details.SKS_FXA_BuySell == SKS_FXA_BuySell::Buy)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, node_fxTrade, 'dealtDirection', 'B');
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, node_fxTrade, 'dealtDirection', 'S');
        }
    
        //      valueDate                    8  (Required)
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, node_fxTrade, 'valueDate', SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_FXA_Details.ValueDate));
    
        //      sourceId                    30  (Optional)
        //      remarks                   1000  (Optional)
        //      fixingDate                  38  (Optional)
        //      userDefinedFields               (Optional)
        //          udf name                38  (Optional)
        //              value              128  (Optional)
        //      banks                           (Optional)
        //          bank                        (Optional)
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>