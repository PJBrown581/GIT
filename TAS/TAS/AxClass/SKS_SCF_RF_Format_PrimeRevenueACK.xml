<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_SCF_RF_Format_PrimeRevenueACK</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Inbound file format for the Outbound format SKS_SCF_RF_Format_PrimeRevenueACK
/// </summary>
class SKS_SCF_RF_Format_PrimeRevenueACK extends SKS_SCF_RF_Format
{
    //Class Variables
    //primities
    boolean gErrorsExist;
    str mFileName;
    str mFileID;
    str mFieldDelimiter;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFile</Name>
				<Source><![CDATA[
    public SKS_SCF_RF_File getFile(str _filename, boolean _serverPath)
    {
        SKS_EB_FileHub fileHub = SKS_EB_FileHub::construct();
        CommaStreamIo locCommaIo;
        container locRecord;
        int i;  //index of the current location in the container
        ;

        fileHub.setFileName(_filename);
        fileHub.runFileLoad(_filename);
        fileHub.streamInit();

        locCommaIo = CommaStreamIo::ConstructForRead(fileHub.StreamGet());
        mFieldDelimiter = ',';
        locCommaIo.inFieldDelimiter('|');
        if(!mSKS_SCF_RF_File)
        {
            mSKS_SCF_RF_File = new SKS_SCF_RF_File();
        }

        mSKS_SCF_RF_SentFile = new SKS_SCF_RF_SentFile();

        while(locCommaIo.status() == IO_Status::Ok)
        {
            locRecord = locCommaIo.read();
            
            if(conLen(locRecord) > 0 )
            {
                for(i = 1; i <= conLen(locRecord); i++)
                {
                    locRecord = conPoke(locRecord, i, strRem(conPeek(locRecord,i), '\r\n'));
                }

                if(strUpr(conPeek(locRecord,4)) != '' && strUpr(conPeek(locRecord,7)) != '')
                {
                    this.processNode(locRecord);
                }
            }
        }
        //while(locStreamReader.get_EndOfStream());
        //must use the getSKS_EFT_RF_File() method becuase, if any pending mSKS_EFT_RF_SentFile have yet to be pushed into the list, this will do it.
        if(locCommaIo)
        {
            locCommaIo.finalize();
            locCommaIo = null;
        }

        if(gErrorsExist)
        {
            mSKS_SCF_RF_File = null;
        }
        return this.getSKS_SCF_RF_File();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatId</Name>
				<Source><![CDATA[
    public str getFormatId(str _filename, boolean _serverPath)
    {
        SKS_EB_FileHub fileHub = SKS_EB_FileHub::construct();

        str rtnval = '';
        int classId;
        CommaStreamIo locCommaIo;
        int i;//index of the current location in the container
        container locRecord;
        //BEGIN VALIDATION VARIABLES
        boolean FirstRecordFound = false;
        //BEGIN DISQUALIFIER VARIABLES
        //none
        //END VALIDATION VARIABLES
        ;

        fileHub.setFileName(_filename);
        fileHub.runFileLoad(_filename);
        fileHub.streamInit();
        locCommaIo = CommaStreamIo::ConstructForRead(fileHub.StreamGet());
        mFieldDelimiter = ',';
        locCommaIo.inFieldDelimiter('|');
        while(locCommaIo.status() == IO_Status::Ok)
        {
            locRecord = locCommaIo.read();

            if(conLen(locRecord) > 0 )
            {
                for(i = 1; i <= conLen(locRecord); i++)
                {
                    locRecord = conPoke(locRecord, i, strRem(conPeek(locRecord,i), '\r\n'));
                }

                if(strUpr(conPeek(locRecord,4)) != '' && strUpr(conPeek(locRecord,7)) != '')
                {
                    FirstRecordFound = true;
                }
            }
            if(FirstRecordFound)
            {
                break;
            }
        }
        if(FirstRecordFound)
        {
            //ALl Qualifers show this a
            classId = classIdGet(this);
            rtnval = classId2Name(ClassId);
        }
        if(locCommaIo)
        {
            locCommaIo.finalize();
            locCommaIo = null;
        }
        return rtnval;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSKS_SCF_RF_File</Name>
				<Source><![CDATA[
    public SKS_SCF_RF_File getSKS_SCF_RF_File()
    {

        if(mSKS_SCF_RF_SentFile != null)
        {
            mSKS_SCF_RF_File.addSentFile(mSKS_SCF_RF_SentFile);
            mSKS_SCF_RF_SentFile = null;
        }

        return mSKS_SCF_RF_File;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processNode</Name>
				<Source><![CDATA[
    private void processNode(container locRecord)
    {
        str amount;
        int length;

        mSKS_SCF_RF_Transaction = new SKS_SCF_RF_Transaction();

        if(mSKS_SCF_RF_Transaction != null)
        {
            mSKS_SCF_RF_SentFile.addTransaction(mSKS_SCF_RF_Transaction);
        }
        if(!System.String::IsNullOrEmpty(conPeek(locRecord, 2)))
        {
            mSKS_SCF_RF_Transaction.GetInvoiceType(conPeek(locRecord, 2));
        }
        if(!System.String::IsNullOrEmpty(conPeek(locRecord, 7)))
        {
            mSKS_SCF_RF_Transaction.GetVendAccount(conPeek(locRecord, 7));
        }
        if(!System.String::IsNullOrEmpty(conPeek(locRecord, 4)))
        {
            mSKS_SCF_RF_Transaction.GetInvoiceNum(conPeek(locRecord, 4));
        }
        if(!System.String::IsNullOrEmpty(conPeek(locRecord, 6)))
        {
            mSKS_SCF_RF_Transaction.GetFundedCurr(conPeek(locRecord, 6));
        }
        if(!System.String::IsNullOrEmpty(conPeek(locRecord, 5)))
        {
            amount = conPeek(locRecord, 5);
            length = strLen(amount);
            CurrencyCode locCurrencyCode;
            VendTrans  locVendTrans;
            real amt;

            select firstonly locVendTrans where locVendTrans.Invoice == mSKS_SCF_RF_Transaction.GetInvoiceNum() &&
                locVendTrans.AccountNum == mSKS_SCF_RF_Transaction.GetVendAccount();

           // amt = SKS_EB_Currency::formatStringToCurrency(amount,locVendTrans.CurrencyCode);
            mSKS_SCF_RF_Transaction.GetInvoiceAmount(str2Num(amount)); //SKS_DevOps - 16081

        }

        if(!System.String::IsNullOrEmpty(conPeek(locRecord, 9)))
        {
            mSKS_SCF_RF_Transaction.GetDueDate(str2Date(conPeek(locRecord, 9), 321));
        }

        if(!System.String::IsNullOrEmpty(conPeek(locRecord, 11)))
        {
            mSKS_SCF_RF_Transaction.GetInvoiceStatus(conPeek(locRecord, 11));
        }

        if(!System.String::IsNullOrEmpty(conPeek(locRecord, 12)))
        {
            mSKS_SCF_RF_Transaction.GetStatusReason(conPeek(locRecord, 12));
        }

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>