<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_RF_FormatMetaData_ACH_Return_NOC</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SKS_EFT_RF_FormatMetaData_ACH_Return_NOC Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new()
    {
        productVersion = '';
        formatGroupVersion = '20221208';
        conFormatID = ['ACH-Return-NOC'];
        formatfiletype = 'EFTInbound';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundFormatMetaData</Name>
				<Source><![CDATA[
    protected container getInboundFormatMetaData()
    {
        container   inboundFormatList;

        //Metadata column names of data elements
        ////FormatId,Description,Selected,ProductVersion,FormatVersion

        inboundFormatList = ConIns(inboundFormatList,conLen(inboundFormatList)+1,[productVersion,formatGroupVersion,'ACH-Return-NOC','ACH - Return - Notice of Change',0]);

        return inboundFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundStatusMetaData</Name>
				<Source><![CDATA[
    protected container getInboundStatusMetaData(str _formatID)
    {
        container   inboundStatusList;

        //Metadata column names of data elements
        //FormatId,StatusType,StatusId,StatusIdDisplay,Origin

        switch (_formatID)
        {
            case ('ACH-Return-NOC'):
                inboundStatusList = this.getInboundStatusMetaData_ACH_Return_NOC();
                break;

        }

        return inboundStatusList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundStatusMetaData_ACH_Return_NOC</Name>
				<Source><![CDATA[
    private container getInboundStatusMetaData_ACH_Return_NOC()
    {
        container   inboundStatusList;

        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['ACH-Return-NOC',1,'<Empty>','Empty status',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['ACH-Return-NOC',1,'21','Cheking Account Automated Return or NOC',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['ACH-Return-NOC',1,'26','Cheking Account Automated Return or NOC',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['ACH-Return-NOC',1,'31','Savings Account Automated Return or NOC',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['ACH-Return-NOC',1,'36','Savings Account Automated Return or NOC',1]);

        return inboundStatusList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundRCodeMetaData</Name>
				<Source><![CDATA[
    protected container getInboundRCodeMetaData(str _formatID)
    {
        container   reasonCodeList;

        //Metadata column names of data elements
        //FormatId,ReasonCode,ReasonDesc,Origin

        switch (_formatID)
        {
            case ('ACH-Return-NOC'):
                reasonCodeList = this.getInboundRCodeMetaData_ACH_Return_NOC();
                break;

        }

        return reasonCodeList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundRCodeMetaData_ACH_Return_NOC</Name>
				<Source><![CDATA[
    private container getInboundRCodeMetaData_ACH_Return_NOC()
    {
        container   reasonCodeList;

        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','<Empty>','Empty reason code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R01','Insufficient funds',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R02','Account closed',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R03','No account/unable to locate account',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R04','Invalid account number',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R05','Reserved',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R06','Returned per ODFIs request',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R07','Authorization revoked by customer',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R08','Payment stopped or stop payment on item',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R09','Uncollected funds',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R10','Customer advises not authorized',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R11','Check truncation entry return',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R12','Branch sold to another DFI',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R13','RDFI not qualified to participate',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R14','Representative payee deceased or unable to continue in that capacity',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R15','Beneficiary of account holder deceased',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R16','Account frozen',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R17','File record edit criteria',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R18','Improper effective entry date',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R19','Amount field error',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R20','Non-transaction account',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R21','Invalid company identification',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R22','Invalid individual ID number',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R23','Credit entry refused by receiver',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R24','Duplicate entry',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R25','Addenda error',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R26','Mandatory field error',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R27','Trace number error',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R28','Routing number check digit error',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R29','Corporate customer advises not authorized',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R30','RDFI not partiipant in check truncation program',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R31','Permissible return entry',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R32','RDFI non-settlement',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R33','Return of XCK entry',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R34','Limited particiption DFI',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R35','Return of improper debit entry',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R36','Return of improper credit entry',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R40','Return of ENR entry by federal government agency(ENR Only)',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R41','Invalid transaction code(ENR Only)',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R42','Routing number/check digit error(ENR Only)',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R43','Invalid DFI account number(ENR Only)',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R44','Invalid individual ID number(ENR Only)',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R45','Invalid individual name/company name(ENR Only)',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R46','Invalid representative payee indictor(ENR Only)',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R47','Duplicate enrollment',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R50','State law affecting RCK acceptance',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R51','Item is ineligible/notice not provided/signature not genuine',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R52','Stop payment on item',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R61','Misrouted return',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R62','Incorrect trace number',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R63','Incorrect dollar amount',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R64','Incorrect individual identification',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R65','Incorrect transaction code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R66','Incorrect company identification',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R67','Duplicate return',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R68','Untimely return',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R69','Multiple errors',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R70','Permissible return entry not accepted',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R71','Misrouted dishonored return',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R72','Untimely dishonored return',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R73','Timely origin return',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R74','Corrected return',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R80','Cross-border payment coding error',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R81','Non-participant in cross-border program',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R82','Invalid foreign receiving DFI identification',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['ACH-Return-NOC','R83','Foreign received DFI unable to settle',1]);

        return reasonCodeList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   conDelete;
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        return deleteList;

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>