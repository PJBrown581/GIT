<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_RBSC_EDI820_052913</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_RBSC_EDI820_052913 Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_US_RBSC_EDI820_052913 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20221027';
        dataContractVersion = '1.0';
        conFormatID = ['US-RBSC-EDI820-052913'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'XXXXXXXXXX','Company Id','','',1,'US - RBS Citizens - Integrated Payables',0,'','','US-RBSC-EDI820-052913',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,1,0,0,1,'','','',0,0,'','',0,'','',0,'','','3',1,0,0,0,0,'US-RBSC-EDI820-052913',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-RBSC-EDI820-052913'):
                paymSpecList = this.getPaymSpecsMetaData_US_RBSC_EDI820_052913();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_RBSC_EDI820_052913</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_RBSC_EDI820_052913()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'ACH - Cash Concentration and Disbursement (CCD)',1,'ACH-CCD','','ACH-CCD','TRADE PAY',0,'US-RBSC-EDI820-052913',0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'ACH - Cash Concentration and Disbursement (CCD+)',0,'ACH-CCP','','ACH-CCD+','TRADE PAY',0,'US-RBSC-EDI820-052913',0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'ACH - Prearranged Payment and Deposit (PPD)',1,'ACH-PPD','','ACH-PPD','EXP REIMB',0,'US-RBSC-EDI820-052913',0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'ACH - Prearranged Payment and Deposit (PPD+)',0,'ACH-PPP','','ACH-PPD+','EXP REIMB',0,'US-RBSC-EDI820-052913',0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Wire - Fed (FWT)',1,'FWT','','Wire-FED','DIRECT PAY',0,'US-RBSC-EDI820-052913',0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,1,0,'',0,0,0,0,0,'Wire - SWIFT (SWT)',1,'SWT','','Wire-SWIFT','DIRECT PAY',0,'US-RBSC-EDI820-052913',0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire - Book transfer',1,'Wire-BOOK','','Wire-BOOK','DIRECT PAY',0,'US-RBSC-EDI820-052913',0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire - Drawdown',1,'Wire-DD','','Wire-DD','DIRECT PAY',0,'US-RBSC-EDI820-052913',0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Access AP Card',1,'APCARD','','APCARD','DIRECT PAY',0,'US-RBSC-EDI820-052913',0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check payment',1,'CHK','','CHK','DIRECT PAY',0,'US-RBSC-EDI820-052913',0,0,0,1,1,0,0,0,0,1,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,1,1,0,0,'Paymode - X',1,'PAYMODE-X','','PAYMODE-X','DIRECT PAY',0,'US-RBSC-EDI820-052913',0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH - IAT',1,'ACH-IAT','','ACH-IAT','DIRECT PAY',0,'US-RBSC-EDI820-052913',0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-RBSC-EDI820-052913'):
                notesList = this.getNotesMetaData_US_RBSC_EDI820_052913();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_RBSC_EDI820_052913</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_RBSC_EDI820_052913()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-RBSC-EDI820-052913','ACH-CCD','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied US_RBSC_EDI820_052913.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-N1*PE data stored on Beneficiary section of Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab. Name is required.:-N1*PR data is stored on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account. Name is required.:-BPR.10 Originating Company Identifier stored on EFT+ bank account > Account/company tab > Company Id field.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+ bank account. If field is blank, the bank account routing number will be used.:--NTE_OBI.02 TAS bank account > Wire/IAT ordering party Description field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-RBSC-EDI820-052913','ACH-CCD+','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied US_RBSC_EDI820_052913.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-N1*PE data stored on Beneficiary section of Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab. Name is required.:-N1*PR data is stored on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account. Name is required.:-BPR.10 Originating Company Identifier stored on EFT+ bank account > Account/company tab > Company Id field.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+ bank account. If field is blank, the bank account routing number will be used.:--NTE_OBI.02 TAS bank account > Wire/IAT ordering party Description field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-RBSC-EDI820-052913','ACH-PPD','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied US_RBSC_EDI820_052913.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-N1*PE data stored on Beneficiary section of Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab. Name is required.:-N1*PR data is stored on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account. Name is required.:-BPR.10 Originating Company Identifier stored on EFT+ bank account > Account/company tab > Company Id field.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+ bank account. If field is blank, the bank account routing number will be used.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-RBSC-EDI820-052913','ACH-PPD+','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied US_RBSC_EDI820_052913.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-N1*PE data stored on Beneficiary section of Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab. Name is required.:-N1*PR data is stored on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account. Name is required.:-BPR.10 Originating Company Identifier stored on EFT+ bank account > Account/company tab > Company Id field.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+ bank account. If field is blank, the bank account routing number will be used.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-RBSC-EDI820-052913','Wire-FED','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied US_RBSC_EDI820_052913.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-N1*PE data stored on Beneficiary section of Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab. Name is required.:-N1*PR data is stored on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account. Name is required.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+ bank account. If field is blank, the bank account routing number will be used.:--BPR.15 Vendor bank IBAN is required.:-N4*BK.02 Beneficiary bank state is required and must be included on the Address information tab in Vendor Bank Account.:-The following fields are required in the Beneficiary bank section of the Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab.:--N1*BK.01 Name is required and stored in the Name field.If Beneficiary bank name is blank then Vebdor bank account > Name will print.:--N3*BK.01 Address Information is required and stored in the Address field.:--N4*BK.01 City Name is required and stored in the City field.:--N4*BK.04 Country code is required and stored in the Country/region field.:-If you wish to include the NM Intermediary bank record, the following fields are required in the Intermediary bank section of the Vendor eBanking details > Payment specifications > Wire transfer/IAT-2 tab. Refer to the EDI 820 File Layout Integrated Payables document for values.:--NM1*RB.03 Organization Name is stored on the Bank Name field.:--NM1*RB.08 Identification Code Qualifier is stored on the Qualifier field and must be set to SWIFT or ABA.:--NM1*RB.09 FED ABA is required if Qualifier is ABA and stored on the Bank id field.:--NM1*RB.09 SWIFT ID is required if Qualifier is SWIFT and stored on the SWIFT code field.:--NTE_OBI.02 TAS bank account > Wire/IAT ordering party Description field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied US_RBSC_EDI820_052913.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-N1*PE data stored on Beneficiary section of Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab. Name is required.:-N1*PR data is stored on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account. Name is required.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+ bank account. If field is blank, the bank account routing number will be used.:--BPR.15 Either Vendor bank IBAN or Bank account number is required.If both are exist then IBAN will take the precedence.:-N4*BK.02 Beneficiary bank state is required and must be included on the Address information tab in Vendor Bank Account.:-The following fields are required in the Beneficiary bank section of the Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab.:--N1*BK.01 Name is required and stored in the Name field.If Beneficiary bank name is blank then Vebdor bank account > Name will print.:--N3*BK.01 Address Information is required and stored in the Address field.:--N4*BK.01 City Name is required and stored in the City field.:--N4*BK.04 Country code is required and stored in the Country/region field.:-If the transaction is in USD currency the following fields are required in the Intermediary bank section of the Vendor eBanking details > Payment specifications > Wire transfer/IAT-2 tab.:--NM1*RB.03 Organization Name is stored on the Bank Name field. Refer to the EDI 820 File Layout Integrated Payables document for values.:--NM1*RB.08 Identification Code Qualifier is stored on the Qualifier field and must be set to SWIFT.:--NM1*RB.09 SWIFT ID is required and stored on the SWIFT code field. Refer to the EDI 820 File Layout Integrated Payables document for values.:--NTE-OBI.02 TAS bank account > Wire/IAT ordering party > Description field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-RBSC-EDI820-052913','Wire-BOOK','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied US_RBSC_EDI820_052913.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-BPR.07 ODFI Identification Number will use the bank account routing number.:-BPR.09 Account Number will use the bank account number.:--BPR.15 Vendor bank IBAN is required.:-N1*PR data is stored on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account. Name is required.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab > Beneficiary section:--N1*PE Name is required.:--N3*PE.01 data is required and stored in the Address field.:--N3*PE.02 data is stored in the Address 2 field.:--N4*PE.01 City Name is stored in the City field.:--N4*PE.02 State Or Province Code stored in the State/province field.:--N4*PE.03 Postal Code is stored in the Zip/Postal code field.:--N4*PE.04 Country Code is stored in the Country/region field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab > Beneficiary bank section:--N1*BK.01 Name is required and stored in the Name field.If Beneficiary bank name is blank then Vebdor bank account > Name will print.:--N3*BK.01 Address Information is required and stored in the Address field.:--N4*BK.01 City Name is required and stored in the City field.:--N4*BK.02 Beneficiary bank state is required and must be included on the Address information tab in Vendor Bank Account.:--N4*BK.03 Beneficiary bank postal code is must be included on the Address information tab in Vendor Bank Account.:--N4*BK.04 Country code is required and stored in the Country/region field.:--NTE*OBI information is stored on the Vendor eBanking details > Payment specifications > Wire transfer/IAT-3 tab > Payment instructions group.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-RBSC-EDI820-052913','Wire-DD','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied US_RBSC_EDI820_052913.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-BPR.07 ODFI Identification Number will use the bank account routing number.:-BPR.09 Account Number will use the bank account number.:--BPR.15 Vendor bank IBAN is required.:-N1*PR data is stored on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account. Name is required.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab > Beneficiary section:--N1*PE Name is required.:--N3*PE.01 data is required and stored in the Address field.:--N3*PE.02 data is stored in the Address 2 field.:--N4*PE.01 City Name is stored in the City field.:--N4*PE.02 State Or Province Code stored in the State/province field.:--N4*PE.03 Postal Code is stored in the Zip/Postal code field.:--N4*PE.04 Country Code is stored in the Country/region field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab > Beneficiary bank section:--N1*BK.01 Name is required and stored in the Name field.If Beneficiary bank name is blank then Vebdor bank account > Name will print.:--N3*BK.01 Address Information is required and stored in the Address field.:--N4*BK.01 City Name is required and stored in the City field.:--N4*BK.02 Beneficiary bank state is required and must be included on the Address information tab in Vendor Bank Account.:--N4*BK.03 Beneficiary bank postal code is must be included on the Address information tab in Vendor Bank Account.:--N4*BK.04 Country code is required and stored in the Country/region field.:--NTE*OBI information is stored on the Vendor eBanking details > Payment specifications > Wire transfer/IAT-3 tab > Payment instructions group.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-RBSC-EDI820-052913','APCARD','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied US_RBSC_EDI820_052913.csv. eview any fields with a Value type of Fixed value and verify data in the Fixed value field.:-BPR.07 ODFI Identification Number will use the bank account routing number.:-BPR.09 Account Number will use the bank account number.:-BPR.15 Beneficiary Account Number will use the Vendor bank account number.:-TRN.04 Company Corporate Card Account is stored in the W01 field of Bank account > Wire/IAT ordering party field.:-N1*PR data is stored on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account. Name is required.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab > Beneficiary section:--N1*PE Name is required.::-REF*L1.03 is stored in the Payment journal > Lines > Description field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-RBSC-EDI820-052913','CHK','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied US_RBSC_EDI820_052913.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-BPR.07 ODFI Identification Number will use the bank account routing number.:-BPR.09 Account Number will use the bank account number.:-TRN.03 Company ID stored in the Bank account > Company info (fast tab) > Company Id field.:-TRN.04 will be the mail handling code and stored in the Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab > Beneficiary section > Mail handling field.:-N1*PR data is stored on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account. Name is required.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab > Beneficiary section:--N1*PE Name is required.:--N3*PE.01 data is required and stored in the Address field.:--N3*PE.02 data is stored in the Address 2 field.:--N4*PE.01 City Name is stored in the City field.:--N4*PE.02 State Or Province Code stored in the State/province field.:--N4*PE.03 Postal Code is stored in the Zip/Postal code field.:--N4*PE.04 Country Code is stored in the Country/region field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-RBSC-EDI820-052913','PAYMODE-X','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied US_RBSC_EDI820_052913.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-BPR.07 ODFI Identification Number will use the bank account routing number.:-BPR.09 Account Number will use the bank account number.:-BPR.10 Company ID will use the company ID for PAYMODEX.:-N1*PR data is stored on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account.::-Payer id data is stored on AP EFT+ Bank account > Wire/IAT ordering party > Payer site ID.::N1*PE Data is stored on -Vendor eBanking details > Payment specifications > Account info Bank/Account numbers section::-Payee site ID will be stored on Payer site id field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-RBSC-EDI820-052913','ACH-IAT','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied US_RBSC_EDI820_052913.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+ bank account. If field is blank, the bank account routing number will be used.-BPR.09 Account Number is stored in the Cash and bank management > Account number field.:-BPR.10 Orig. Co. ID is stored in the Bank account > AP EFT+ bank account > Company info tab.:-BPR.13 RDFI ID Number either SWIFT code or Routing number is stored required and stored in the Cash and bank management > SWIFT No or Routing number field.If both are exists then SWIFT code will take precedence.:-BPR.15 Account number is stored in the Vendor bank account > Account number field.:-N1*PE data stored on Beneficiary section of Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab. Name is required.:-N1*PR data is stored on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account. Name is required.::-The following fields are required and stored Cash and bank management > Address tab.:--N1*BK.01 Name is required and stored in the Name field.:--N4*BK.01 City Name is stored in the City field.:--N4*BK.02 State Information is stored in the State field.:--N4*BK.03 Postal Code Information is stored in the Zip/Postal Code field.:--N4*BK.04 Country code is required and stored in the Country/region field.::--N1*RB.01 Beneficiary bank name is stored in the Vendor eBanking details > Payment spections > Wire transfer/IAT-1 > Beneficiary bank tab.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-RBSC-EDI820-052913'):
                validationsList = this.getValidationsMetaData_US_RBSC_EDI820_052913();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_RBSC_EDI820_052913</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_RBSC_EDI820_052913()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','BPR 07','Bank Routing Number',0,'RegistrationNum','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','BPR 13','Vendor Bank Routing Number','9','RegistrationNum','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','BPR 14','Account Number related to vendor','9','AccountNum','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02','Name related to bank','15','WOrdPartyName','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Vendor Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','N1PE.02','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3PE.01','Address related to vendor','16','WBeneAddr','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','N3PE.02','Address related to vendor','16','WBeneAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','N4PE.01','Vendor city','16','WBeneCity','','',0,1,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','N4PE.02','State related to vendor','16','WBeneState','','',1,1,0,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','N4PE.03','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','N4PE.04','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Vendor Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','N1BK.02','Beneficiary Bank Name ','16','WBenBankName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Vendor bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Address','N3BK.01','Address related to vendor bank','16','WBenBankAddr','','',0,0,1,'26',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Vendor bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','N4BK.01','Country related to vendor bank','16','WBenBankCity','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Vendor bank Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/Region','N4BK.04','Country related to vendor bank','16','WBenBankCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Intermediary Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Name','NM1RB.03','Intermediary Bank Name','16','WIntBankName','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','NM1RB.03','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,'2','','80',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Intermediary Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','NM1RB.03','Intermediary Bank Id related to vendor','16','WIntBankId','','',1,'2','','80',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Intermediary Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address','NM3RB.01','Intermediary Bank Address related to vendor','16','WIntBankAddr','','',1,'2','','55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Intermediary Bank Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address 2','NM3RB.02','Intermediary Bank Address related to vendor','16','WIntBankAddr2','','',1,'2','','55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Intermediary Bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > City','NM4RB.01','City','16','WIntBankCity','','',1,1,'','30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Intermediary Bank Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','NM4RB.04','Intermediary Bank Country related to vendor','16','WIntBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Payment instructions Line 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instructions(group) > Line 1','NTE*OBI.1','Payment instructions Line 1 related to Payment','16','WPmtInstText1','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Payment instructions Line 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instructions(group) > Line 2','NTE*OBI.2','Payment instructions Line 2 related to Payment','16','WPmtInstText2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Payment instructions Line 3','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instructions(group) > Line 3','NTE*OBI.3','Payment instructions Line 3 related to Payment','16','WPmtInstText3','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-FED','','Payment instructions Line 4','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instructions(group) > Line 4','NTE*OBI.4','Payment instructions Line 4 related to Payment','16','WPmtInstText4','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','BPR 07','Bank Routing Number',0,'RegistrationNum','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Vendor bank Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','BPR 13','Swift Code related to Vendor','9','SWIFTNo','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','BPR 14','Account Number related to vendor','9','AccountNum','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02','Name related to bank','15','WOrdPartyName','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Vendor Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','N1PE.02','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3PE.01','Address related to vendor','16','WBeneAddr','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','N3PE.02','Address related to vendor','16','WBeneAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','N4PE.01','Vendor city','16','WBeneCity','','',0,1,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','N4PE.02','State related to vendor','16','WBeneState','','',1,1,0,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','N4PE.03','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','N4PE.04','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Vendor Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','N1BK.02','Beneficiary Bank Name','16','WBenBankName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Vendor bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','N4BK.01','Country related to vendor bank','16','WBenBankCity','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Vendor bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Address','N3BK.01','Address related to vendor bank','16','WBenBankAddr','','',0,0,1,'26',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Vendor bank Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/Region','N4BK.04','Country related to vendor bank','16','WBenBankCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Intermediary Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Name','NM1RB.03','Intermediary Bank Name','16','WIntBankName','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','NM1RB.03','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,'2','','80',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Intermediary Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','NM1RB.03','Intermediary Bank Id related to vendor','16','WIntBankId','','',1,'2','','80',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Intermediary Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address','NM3RB.01','Intermediary Bank Address related to vendor','16','WIntBankAddr','','',1,'2','','55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Intermediary Bank Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address 2','NM3RB.02','Intermediary Bank Address related to vendor','16','WIntBankAddr2','','',1,'2','','55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Intermediary Bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > City','NM4RB.01','City','16','WIntBankCity','','',1,1,'','30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Intermediary Bank Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','NM4RB.04','Intermediary Bank Country related to vendor','16','WIntBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Payment instructions Line 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instructions(group) > Line 1','NTE*OBI.1','Payment instructions Line 1 related to Payment','16','WPmtInstText1','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Payment instructions Line 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instructions(group) > Line 2','NTE*OBI.2','Payment instructions Line 2 related to Payment','16','WPmtInstText2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Payment instructions Line 3','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instructions(group) > Line 3','NTE*OBI.3','Payment instructions Line 3 related to Payment','16','WPmtInstText3','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','Wire-SWIFT','','Payment instructions Line 4','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instructions(group) > Line 4','NTE*OBI.4','Payment instructions Line 4 related to Payment','16','WPmtInstText4','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','PAYMODE-X','','Vendor Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','N1PE.02','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','ACH-CCD','','Vendor Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','N1PE.02','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','ACH-CCD+','','Vendor Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','N1PE.02','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','ACH-PPD','','Vendor Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','N1PE.02','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','ACH-PPD+','','Vendor Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','N1PE.02','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','APCARD','','Vendor Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','N1PE.02','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','CHK','','Vendor Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','N1PE.02','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','CHK','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3PE.01','Address related to vendor','16','WBeneAddr','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','CHK','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','N3PE.02','Address related to vendor','16','WBeneAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','CHK','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','N4PE.01','Vendor city','16','WBeneCity','','',0,1,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','CHK','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','N4PE.02','State related to vendor','16','WBeneState','','',1,1,0,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','CHK','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','N4PE.03','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-RBSC-EDI820-052913','CHK','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','N4PE.04','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-RBSC-EDI820-052913','BusinessFuncCd','Business function code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-RBSC-EDI820-052913','MailHandlingCode','Mail Handling Code']);

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-RBSC-EDI820-052913','IdCodeQualifier','Identification Code Qualifier']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-RBSC-EDI820-052913','BusinessFuncCd','pension','PEN']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-RBSC-EDI820-052913','BusinessFuncCd','Salary','PRL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-RBSC-EDI820-052913','BusinessFuncCd','Tax payment','TAX']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-RBSC-EDI820-052913','BusinessFuncCd','Vendor payment','VEN']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-RBSC-EDI820-052913','BusinessFuncCd','Child Support','PCS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-RBSC-EDI820-052913','BusinessFuncCd','Collection Receipts','COL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-RBSC-EDI820-052913','BusinessFuncCd','Consumer 3rd party payment','CON']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-RBSC-EDI820-052913','MailHandlingCode','Regular Mail','001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-RBSC-EDI820-052913','MailHandlingCode','Overnight to Payee','002']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-RBSC-EDI820-052913','MailHandlingCode','Overnight to Payor','003']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-RBSC-EDI820-052913','IdCodeQualifier','ABA','ABA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-RBSC-EDI820-052913','IdCodeQualifier','SWIFT','SWIFT']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('US-RBSC-EDI820-052913'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_RBSC_EDI820_052913();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_RBSC_EDI820_052913</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_RBSC_EDI820_052913()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-RBSC-EDI820-052913','US-RBSC-EDI820-052913','ACH-IAT','BusinessFuncCd','Business function code',0,'BusinessFuncCd','',0,'','','BPR*17 > Business function code']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-RBSC-EDI820-052913','US-RBSC-EDI820-052913','CHK','MailHandlingCode','Mail Handling Code',0,'MailHandlingCode','Regular Mail',1,'','','TRN.04']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-RBSC-EDI820-052913','US-RBSC-EDI820-052913','Wire-SWIFT','IdCodeQualifier','Identification Code Qualifier',0,'IdCodeQualifier','',0,'','','NM1*RB > Identification Code Qualifier']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-RBSC-EDI820-052913','US-RBSC-EDI820-052913','Wire-FED','IdCodeQualifier','Identification Code Qualifier',0,'IdCodeQualifier','',0,'','','NM1*RB > Identification Code Qualifier']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-RBSC-EDI820-052913','US-RBSC-EDI820-052913','PAYMODE-X','PayeeSiteId','Payee Site ID',1,'PayeeSiteId','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXX','N1PE.04 Identification Code']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
            case ('US-RBSC-EDI820-052913'):
                ControlFormatList = this.getControlFormatMetaData_US_RBSC_EDI820_052913();
                break;

        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData_US_RBSC_EDI820_052913</Name>
				<Source><![CDATA[
    private container getControlFormatMetaData_US_RBSC_EDI820_052913()
    {
        container   ControlFormatList;

        ControlFormatList = ConIns(ControlFormatList,conLen(ControlFormatList)+1,['US-RBSC-EDI820-052913','US-RBSC-EDI831-052913','US-RBSC-EDI820-052913 file authentication record']);

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-RBSC-EDI820-052913','*','FormatLookup','*','*','']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch(_formatID)
        {
            case ('US-RBSC-EDI820-052913'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_RBSC_EDI820_052913();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_RBSC_EDI820_052913</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_RBSC_EDI820_052913()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-RBSC-EDI820-052913','US-RBSC-EDI820-052913','CompanyCCAccnt','Company Corporate Card Account',1,'CompanyCCAccnt','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','TRN.04 Company Corporate Card Account']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-RBSC-EDI820-052913','US-RBSC-EDI820-052913','PayerSiteId','Payer Site ID',1,'PayerSiteId','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXX','N1PR.04 Payer Identification Code']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-RBSC-EDI820-052913','US-RBSC-EDI820-052913','CompanyId','Company ID for PAYMODEX',1,'CompanyId','',0,'','XXXXXXXX','BPR.10 Orig. Co. ID']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'US-RBSC-EDI820-052913':
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('CompanyCCAccnt', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('PayerSiteId', gSKS_EFT_Bank.W02);
                }
                if(gSKS_EFT_Bank.W03)
                {
                    this.updateBankFields('CompanyId', gSKS_EFT_Bank.W03);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'US-RBSC-EDI820-052913':
                if(gSKS_EFT_VendorPaym.BE01)
                {
                    this.updateVendorFields('PayeeSiteId', gSKS_EFT_VendorPaym.BE01);
                }
                if(gSKS_EFT_VendorPaym.WIntBankQualifier)
                {
                    this.updateVendorFields('IdCodeQualifier', gSKS_EFT_VendorPaym.WIntBankQualifier, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>