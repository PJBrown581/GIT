<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_FIRSTREPUB_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_FIRSTREPUB_CSV Extends SKS_PP_Format_BankGroup
{
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    // BANK ABA Number (9 digits)
    // Bank Account Number
    // Check Num
    // Check Amt
    // Vend Payee
    protected str txtDetail()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str comma = ',';
        int Mult = 1;
        str ItemType;
    
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            if(mSKS_PP_FileDetail.ChkCuryAmt < 0)
            {
                Mult = -1;
            }
            ItemType = 'V';
        }
        else
        {
            ItemType = 'I';
        }

        sb.Append(subStr(mSKS_PP_FileDetail.BnkBankTransit, 1, 9));
        sb.Append(comma);
        sb.Append(subStr(mSKS_PP_FileDetail.BnkBankAcct, 1 , 19));
        sb.Append(comma);
        sb.Append(SKS_PP_StringFormats::strFill(12, any2str(mSKS_PP_FileDetail.ChkRefNbr), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(comma);
        sb.Append(SKS_PP_StringFormats::strFill(13, num2Str(mSKS_PP_FileDetail.ChkCuryAmt * Mult,0,2,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(comma);
        sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(mSKS_PP_FileDetail.ChkDocDate, DateSeparator::Slash));
        sb.Append(comma);
        sb.Append(ItemType);
        sb.Append(comma);

        if(strContains(mSKS_PP_FileDetail.VendName, ','))
        {
            sb.Append(subStr(strRem(mSKS_PP_FileDetail.VendName,','), 1, 100));
        }
        else 
        {
            sb.Append(subStr(mSKS_PP_FileDetail.VendName, 1, 100));
        }
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>