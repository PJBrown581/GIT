<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_BR_JournalTemplateCopyPeriodic</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SKS_BR_JournalTemplateCopyPeriodic  extends RunBaseBatch
{
    SKS_LB_JournalARApplic              journalARApplic;
    SKS_LB_JournalAR                    journalAR;
    SKS_LB_JournalARApplicTemplateHdr   templateHdr;
    SKS_LB_JournalARApplicTemplate      template;
    RefRecId                            journalARRecId, bankTranRecId;
    JournalId                           journalNum;    
    Name                                templateNameOverride;  //8792 CR
    boolean                             applyTemplate;
    Name                                templateName;        
    DialogField                         dialogTemplateSaveNew; //8792 CR
    RefTableId                          bankTranTableId; // SKS_18426
 
    #DEFINE.CurrentVersion(1)
    #LOCALMACRO.CurrentList
        journalNum,
        applyTemplate
    #ENDMACRO
      

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canGoBatch</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns true.
    /// </summary>
    /// <returns>
    ///    Always returns true.
    /// </returns>
    /// <remarks>
    ///    This method must be in this class because it is called from the <c>DialogRunbase</c> class.
    /// </remarks>
    public boolean canGoBatch()
    {
        return true;   //TAS_CAReport
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns a class that contains the methods that are described by the <c>RunBaseDialogable</c>
    ///    interface.
    /// </summary>
    /// <returns>
    ///    A class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
    /// </returns>
    /// <remarks>
    ///    A dialog can be built by using the <c>Dialog</c> class or by using a class that is created in the
    ///    Application Object Tree (AOT).
    /// </remarks>   
    public Object dialog()
    {
        FormBuildStringControl control;
        DialogRunbase   dialog = super();
            
        //  8792 -->
        dialogTemplateSaveNew       = dialog.addField(ExtendedTypeStr(Name), "@SYS69153", "@SKS6248");
        control                     = dialogTemplateSaveNew.control();          
        control.registerOverrideMethod(methodStr(formStringControl, lookup), methodStr(SKS_BR_JournalTemplateCopyPeriodic, templateLookup), this);                          
      
        //  8792 <--
        return dialog;   
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    boolean getFromDialog()
    {
        templateNameOverride    = dialogTemplateSaveNew.value();      //8792 CR
    
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmApplyTemplate</Name>
				<Source><![CDATA[
    boolean parmApplyTemplate(boolean   _applyTemplate = applyTemplate)
    {
        applyTemplate = _applyTemplate;
    
        return applyTemplate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankTranRecId</Name>
				<Source><![CDATA[
    RefRecId parmBankTranRecId(RefRecId _bankTranRecId = bankTranRecId)
    
    {
        bankTranRecId = _bankTranRecId;
        return bankTranRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankTranTableId</Name>
				<Source><![CDATA[
    //SKS_18426
    RefTableId parmBankTranTableId(RefTableId _bankTranTableId = bankTranTableId)
    {
        bankTranTableId = _bankTranTableId;
        return bankTranTableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalAR</Name>
				<Source><![CDATA[
    //SKS_18426

    SKS_LB_JournalAR parmJournalAR(SKS_LB_JournalAR _journalAR = journalAR)
    {
        journalAR = _journalAR;
    
        return journalAR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalARApplic</Name>
				<Source><![CDATA[
    SKS_LB_JournalARApplic parmJournalARApplic(SKS_LB_JournalARApplic _journalARApplic = journalARApplic)
    {
        journalARApplic = _journalARApplic;
    
        return journalARApplic;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalARRecId</Name>
				<Source><![CDATA[
    RefRecId parmJournalARRecId(RefRecId _journalARRecId = journalARRecId)
    {
        journalARRecId = _journalARRecId;
    
        return journalARRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalNum</Name>
				<Source><![CDATA[
    JournalId parmJournalNum(JournalId _journalNum = journalNum)
    {
        journalNum = _journalNum;
    
        return journalNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTemplateName</Name>
				<Source><![CDATA[
    Name parmTemplateName(Name  _templateName = templateName)
    {
        templateName = _templateName;

        return templateName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Contains the code that does the actual job of the class.
    /// </summary>
    void run()
    {
        #OCCRetryCount
        RecordInsertList journalARApplicRecordInsertList = new RecordInsertList(tableNum(SKS_LB_JournalARApplic));  //TAS_CAReport
        RecordInsertList journalARApplicTemplateRecordInsertList = new RecordInsertList(tableNum(SKS_LB_JournalARApplicTemplate));  //TAS_CAReport
        SKS_BR_BankTran  sKS_BR_BankTran; //SKS_Bug_9235
        SKS_CCR_BankTran ccr_bankTran; //SKS_18426

        try
        {
            ttsbegin;
    
            if (this.parmApplyTemplate()) // Apply template
            {
                //SKS_18426
                if (this.parmBankTranTableId() == tableNum(SKS_CCR_BankTran))
                {
                    select firstonly crosscompany DataAreaId from ccr_bankTran where ccr_bankTran.RecId == this.parmBankTranRecId();
                    changecompany(ccr_bankTran.DataAreaId)
                    {
                        select templateHdr where templateHdr.TemplateName == templateName;
                    }
                }
                //SKS_18426
                else
                {
                    select firstonly crosscompany DataAreaId from sKS_BR_BankTran where sKS_BR_BankTran.RecId == this.parmBankTranRecId(); //SKS_Bug_9519
                    changecompany(sKS_BR_BankTran.DataAreaId) //SKS_Bug_9519
                    {
                        select templateHdr where templateHdr.TemplateName == templateName; // 8792 CR //SKS_Bug_9519
                    }
                }

                if (templateHdr.RecId  > 0)
                {
                    while select template where template.TemplateHdr == templateHdr.RecId
                    {
                        journalARApplic.clear();
                        //journalARApplic.SKS_BR_BankTran               = this.parmBankTranRecId();
                        journalARApplic.AccountType                   = template.AccountType;
                        journalARApplic.LedgerDimension               = template.LedgerDimension;
                        journalARApplic.DefaultDimension              = template.DefaultDimension;
                        journalARApplic.CustTransDataAreaId           = template.CustTransDataAreaId;
                        journalARApplic.TransactionAmount             = template.TransactionAmount;
                        journalARApplic.DefaultBankDimension          = template.DefaultBankDimension; //SKS_Bug_9235
                        journalARApplic.Description                   = template.Description; //SKS_Bug_9519

                        //SKS_18426 start
                        if (this.parmBankTranTableId() == tableNum(SKS_CCR_BankTran))
                        {
                            journalARApplic.SKS_CCR_BankTran              = this.parmBankTranRecId();
                        }
                        else
                        {
                            journalARApplic.SKS_BR_BankTran               = this.parmBankTranRecId();
                        }
                        //SKS_18426 end

                        journalARApplicRecordInsertList.add(journalARApplic);          //TAS_CAReport
                    }
                    journalARApplicRecordInsertList.insertDatabase();                  //TAS_CAReport
                }                
            }
            else // Save template  // 8792 CR
            {
                DataAreaId dataAreaIDLocal;
                //SKS_18426
                if (this.parmBankTranTableId() == tableNum(SKS_CCR_BankTran))
                {
                    select firstonly crosscompany DataAreaId from ccr_bankTran where ccr_bankTran.RecId == this.parmBankTranRecId();
                    dataAreaIDLocal = ccr_bankTran.DataAreaId;
                }
                else
                {
                    //SKS_Bug_9235 -->
                    select firstonly crosscompany DataAreaId from sKS_BR_BankTran where sKS_BR_BankTran.RecId == this.parmBankTranRecId();
                    dataAreaIDLocal = sKS_BR_BankTran.DataAreaId;
                }
                //SKS_18426

                changecompany(dataAreaIDLocal)
                {
                    templateHdr.clear();
                    ttsbegin;
                    if(templateNameOverride)   // 8792 CR
                    {
                        select templateHdr where templateHdr.TemplateName == templateNameOverride;
                        if (templateHdr.RecId != 0)
                        {
                            templateHdr.selectForUpdate(true);
                            delete_from template where template.TemplateHdr == templateHdr.RecId;
                            templateHdr.delete();
                        }
                    }                                      
                    templateHdr.TemplateName = templateNameOverride;

                    templateHdr.insert();
                    ttsCommit;
                }    
      
                if (this.parmBankTranTableId() == tableNum(SKS_BR_BankTran))
                {
                    //SKS_Bug_9235 <--
                    while select journalARApplic where journalARApplic.SKS_BR_BankTran == this.parmBankTranRecId()
                    {
                        template.clear();
                        template.AccountType                    = journalARApplic.AccountType;
                        template.LedgerDimension                = journalARApplic.LedgerDimension;
                        template.DefaultDimension               = journalARApplic.DefaultDimension;
                        template.TemplateHdr                    = templateHdr.RecId;
                        template.CustTransDataAreaId            = journalARApplic.CustTransDataAreaId;
                        template.TransactionAmount              = journalARApplic.TransactionAmount;
                        template.DefaultBankDimension           = journalARApplic.DefaultBankDimension; //SKS_Bug_9235
                        template.Description                    = journalARApplic.Description; //SKS-Bug_9519
                        journalARApplicTemplateRecordInsertList.add(template);    //TAS_CAReport
                    }
                }
                else
                {
                    while select journalARApplic where journalARApplic.SKS_CCR_BankTran == this.parmBankTranRecId()
                    {
                        template.clear();
                        template.AccountType                    = journalARApplic.AccountType;
                        template.LedgerDimension                = journalARApplic.LedgerDimension;
                        template.DefaultDimension               = journalARApplic.DefaultDimension;
                        template.TemplateHdr                    = templateHdr.RecId;
                        template.CustTransDataAreaId            = journalARApplic.CustTransDataAreaId;
                        template.TransactionAmount              = journalARApplic.TransactionAmount;
                        template.DefaultBankDimension           = journalARApplic.DefaultBankDimension; //SKS_Bug_9235
                        template.Description                    = journalARApplic.Description; //SKS-Bug_9519
                        journalARApplicTemplateRecordInsertList.add(template);    //TAS_CAReport
                    }
                }
                journalARApplicTemplateRecordInsertList.insertDatabase();     //TAS_CAReport
            }
    
            ttscommit;
        }
        catch (Exception::Deadlock)
        {
            retry;
        }
        catch (Exception::UpdateConflict)
        {
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::UpdateConflictNotRecovered;
                }
                else
                {
                    retry;
                }
            }
            else
            {
                throw Exception::UpdateConflict;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        Version version = RunBase::getVersion(packedClass);
    
        switch (version)
        {
            case #CurrentVersion :
                [version,#CurrentList] = packedClass;
                break;
            default :
                return false;
        }
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate(Object _p1 = null)
    {
        boolean ret = true;
    
        if (this.parmApplyTemplate()) //Apply template
        {
            // do nothing
        }
        else // Save template  //8792 CR -->
        {
            if (templateNameOverride  == '')
            {
                throw warning("@SKS6249");
            } // 8792 CR <--           
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    client server static public ClassDescription description()
    {
        return "@SKS4277";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static server void main(Args  args)
    {
        SKS_BR_JournalTemplateCopyPeriodic      templateCopyPeriodic;
        SKS_LB_JournalARApplicTemplateHdr       journalARApplicTemplateHdr;

        templateCopyPeriodic = SKS_BR_JournalTemplateCopyPeriodic::newTemplateTale(Args.record());        
        
        if (args.parm() == "@SKS4296")
        {
            if (templateCopyPeriodic.parmBankTranRecId() == 0 )
            {
                throw error("@SKS6228");
            }
            else
            {
                templateCopyPeriodic.parmApplyTemplate(false);
                if (templateCopyPeriodic.prompt())
                {
                    if (templateCopyPeriodic.parmBankTranRecId() != 0)
                    {
                        templateCopyPeriodic.run();
                    }
                }
            }
        }
        else
        {
            select firstonly TemplateName,RecId from journalARApplicTemplateHdr where journalARApplicTemplateHdr.TemplateName == args.parm();
            templateCopyPeriodic.parmTemplateName(journalARApplicTemplateHdr.TemplateName);
            templateCopyPeriodic.parmApplyTemplate(true);
            if (templateCopyPeriodic.parmBankTranRecId() != 0)
            {
                templateCopyPeriodic.run();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newTemplateTale</Name>
				<Source><![CDATA[
    static server SKS_BR_JournalTemplateCopyPeriodic newTemplateTale(Common _common)
    {
        SKS_BR_JournalTemplateCopyPeriodic  templateCopyPeriodic;
        SKS_BR_BankTran                     bankTran;
        SKS_LB_JournalARApplic              journalARApplic, journalARApplicLoc;
        SKS_CCR_BankTran                    ccr_bankTran; // SKS_18426

        templateCopyPeriodic = new SKS_BR_JournalTemplateCopyPeriodic();
        templateCopyPeriodic.getLast();

        if (_common is SKS_BR_BankTran)
        {
            bankTran = _common as SKS_BR_BankTran;
            templateCopyPeriodic.parmBankTranRecId(bankTran.RecId);
            templateCopyPeriodic.parmbanktranTableId(bankTran.TableId);
            select firstOnly journalARApplic where journalARApplic.SKS_BR_BankTran == bankTran.RecId;
        }
        // SKS_18426
        else if (_common is SKS_CCR_BankTran)
        {
            ccr_bankTran = _common as SKS_CCR_BankTran;
            templateCopyPeriodic.parmBankTranRecId(ccr_bankTran.RecId);
            templateCopyPeriodic.parmbanktranTableId(ccr_bankTran.TableId);
            select firstOnly journalARApplic where journalARApplic.SKS_CCR_BankTran == ccr_bankTran.RecId;
        }
        // SKS_18426
        else
        {
            journalARApplicLoc = _common as SKS_LB_JournalARApplic;
        }

        if (journalARApplic.RecId == 0)
        {
            journalARApplic = journalARApplicLoc;
        }
        if (journalARApplic.RecId)
        {
            templateCopyPeriodic.parmJournalARApplic(journalARApplic);
            templateCopyPeriodic.parmJournalAR(SKS_LB_JournalAR::find(journalARApplic.SKS_LB_JournalARRecId));
            //templateCopyPeriodic.parmBankTranRecId(journalARApplic.SKS_BR_BankTran);
            templateCopyPeriodic.parmJournalNum(templateCopyPeriodic.parmJournalAR().JournalId);

            // SKS_18426
            if (journalARApplic.SKS_BR_BankTran)
            {
                templateCopyPeriodic.parmBankTranRecId(journalARApplic.SKS_BR_BankTran);
                templateCopyPeriodic.parmbanktranTableId(tableNum(SKS_BR_BankTran));
            }
            else
            {
                templateCopyPeriodic.parmBankTranRecId(journalARApplic.SKS_CCR_BankTran);
                templateCopyPeriodic.parmbanktranTableId(tableNum(SKS_CCR_BankTran));
            }
            // SKS_18426
        }

        return templateCopyPeriodic;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showBatchTab</Name>
				<Source><![CDATA[
    /// <summary>
    /// To disbale abtch tab from dialog as it is not require.
    /// </summary>
    /// <param name = "_showBatchTab"></param>
    /// <returns></returns>
    public boolean showBatchTab(boolean _showBatchTab = createBatchTab)
    {
        boolean ret;
    
        ret = false;
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>templateLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///This templateLookup() method gives the lookUp of all the existing templates in the overwrite template field.
    /// </summary>
    // 8792 CR
    private void templateLookup(FormStringControl _control)
    {
        SysTableLookup sysTableLookup;
        QueryBuildDataSource qbds;
        SKS_BR_BankTran bankTran;        

        select firstonly crosscompany DataAreaId from bankTran where bankTran.RecId == this.parmBankTranRecId();        
        Query query = new Query();
        qbds = Query.addDataSource(tableNum(SKS_LB_JournalARApplicTemplateHdr));
        query.allowCrossCompany(true);
        query.addCompanyRange(bankTran.DataAreaId);
        sysTableLookup = SysTableLookup::newParameters(tableNum(SKS_LB_JournalARApplicTemplateHdr), _control,true);
        sysTableLookup.addLookupfield(fieldNum(SKS_LB_JournalARApplicTemplateHdr, TemplateName), true);
        sysTableLookup.parmQuery(query);                
        sysTableLookup.parmUseLookupValue(true);
        _control.resolveAmbiguousReference();       
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>