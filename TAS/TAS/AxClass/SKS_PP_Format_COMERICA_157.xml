<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_COMERICA_157</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_COMERICA_157 Extends SKS_PP_Format
{
    BankAccount gBankAccount;
    int64 gRecordCount;
    Amount  gAmount;

    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    //COMERICA BANK
        // Detail Record
        // Record Length = 157
        // 01-01 Record Type ('V' for Void and ' ' for Check)
        // 02-11 Account Number
        // 12-12 Space
        // 13-18 Issue Date MMDDYY
        // 19-19 Space
        // 20-29 Check Number
        // 30-30 Space
        // 31-40 Check Amount - zero filled, no decimal, 2 decimal implied
        // 41-41 Space
        // 42-56 Additional Data (Spaces)
        // 57-57 Space
        // 58-157 Payee Name
    protected str txtDetail()
    {
        str ItemType;
        int Mult;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        if(gBankAccount != mSKS_PP_FileDetail.BnkBankAcct)
        {
            gBankAccount = mSKS_PP_FileDetail.BnkBankAcct;
        }
        gRecordCount++;
        // Convert negative void numbers to positives
        Mult = 1;
        if (mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'V';
            if (mSKS_PP_FileDetail.ChkCuryAmt < 0)
            {
                Mult = -1;
            }
        }
        else
        {
            ItemType = ' ';
        }
        gAmount = gAmount + (Mult * mSKS_PP_FileDetail.ChkCuryAmt);
        sb.Append(ItemType);
        sb.Append(SKS_PP_StringFormats::strFill(10, strLTrim(StrRTrim(mSKS_PP_FileDetail.BnkBankAcct)), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(' ');
        sb.Append(SKS_PP_StringFormats::strDateMMDDYY(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(' ');
        sb.Append(SKS_PP_StringFormats::strFill(10, strLtrim(strRTrim(mSKS_PP_FileDetail.ChkRefNbr)), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(' ');
        sb.Append(SKS_PP_StringFormats::strMoney(Mult * mSKS_PP_FileDetail.ChkCuryAmt, 10));
        sb.Append(' ');
        sb.Append(SKS_PP_StringFormats::strFill(16, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(100, mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        return sb.ToString();
    
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtFormatTrailer</Name>
				<Source><![CDATA[
    public str txtFormatTrailer()
    {
        //Comerica 157
        // format trailer
        // start    end     length
        // 1        1       1       "T" Constant
        //  2       11      10      Last bank account processed
        //  12      12      1       " " Constant
        //  13      18      6       Date MMDDYYY
        //  19      19      1       " " Constant
        //  20      29      10      Record count
        //  30      30      1       " " Constant
        //  31      40      10      Sum of detail records
        //  41      157     117     Space fill
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        sb.Append('T');
        //if multiple accounts in file, the last account should be in this field
        sb.Append(SKS_PP_StringFormats::strFill(10, gBankAccount,SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(' ');
        sb.Append(SKS_PP_StringFormats::strDateMMDDYY(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));
        sb.Append(' ');
        sb.Append(SKS_PP_StringFormats::strFill(10, int642str(gRecordCount),SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(' ');
        sb.Append(SKS_PP_StringFormats::strMoney(gAmount, 10));
        sb.Append(SKS_PP_StringFormats::strFill(117, '',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
    
        return sb.ToString();
    
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>