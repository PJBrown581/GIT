<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_AT_RAIFFEISENBANK_CFD</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_AT_RAIFFEISENBANK_CFD Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_AT_RAIFFEISENBANK_CFD Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220727';
        dataContractVersion = '1.0';
        conFormatID = ['AT-RAIFFEISENBANK-CFD-CZ'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'AT - Raiffeisen bank - CFD - CZ',0,'','','AT-RAIFFEISENBANK-CFD-CZ',1,'','','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,0,0,0,'','','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'AT-RAIFFEISENBANK-CFD',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('AT-RAIFFEISENBANK-CFD-CZ'):
                paymSpecList = this.getPaymSpecsMetaData_AT_RAIFFEISENBANK_CFD_CZ();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_AT_RAIFFEISENBANK_CFD_CZ</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_AT_RAIFFEISENBANK_CFD_CZ()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,1,0,'Domestic Payment',1,'DOM','','DOM','TRADE PAY',0,'AT-RAIFFEISENBANK-CFD-CZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,1,0,'Urgent Domestic Payment',1,'UDOM','','UDOM','TRADE PAY',0,'AT-RAIFFEISENBANK-CFD-CZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('AT-RAIFFEISENBANK-CFD-CZ'):
                notesList = this.getNotesMetaData_AT_RAIFFEISENBANK_CFD_CZ();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_AT_RAIFFEISENBANK_CFD_CZ</Name>
				<Source><![CDATA[
    private container getNotesMetaData_AT_RAIFFEISENBANK_CFD_CZ()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['AT-RAIFFEISENBANK-CFD-CZ','DOM','-EC > Constant symbol is stored in the Vendor bank account > BANK CONSTANT SYMBOL (fast tab) > Constant symbol']);
        notesList = ConIns(notesList,conLen(notesList)+1,['AT-RAIFFEISENBANK-CFD-CZ','UDOM','-EC > Constant symbol is stored in the Vendor bank account > BANK CONSTANT SYMBOL (fast tab) > Constant symbol']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('AT-RAIFFEISENBANK-CFD-CZ'):
                validationsList = this.getValidationsMetaData_AT_RAIFFEISENBANK_CFD_CZ();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_AT_RAIFFEISENBANK_CFD_CZ</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_AT_RAIFFEISENBANK_CFD_CZ()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-CFD-CZ','DOM','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number',':52D: > Ordering party account number','party account number',0,'AccountNum','','',0,0,1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-CFD-CZ','DOM','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name',':05: > Ordering party name and address','Ordering Party Name','15','WOrdPartyName','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-CFD-CZ','DOM','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name',':59: > Beneficiary name','Beneficiary name','16','WBeneName','','',0,0,'3','140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-CFD-CZ','DOM','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,'2',1,'7',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-CFD-CZ','DOM','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,0,1,'7',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-CFD-CZ','DOM','','Bank Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',0,'2',1,'7',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-CFD-CZ','DOM','','Payment Id','Accounts payable > Invoice journal > New > Select Name > Lines > New > Invoice tab > Payment Id','ZK','Payment ID','13','PaymId','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-CFD-CZ','UDOM','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number',':52D: > Ordering party account number','party account number',0,'AccountNum','','',0,0,1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-CFD-CZ','UDOM','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name',':59: > Beneficiary name','Beneficiary name','16','WBeneName','','',0,0,'3','140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-CFD-CZ','UDOM','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,'2',1,'7',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-CFD-CZ','UDOM','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,0,1,'7',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-CFD-CZ','UDOM','','Bank Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',0,'2',1,'7',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-CFD-CZ','UDOM','','Payment Id','Accounts payable > Invoice journal > New > Select Name > Lines > New > Invoice tab > Payment Id','ZK','Payment ID','13','PaymId','','',0,0,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('AT-RAIFFEISENBANK-CFD-CZ'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_AT_RAIFFEISENBANK_CFD_CZ();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_AT_RAIFFEISENBANK_CFD_CZ</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_AT_RAIFFEISENBANK_CFD_CZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AT-RAIFFEISENBANK-CFD','AT-RAIFFEISENBANK-CFD-CZ','DOM','PartnerPreAccnt','Partner Pre-account',1,'PartnerPreAccnt','',0,'','999999','Partner Pre-account']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AT-RAIFFEISENBANK-CFD','AT-RAIFFEISENBANK-CFD-CZ','UDOM','PartnerPreAccnt','Partner Pre-account',1,'PartnerPreAccnt','',0,'','999999','Partner Pre-account']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AT-RAIFFEISENBANK-CFD','AT-RAIFFEISENBANK-CFD-CZ','FormatValidations','DOM','15','WOrdPartyAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AT-RAIFFEISENBANK-CFD','AT-RAIFFEISENBANK-CFD-CZ','FormatValidations','DOM','15','WOrdPartyAddr2']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AT-RAIFFEISENBANK-CFD','AT-RAIFFEISENBANK-CFD-CZ','FormatValidations','DOM','15','WOrdPartyZipCode']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AT-RAIFFEISENBANK-CFD','AT-RAIFFEISENBANK-CFD-CZ','FormatValidations','DOM','15','WOrdPartyCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AT-RAIFFEISENBANK-CFD','AT-RAIFFEISENBANK-CFD-CZ','FormatValidations','DOM','15','WOrdPartyState']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AT-RAIFFEISENBANK-CFD','AT-RAIFFEISENBANK-CFD-CZ','FormatValidations','DOM','15','WOrdPartyCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AT-RAIFFEISENBANK-CFD','AT-RAIFFEISENBANK-CFD-CZ','FormatValidations','DOM','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AT-RAIFFEISENBANK-CFD','AT-RAIFFEISENBANK-CFD-CZ','FormatValidations','DOM','16','WBeneCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AT-RAIFFEISENBANK-CFD','AT-RAIFFEISENBANK-CFD-CZ','FormatValidations','UDOM','15','WOrdPartyName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AT-RAIFFEISENBANK-CFD','AT-RAIFFEISENBANK-CFD-CZ','FormatValidations','UDOM','15','WOrdPartyAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AT-RAIFFEISENBANK-CFD','AT-RAIFFEISENBANK-CFD-CZ','FormatValidations','UDOM','15','WOrdPartyAddr2']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AT-RAIFFEISENBANK-CFD','AT-RAIFFEISENBANK-CFD-CZ','FormatValidations','UDOM','15','WOrdPartyZipCode']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AT-RAIFFEISENBANK-CFD','AT-RAIFFEISENBANK-CFD-CZ','FormatValidations','UDOM','15','WOrdPartyCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AT-RAIFFEISENBANK-CFD','AT-RAIFFEISENBANK-CFD-CZ','FormatValidations','UDOM','15','WOrdPartyState']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AT-RAIFFEISENBANK-CFD','AT-RAIFFEISENBANK-CFD-CZ','FormatValidations','UDOM','15','WOrdPartyCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AT-RAIFFEISENBANK-CFD','AT-RAIFFEISENBANK-CFD-CZ','FormatValidations','UDOM','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AT-RAIFFEISENBANK-CFD','AT-RAIFFEISENBANK-CFD-CZ','FormatValidations','UDOM','16','WBeneCity']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AT-RAIFFEISENBANK-CFD','*','FormatValidations','*','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AT-RAIFFEISENBANK-CFD','*','FormatValidations','*','16','BE01']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('AT-RAIFFEISENBANK-CFD-CZ'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_DE_COMMERZBANK_XML_JP();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_DE_COMMERZBANK_XML_JP</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_DE_COMMERZBANK_XML_JP()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AT-RAIFFEISENBANK-CFD','AT-RAIFFEISENBANK-CFD-CZ','OrderingPrtyAccNum','Ordering Party Pre-account num',1,'OrderingPrtyAccNum','',0,'','999999','Header > Field No.2 > SalaryCompanyCode']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('AT-RAIFFEISENBANK-CFD-CZ'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('OrderingPrtyAccNum', gSKS_EFT_Bank.W01);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'AT-RAIFFEISENBANK-CFD-CZ':
                if(gSKS_EFT_VendorPaym.BE01)
                {
                    this.updateVendorFields('PartnerPreAccnt', gSKS_EFT_VendorPaym.BE01);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>