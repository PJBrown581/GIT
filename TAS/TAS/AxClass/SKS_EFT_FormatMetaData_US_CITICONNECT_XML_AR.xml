<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_CITICONNECT_XML_AR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_CITICONNECT_XML_AR Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_US_CITICONNECT_XML_AR Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220802';
        dataContractVersion = '1.0';
        conFormatID = ['US-CITICONNECT-XML-CA-AR','US-CITICONNECT-XML-US-AR','US-CITICONNECT-XML-AU-AR','US-CITICONNECT-XML-ES-AR','US-CITICONNECT-XML-FR-AR','US-CITICONNECT-XML-GB-AR','US-CITICONNECT-XML-NL-AR','US-CITICONNECT-XML-NZ-AR','US-CITICONNECT-XML-PL-AR','US-CITICONNECT-XML-ZA-AR','US-CITICONNECT-XML-DE-AR'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,1,0,0,0,'','','','',0,'','','Creditor Name','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',1,'US-CitiConnect-Canada-ISO20022',0,'','','US-CITICONNECT-XML-CA-AR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML-AR',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,1,0,0,0,'','','','',0,'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','Company Id','Company Name','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',1,'US-CitiConnect-United States-ISO20022',0,'','','US-CITICONNECT-XML-US-AR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML-AR',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,1,0,0,0,'','','','',0,'','','Company Name','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',1,'US-CitiConnect-Australia-ISO20022',0,'','','US-CITICONNECT-XML-AU-AR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML-AR',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,1,0,0,0,'','','','',0,'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','Company Id','Company Name','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',1,'US-CitiConnect-Spain-ISO20022',0,'','','US-CITICONNECT-XML-ES-AR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML-AR',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,1,0,0,0,'','','','',0,'','','Company Name','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',1,'US-CitiConnect-France-ISO20022',0,'','','US-CITICONNECT-XML-FR-AR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML-AR',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,1,0,0,0,'','','','',0,'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','Company Id','Company Name','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',1,'US-CitiConnect-United Kingdom-ISO20022',0,'','','US-CITICONNECT-XML-GB-AR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML-AR',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,1,0,0,0,'','','','',0,'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','Company Id','Company Name','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',1,'US-CitiConnect-Netherlands-ISO20022',0,'','','US-CITICONNECT-XML-NL-AR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML-AR',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,1,0,0,0,'','','','',0,'','','Company Name','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',1,'US-CitiConnect-New Zealand-ISO20022',0,'','','US-CITICONNECT-XML-NZ-AR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML-AR',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,1,0,0,0,'','','','',0,'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','Company Id','Company Name','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',1,'US-CitiConnect-Poland-ISO20022',0,'','','US-CITICONNECT-XML-PL-AR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML-AR',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,1,0,0,0,'','','','',0,'','','Company Name','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',1,'US-CitiConnect-SouthAfrica-ISO20022',0,'','','US-CITICONNECT-XML-ZA-AR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML-AR',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,1,0,0,0,'','','','',0,'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','Company Id','Company Name','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',1,'US-CitiConnect-Germany-ISO20022',0,'','','US-CITICONNECT-XML-DE-AR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML-AR',1,1,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-CITICONNECT-XML-CA-AR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_CA_AR();
                break;

            case ('US-CITICONNECT-XML-US-AR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_US_AR();
                break;

            case ('US-CITICONNECT-XML-AU-AR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_AU_AR();
                break;

            case ('US-CITICONNECT-XML-ES-AR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_ES_AR();
                break;

            case ('US-CITICONNECT-XML-FR-AR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_FR_AR();
                break;

            case ('US-CITICONNECT-XML-GB-AR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_GB_AR();
                break;

            case ('US-CITICONNECT-XML-NL-AR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_NL_AR();
                break;

            case ('US-CITICONNECT-XML-NZ-AR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_NZ_AR();
                break;

            case ('US-CITICONNECT-XML-PL-AR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_PL_AR();
                break;

            case ('US-CITICONNECT-XML-ZA-AR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_ZA_AR();
                break;

            case ('US-CITICONNECT-XML-DE-AR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_DE_AR();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_CA_AR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_CA_AR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'Canadian ACH-700',1,'CITI700','','CITI700','',0,'US-CITICONNECT-XML-CA-AR',0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_US_AR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_US_AR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'US ACH Debit PPD+ - 4',1,'PPDP-4','','PPDP-4','',0,'US-CITICONNECT-XML-US-AR',0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'US CitiDirect Drawdown/Chargewire',1,'DRC-501','','DRC-501','',0,'US-CITICONNECT-XML-US-AR',0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'US ACH Debit CCD - 504',1,'CCD-504','','CCD-504','',0,'US-CITICONNECT-XML-US-AR',0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_AU_AR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_AU_AR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'Australia Direct Debit - 830',1,'DD-830','','DD-830','',0,'US-CITICONNECT-XML-AU-AR',0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_ES_AR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_ES_AR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'SEPA DirectDebit Initiation - RCUR - Bulk Credit Posting',1,'SEPA-933','','SEPA-933','',0,'US-CITICONNECT-XML-ES-AR',0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_FR_AR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_FR_AR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'France ACH - LCR pre-auth - 74',1,'ACH-74','','ACH-74','',0,'US-CITICONNECT-XML-FR-AR',0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_GB_AR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_GB_AR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'United Kingdom ACH DD Standard - 163',1,'ACH-163','','ACH-163','',0,'US-CITICONNECT-XML-GB-AR',0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'SEPA DirectDebit Initiation -RCUR- Individual Credit Posting',1,'SEPA-858','','SEPA-858','',0,'US-CITICONNECT-XML-GB-AR',0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'SEPA DirectDebit Initiation- FRST -Individual Credit Posting',1,'SEPA-851','','SEPA-851','',0,'US-CITICONNECT-XML-GB-AR',0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_NL_AR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_NL_AR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'SEPA DirectDebit Initiation - RCUR - Bulk Credit Posting',1,'SEPA-933','','SEPA-933','',0,'US-CITICONNECT-XML-NL-AR',0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_NZ_AR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_NZ_AR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'New Zealand Direct Debit - 830',1,'DD-830','','DD-830','',0,'US-CITICONNECT-XML-NZ-AR',0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_PL_AR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_PL_AR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'Poland Direct Debits - 327',1,'DD-327','','DD-327','',0,'US-CITICONNECT-XML-PL-AR',0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_ZA_AR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_ZA_AR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'South Africa CitiDirect - South Africa DD - 800',1,'DD-800','','DD-800','',0,'US-CITICONNECT-XML-ZA-AR',0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_DE_AR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_DE_AR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'SEPA DirectDebit Initiation -RCUR- Individual Credit Posting',1,'SEPA-858','','SEPA-858','',0,'US-CITICONNECT-XML-DE-AR',0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'SEPA DirectDebit Initiation - RCUR - Bulk Credit Posting',1,'SEPA-933','','SEPA-933','',0,'US-CITICONNECT-XML-DE-AR',0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-CITICONNECT-XML-CA-AR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_CA_AR();
                break;

            case ('US-CITICONNECT-XML-US-AR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_US_AR();
                break;

            case ('US-CITICONNECT-XML-AU-AR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_AU_AR();
                break;

            case ('US-CITICONNECT-XML-ES-AR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_ES_AR();
                break;

            case ('US-CITICONNECT-XML-FR-AR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_FR_AR();
                break;

            case ('US-CITICONNECT-XML-GB-AR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_GB_AR();
                break;

            case ('US-CITICONNECT-XML-NL-AR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_NL_AR();
                break;

            case ('US-CITICONNECT-XML-NZ-AR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_NZ_AR();
                break;

            case ('US-CITICONNECT-XML-PL-AR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_PL_AR();
                break;

            case ('US-CITICONNECT-XML-ZA-AR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_ZA_AR();
                break;

            case ('US-CITICONNECT-XML-DE-AR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_DE_AR();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_CA_AR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_CA_AR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CA-AR','CITI700','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-The Creditor Name is set in the Direct debit Bank Account > Direct debit > Company Info tab.:-The Bank Account Routing/Transit number is required.:-Debtor Name is Customer Name.:-Debtor Country/Region is required on the Customer Bank account.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_US_AR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_US_AR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US-AR','ACH-CCD','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-The Company Name is set in Direct debit Bank Account > AR EFT+ > Company Info tab.:-The Company Id is required and set in EFT+ Bank Account > Direct debit > Company Info tab.:-Debtor Bank Account Type must be set to either Savings or Checking and will default to Checking if not set to Savings.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US-AR','ACH-CTX','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-The Company Name is set in EFT+ Bank Account > AR EFT+ > Company Info tab.:-The Company Id is required and set in EFT+ Bank Account > AR EFT+ > Company Info tab.:-Debtor Country/Region is required on the Customer Bank account.:-Debtor Bank Account Type must be set to either Savings or Checking and will default to Checking if not set to Savings.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US-AR','PPDP-4','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-The Company Name is set in EFT+ Bank Account > AR EFT+ > Company Info tab.:-The Company Id is set in EFT+ Bank Account > AR EFT+ > Company Info tab.:-Debtor Bank Account Type is required and must be set to either Savings or Checking and will default to Checking if not set to Savings.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US-AR','DRC-501','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-The Company Name is required and set in EFT+ Bank Account > AR EFT+ > Company Info tab.:-The Company Id is set in EFT+ Bank Account > AR EFT+ > Company Info tab.:-Debtor bank name is required and stored in the Customer Bank account.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US-AR','CCD-504','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-The Company Name is required and set in EFT+ Bank Account > AR EFT+ > Company Info tab.:-The Company Id is set in EFT+ Bank Account > AR EFT+ > Company Info tab.:-Debtor bank name and country are required and stored in the Customer Bank account.:-Debtor Bank Account Type is required and must be set to either Savings or Checking and will default to Checking if not set to Savings.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_AU_AR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_AU_AR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-AU-AR','DD-830','-Group Header > Initiating Party > Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.:-The Company Name is required set in EFT+ Bank Account > AR EFT+ > Company Info tab.::-For addresses you must add DirectDebit purpose in Address and contact information purpose form in Organization administration.:--Address will print only if the Purpose of the address is mentioned as DirectDebit. Otherwise address will be ignored.:--Building num and Street name is stored on Street field separated by ;']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_ES_AR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_ES_AR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-ES-AR','SEPA-933','-Group Header > Initiating Party > Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.:-The Company Name is required set in EFT+ Bank Account > AR EFT+ > Company Info tab.:-The Company Id is required and set in EFT+ Bank Account > AR EFT+ > Company Info tab.::-For addresses you must add DirectDebit purpose in Address and contact information purpose form in Organization administration.:--Address will print only if the Purpose of the address is mentioned as DirectDebit. Otherwise address will be ignored.:--Building num and Street name is stored on Street field separated by ; ::-Debtor bank account name is required and stored in the Cutomer eBanking details > Customer bank accounts > Name field.::-Accounts receivables > All customers > Select a customer > Direct debit mandates (Fast tab):--Mandate ID and Signature date are required.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_FR_AR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_FR_AR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-FR-AR','ACH-74','-Group Header > Initiating Party > Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.:-The Company Name is required set in EFT+ Bank Account > AR EFT+ > Company Info tab.::-For addresses you must add DirectDebit purpose in Address and contact information purpose form in Organization administration.:--Address will print only if the Purpose of the address is mentioned as DirectDebit. Otherwise address will be ignored.:--Building num and Street name is stored on Street field separated by ;']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_GB_AR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_GB_AR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-GB-AR','ACH-163','-Group Header > Initiating Party > Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.:-The Company Name is set in EFT+ Bank Account > AR EFT+ > Company Info tab.::-Debtor bank account name is required and stored in the Cutomer eBanking details > Customer bank accounts > Name field.::-Accounts receivables > All customers > Select a customer > Direct debit mandates (Fast tab):--Mandate ID and Signature date are required.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-858','-Group Header > Initiating Party > Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.:-The Company Name is required set in EFT+ Bank Account > AR EFT+ > Company Info tab.:-The Company Id is required and set in EFT+ Bank Account > AR EFT+ > Company Info tab.::-For addresses you must add DirectDebit purpose in Address and contact information purpose form in Organization administration.:--Address will print only if the Purpose of the address is mentioned as DirectDebit. Otherwise address will be ignored.:--Building num and Street name is stored on Street field separated by ; ::-Debtor bank account name is required and stored in the Cutomer eBanking details > Customer bank accounts > Name field.::-Accounts receivables > All customers > Select a customer > Direct debit mandates (Fast tab):--Mandate ID and Signature date are required.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-851','-Group Header > Initiating Party > Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.:-The Company Name is required set in EFT+ Bank Account > AR EFT+ > Company Info tab.:-The Company Id is required and set in EFT+ Bank Account > AR EFT+ > Company Info tab.::-For addresses you must add DirectDebit purpose in Address and contact information purpose form in Organization administration.:--Address will print only if the Purpose of the address is mentioned as DirectDebit. Otherwise address will be ignored.:--Building num and Street name is stored on Street field separated by ;::-Accounts receivables > All customers > Select a customer > Direct debit mandates (Fast tab):--Mandate ID and Signature date are required.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_NL_AR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_NL_AR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-NL-AR','SEPA-933','-Group Header > Initiating Party > Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.:-The Company Name is required set in EFT+ Bank Account > AR EFT+ > Company Info tab.:-The Company Id is required and set in EFT+ Bank Account > AR EFT+ > Company Info tab.::-For addresses you must add DirectDebit purpose in Address and contact information purpose form in Organization administration.:--Address will print only if the Purpose of the address is mentioned as DirectDebit. Otherwise address will be ignored.:--Building num and Street name is stored on Street field separated by ; ::-Debtor bank account name is required and stored in the Cutomer eBanking details > Customer bank accounts > Name field.::-Accounts receivables > All customers > Select a customer > Direct debit mandates (Fast tab):--Mandate ID and Signature date are required.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_NZ_AR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_NZ_AR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-NZ-AR','DD-830','-Group Header > Initiating Party > Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.:-The Company Name is required set in EFT+ Bank Account > AR EFT+ > Company Info tab.::-For addresses you must add DirectDebit purpose in Address and contact information purpose form in Organization administration.:--Address will print only if the Purpose of the address is mentioned as DirectDebit. Otherwise address will be ignored.:--Building num and Street name is stored on Street field separated by ;']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_PL_AR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_PL_AR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PL-AR','DD-327','-Group Header > Initiating Party > Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.:-The Company Name is required set in EFT+ Bank Account > AR EFT+ > Company Info tab.::-For addresses you must add DirectDebit purpose in Address and contact information purpose form in Organization administration.:--Address will print only if the Purpose of the address is mentioned as DirectDebit. Otherwise address will be ignored.:--Building num and Street name is stored on Street field separated by ; ::-Debtor bank account name is required and stored in the Cutomer eBanking details > Customer bank accounts > Name field.::-Accounts receivables > All customers > Select a customer > Direct debit mandates (Fast tab):--Mandate ID and Signature date are required.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_ZA_AR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_ZA_AR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-ZA-AR','DD-800','-Group Header > Initiating Party > Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.:-The Company Name is required set in EFT+ Bank Account > AR EFT+ > Company Info tab.::-For addresses you must add DirectDebit purpose in Address and contact information purpose form in Organization administration.:--Address will print only if the Purpose of the address is mentioned as DirectDebit. Otherwise address will be ignored.:--Building num and Street name is stored on Street field separated by ;']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_DE_AR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_DE_AR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-858','-Group Header > Initiating Party > Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.:-The Company Name is required set in EFT+ Bank Account > AR EFT+ > Company Info tab.:-The Company Id is required and set in EFT+ Bank Account > AR EFT+ > Company Info tab.::-For addresses you must add DirectDebit purpose in Address and contact information purpose form in Organization administration.:--Address will print only if the Purpose of the address is mentioned as DirectDebit. Otherwise address will be ignored.:--Building num and Street name is stored on Street field separated by ; ::-Debtor bank account name is required and stored in the Cutomer eBanking details > Customer bank accounts > Name field.::-Accounts receivables > All customers > Select a customer > Direct debit mandates (Fast tab):--Mandate ID and Signature date are required.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-933','-Group Header > Initiating Party > Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.:-The Company Name is required set in EFT+ Bank Account > AR EFT+ > Company Info tab.:-The Company Id is required and set in EFT+ Bank Account > AR EFT+ > Company Info tab.::-For addresses you must add DirectDebit purpose in Address and contact information purpose form in Organization administration.:--Address will print only if the Purpose of the address is mentioned as DirectDebit. Otherwise address will be ignored.:--Building num and Street name is stored on Street field separated by ; ::-Debtor bank account name is required and stored in the Cutomer eBanking details > Customer bank accounts > Name field.::-Accounts receivables > All customers > Select a customer > Direct debit mandates (Fast tab):--Mandate ID and Signature date are required.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-CITICONNECT-XML-US-AR'):
                validationsList = this.getValidationsMetaData_US_CITICONNECT_XML_US_AR();
                break;

            case ('US-CITICONNECT-XML-AU-AR'):
                validationsList = this.getValidationsMetaData_US_CITICONNECT_XML_AU_AR();
                break;

            case ('US-CITICONNECT-XML-ES-AR'):
                validationsList = this.getValidationsMetaData_US_CITICONNECT_XML_ES_AR();
                break;

            case ('US-CITICONNECT-XML-FR-AR'):
                validationsList = this.getValidationsMetaData_US_CITICONNECT_XML_FR_AR();
                break;

            case ('US-CITICONNECT-XML-GB-AR'):
                validationsList = this.getValidationsMetaData_US_CITICONNECT_XML_GB_AR();
                break;

            case ('US-CITICONNECT-XML-NL-AR'):
                validationsList = this.getValidationsMetaData_US_CITICONNECT_XML_NL_AR();
                break;

            case ('US-CITICONNECT-XML-NZ-AR'):
                validationsList = this.getValidationsMetaData_US_CITICONNECT_XML_NZ_AR();
                break;

            case ('US-CITICONNECT-XML-PL-AR'):
                validationsList = this.getValidationsMetaData_US_CITICONNECT_XML_PL_AR();
                break;

            case ('US-CITICONNECT-XML-ZA-AR'):
                validationsList = this.getValidationsMetaData_US_CITICONNECT_XML_ZA_AR();
                break;

            case ('US-CITICONNECT-XML-DE-AR'):
                validationsList = this.getValidationsMetaData_US_CITICONNECT_XML_DE_AR();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_CITICONNECT_XML_US_AR</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_CITICONNECT_XML_US_AR()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','PPDP-4','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',0,0,1,'17',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','PPDP-4','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PmtInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank',0,'RegistrationNum','','',0,0,1,'9',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','PPDP-4','','Routing number','TAS > Common > Customer eBanking details> Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > DrctDbtTxInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','',0,0,1,'9',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','PPDP-4','','Name','Accounts receivables > All customers > Select a customer > General (Fast tab) > Name','PmtInf > DrctDbtTxInf > Dbtr > Nm','Name related to customer','5','Name','','',0,0,1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','PPDP-4','','Customer bank account number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Bank account number','PmtInf > DrctDbtTxInf > DbtrAcct > Id > Othr > Id','Bank account number related to customer',1,'AccountNum','','',0,0,1,'17',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','PPDP-4','','Customer Invoice Number','AR > Journal> Payments > Payment Journal> New > Lines > Overview Tab > Invoice','PmtInf > DrctDbtTxInf > RmtInf > RfrdDocInf > Nb','Customer Invoice Number','7','Invoice','','',1,'2','','80',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','DRC-501','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',0,0,1,'10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','DRC-501','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > CdtrAgt >  FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,'2','8','11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','DRC-501','','Routing number','TAS > Common > Customer eBanking details> Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > DrctDbtTxInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','',0,0,1,'9',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','DRC-501','','Name','Accounts receivables > All customers > Select a customer > General (Fast tab) > Name','PmtInf > DrctDbtTxInf > Dbtr > Nm','Name related to customer','5','Name','','',0,0,1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','DRC-501','','Customer bank account number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Bank account number','PmtInf > DrctDbtTxInf > DbtrAcct > Id > Othr > Id','Bank account number related to customer',1,'AccountNum','','',0,0,1,'34',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','DRC-501','','Customer Invoice Number','AR > Journal> Payments > Payment Journal> New > Lines > Overview Tab > Invoice','PmtInf > DrctDbtTxInf > RmtInf > RfrdDocInf > Nb','Customer Invoice Number','7','Invoice','','',1,'2','','35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','CCD-504','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',0,0,1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','CCD-504','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > CdtrAgt >  FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,'2','8','11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','CCD-504','','Routing number','TAS > Common > Customer eBanking details> Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > DrctDbtTxInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','',0,0,1,'9',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','CCD-504','','Name','Accounts receivables > All customers > Select a customer > General (Fast tab) > Name','PmtInf > DrctDbtTxInf > Dbtr > Nm','Name related to customer','5','Name','','',0,0,1,'30',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','CCD-504','','Customer bank account number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Bank account number','PmtInf > DrctDbtTxInf > DbtrAcct > Id > Othr > Id','Bank account number related to customer',1,'AccountNum','','',0,0,1,'17',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','CCD-504','','Customer Invoice Number','AR > Journal> Payments > Payment Journal> New > Lines > Overview Tab > Invoice','PmtInf > DrctDbtTxInf > RmtInf > RfrdDocInf > Nb','Customer Invoice Number','7','Invoice','','',1,'2','','80',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','ACH-CTX','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',0,0,1,'17',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','ACH-CTX','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PmtInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank',0,'RegistrationNum','','',0,0,1,'9',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','ACH-CTX','','Routing number','TAS > Common > Customer eBanking details> Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > DrctDbtTxInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','',0,0,'','7',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','ACH-CTX','','Name','Accounts receivables > All customers > Select a customer > General (Fast tab) > Name','PmtInf > DrctDbtTxInf > Dbtr > Nm','Name related to customer','5','Name','','',1,'2','','32',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','ACH-CTX','','Customer bank account number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Bank account number','PmtInf > DrctDbtTxInf > DbtrAcct > Id > Othr > Id','Bank account number related to customer',1,'AccountNum','','',0,0,1,'17',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','ACH-CTX','','Customer Invoice Number','AR > Journal> Payments > Payment Journal> New > Lines > Overview Tab > Invoice','PmtInf > DrctDbtTxInf > RmtInf > RfrdDocInf > Nb','Customer Invoice Number','7','Invoice','','',1,'2','','35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','ACH-CCD','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',0,0,1,'17',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','ACH-CCD','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PmtInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank',0,'RegistrationNum','','',0,0,1,'9',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','ACH-CCD','','Routing number','TAS > Common > Customer eBanking details> Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > DrctDbtTxInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','',0,0,'','7',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','ACH-CCD','','Name','Accounts receivables > All customers > Select a customer > General (Fast tab) > Name','PmtInf > DrctDbtTxInf > Dbtr > Nm','Name related to customer','5','Name','','',1,1,1,'32',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','ACH-CCD','','Country/Region ','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Country/region','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > Ctry','Country related to Legal entity','2','CountryRegionId','','',0,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-US-AR','ACH-CCD','','Bank account number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Bank account number','PmtInf > DrctDbtTxInf > DbtrAcct > Id > Othr > Id','Bank account number related to customer',1,'AccountNum','','',0,0,1,'17',0,1]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_CITICONNECT_XML_AU_AR</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_CITICONNECT_XML_AU_AR()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-AU-AR','DD-830','','Creditor Country','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Country/region','PmtInf > Cdtr > PstlAdr > Ctry','Country related to Legal entity','17','CountryRegionId','','',1,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-AU-AR','DD-830','','Creditor street','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Street','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','Street','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-AU-AR','DD-830','','Creditor postal code','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Zip/postal code','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','Zipcode','','',1,1,'','',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-AU-AR','DD-830','','Creditor city','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > City','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','City','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-AU-AR','DD-830','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',0,0,1,'30',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-AU-AR','DD-830','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > CdtrAgt >  FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,'2','8','11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-AU-AR','DD-830','','Routing number','TAS > Common > Customer eBanking details> Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > DrctDbtTxInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','',0,0,1,'16',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-AU-AR','DD-830','','Name','Accounts receivables > All customers > Select a customer > General (Fast tab) > Name','PmtInf > DrctDbtTxInf > Dbtr > Nm','Name related to customer','5','Name','','',0,0,1,'70',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-AU-AR','DD-830','','Customer Country','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Country/region','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > Ctry','Country related to Legal entity','2','CountryRegionId','','',1,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-AU-AR','DD-830','','Customer street','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Street','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Street','','',0,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-AU-AR','DD-830','','Customer postal code','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Zip/postal code','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Zipcode','','',0,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-AU-AR','DD-830','','Customer city','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > City','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','City','','',0,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-AU-AR','DD-830','','Customer bank account number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Bank account number','PmtInf > DrctDbtTxInf > DbtrAcct > Id > Othr > Id','Bank account number related to customer',1,'AccountNum','','',0,0,1,'30',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-AU-AR','DD-830','','Customer Invoice Number','AR > Journal> Payments > Payment Journal> New > Lines > Overview Tab > Invoice','PmtInf > DrctDbtTxInf > RmtInf > Ustrd','Customer Invoice Number','7','Invoice','','',1,'2','','80',0,1]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_CITICONNECT_XML_ES_AR</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_CITICONNECT_XML_ES_AR()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ES-AR','SEPA-933','','Creditor Country','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Country/region','PmtInf > Cdtr > PstlAdr > Ctry','Country related to Legal entity','17','CountryRegionId','','',1,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ES-AR','SEPA-933','','Creditor street','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Street','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','Street','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ES-AR','SEPA-933','','Creditor postal code','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Zip/postal code','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','Zipcode','','',1,1,'','',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ES-AR','SEPA-933','','Creditor city','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > City','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','City','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ES-AR','SEPA-933','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab)> IBAN','PmtInf > CdtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',1,0,1,'34',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ES-AR','SEPA-933','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',1,0,1,'10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ES-AR','SEPA-933','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > CdtrAgt >  FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,'2','8','11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ES-AR','SEPA-933','','Customer Bank Swift number','TAS > Common > Customer eBanking details> Customer bank accounts > General tab > Additional identification (fast tab) > Swift No','PmtInf > DrctDbtTxInf > DbtrAgt >  FinInstnId > BIC','Swift code related to Customer',1,'SWIFTNo','','',0,0,'8','11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ES-AR','SEPA-933','','Name','Accounts receivables > All customers > Select a customer > General (Fast tab) > Name','PmtInf > DrctDbtTxInf > Dbtr > Nm','Name related to customer','5','Name','','',0,0,1,'70',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ES-AR','SEPA-933','','Customer Country','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Country/region','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > Ctry','Country related to Legal entity','2','CountryRegionId','','',1,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ES-AR','SEPA-933','','Customer street','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Street','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Street','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ES-AR','SEPA-933','','Customer postal code','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Zip/postal code','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Zipcode','','',1,1,'','',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ES-AR','SEPA-933','','Customer city','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > City','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','City','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ES-AR','SEPA-933','','Customer bank IBAN number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Additional identification (fast tab)> IBAN','PmtInf > DrctDbtTxInf > DbtrAcct > Id > IBAN','IBAN related to customer',1,'BankIBAN','','',1,0,1,'34',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ES-AR','SEPA-933','','Customer bank account number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Bank account number','PmtInf > DrctDbtTxInf > DbtrAcct > Id > Othr > Id','Bank account number related to customer',1,'AccountNum','','',1,0,1,'10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ES-AR','SEPA-933','','Customer Invoice Number','AR > Journal> Payments > Payment Journal> New > Lines > Overview Tab > Invoice','PmtInf > DrctDbtTxInf > RmtInf > RfrdDocInf > Nb','Customer Invoice Number','7','Invoice','','',1,'2','','80',0,1]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_CITICONNECT_XML_FR_AR</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_CITICONNECT_XML_FR_AR()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-FR-AR','ACH-74','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',0,0,1,'10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-FR-AR','ACH-74','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > CdtrAgt >  FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,'2','8','11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-FR-AR','ACH-74','','Routing number','TAS > Common > Customer eBanking details> Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > DrctDbtTxInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','',0,0,'10','10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-FR-AR','ACH-74','','Customer bank Country','Customer eBanking details > Select a customer > Customer bank accounts > Address > Country/region','PmtInf > DrctDbtTxInf > DbtrAgt > PstlAdr > Ctry','Country related to Legal entity','8','CountryRegionId','','',0,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-FR-AR','ACH-74','','Customer bank street','Customer eBanking details > Select a customer > Customer bank accounts > Address > Street','PmtInf > DrctDbtTxInf > DbtrAgt > PstlAdr > AdrLine','Address related to Legal entity','8','Street','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-FR-AR','ACH-74','','Customer bank postal code','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Zip/postal code','PmtInf > DrctDbtTxInf > DbtrAgt > PstlAdr > AdrLine','Address related to Legal entity','8','Zipcode','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-FR-AR','ACH-74','','Customer bank city','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > City','PmtInf > DrctDbtTxInf > DbtrAgt > PstlAdr > AdrLine','Address related to Legal entity','8','City','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-FR-AR','ACH-74','','Name','Accounts receivables > All customers > Select a customer > General (Fast tab) > Name','PmtInf > DrctDbtTxInf > Dbtr > Nm','Name related to customer','5','Name','','',0,0,1,'24',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-FR-AR','ACH-74','','Customer bank account number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Bank account number','PmtInf > DrctDbtTxInf > DbtrAcct > Id > Othr > Id','Bank account number related to customer',1,'AccountNum','','',0,0,'11','11',0,1]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_CITICONNECT_XML_GB_AR</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_CITICONNECT_XML_GB_AR()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','ACH-163','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',0,0,1,'10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','ACH-163','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > CdtrAgt >  FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,'2','8','11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','ACH-163','','Routing number','TAS > Common > Customer eBanking details> Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > DrctDbtTxInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','',0,0,1,'6',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','ACH-163','','Customer bank Country','Customer eBanking details > Select a customer > Customer bank accounts > Address > Country/region','PmtInf > DrctDbtTxInf > DbtrAgt > PstlAdr > Ctry','Country related to Legal entity','8','CountryRegionId','','',0,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','ACH-163','','Name','Accounts receivables > All customers > Select a customer > General (Fast tab) > Name','PmtInf > DrctDbtTxInf > Dbtr > Nm','Name related to customer','5','Name','','',0,0,1,'18',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','ACH-163','','Customer bank account number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Bank account number','PmtInf > DrctDbtTxInf > DbtrAcct > Id > Othr > Id','Bank account number related to customer',1,'AccountNum','','',0,0,'8','11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','ACH-163','','Customer Invoice Number','AR > Journal> Payments > Payment Journal> New > Lines > Overview Tab > Invoice','PmtInf > DrctDbtTxInf > RmtInf > RfrdDocInf > Nb','Customer Invoice Number','7','Invoice','','',1,'2','','18',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-851','','Creditor street','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Street','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','Street','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-851','','Creditor postal code','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Street','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','Zipcode','','',1,1,'','',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-851','','Creditor city','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Street','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','City','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-851','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab)> IBAN','PmtInf > CdtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',1,0,1,'34',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-851','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',1,0,1,'10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-851','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > CdtrAgt >  FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,'2','8','11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-851','','Customer Bank Swift number','TAS > Common > Customer eBanking details> Customer bank accounts > General tab > Additional identification (fast tab) > Swift No','PmtInf > DrctDbtTxInf > DbtrAgt >  FinInstnId > BIC','Swift code related to Customer',1,'SWIFTNo','','',0,0,'8','11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-851','','Name','Accounts receivables > All customers > Select a customer > General (Fast tab) > Name','PmtInf > DrctDbtTxInf > Dbtr > Nm','Name related to customer','5','Name','','',0,0,1,'70',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-851','','Customer Country','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Country/region','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > Ctry','Country related to Legal entity','2','CountryRegionId','','',1,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-851','','Customer street','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Street','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Street','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-851','','Customer postal code','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Street','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Zipcode','','',1,1,'','',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-851','','Customer city','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Street','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','City','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-851','','Customer bank IBAN number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Additional identification (fast tab)> IBAN','PmtInf > DrctDbtTxInf > DbtrAcct > Id > IBAN','IBAN related to customer',1,'BankIBAN','','',1,0,1,'34',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-851','','Customer bank account number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Bank account number','PmtInf > DrctDbtTxInf > DbtrAcct > Id > Othr > Id','Bank account number related to customer',1,'AccountNum','','',1,0,1,'10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-851','','Customer Invoice Number','AR > Journal> Payments > Payment Journal> New > Lines > Overview Tab > Invoice','PmtInf > DrctDbtTxInf > RmtInf > RfrdDocInf > Nb','Customer Invoice Number','7','Invoice','','',1,'2','','80',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-858','','Creditor street','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Street','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','Street','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-858','','Creditor postal code','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Street','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','Zipcode','','',1,1,'','',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-858','','Creditor city','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Street','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','City','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-858','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab)> IBAN','PmtInf > CdtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',1,0,1,'34',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-858','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',1,0,1,'10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-858','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > CdtrAgt >  FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,'2','8','11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-858','','Customer Bank Swift number','TAS > Common > Customer eBanking details> Customer bank accounts > General tab > Additional identification (fast tab) > Swift No','PmtInf > DrctDbtTxInf > DbtrAgt >  FinInstnId > BIC','Swift code related to Customer',1,'SWIFTNo','','',0,0,'8','11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-858','','Name','Accounts receivables > All customers > Select a customer > General (Fast tab) > Name','PmtInf > DrctDbtTxInf > Dbtr > Nm','Name related to customer','5','Name','','',0,0,1,'70',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-858','','Customer Country','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Country/region','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > Ctry','Country related to Legal entity','2','CountryRegionId','','',1,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-858','','Customer street','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Street','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Street','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-858','','Customer postal code','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Street','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Zipcode','','',1,1,1,'',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-858','','Customer city','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Street','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','City','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-858','','Customer bank IBAN number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Additional identification (fast tab)> IBAN','PmtInf > DrctDbtTxInf > DbtrAcct > Id > IBAN','IBAN related to customer',1,'BankIBAN','','',1,0,1,'34',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-858','','Customer bank account number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Bank account number','PmtInf > DrctDbtTxInf > DbtrAcct > Id > Othr > Id','Bank account number related to customer',1,'AccountNum','','',1,0,1,'10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-GB-AR','SEPA-858','','Customer Invoice Number','AR > Journal> Payments > Payment Journal> New > Lines > Overview Tab > Invoice','PmtInf > DrctDbtTxInf > RmtInf > RfrdDocInf > Nb','Customer Invoice Number','7','Invoice','','',1,'2','','80',0,1]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_CITICONNECT_XML_NL_AR</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_CITICONNECT_XML_NL_AR()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NL-AR','SEPA-933','','Creditor Country','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Country/region','PmtInf > Cdtr > PstlAdr > Ctry','Country related to Legal entity','17','CountryRegionId','','',1,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NL-AR','SEPA-933','','Creditor street','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Street','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','Street','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NL-AR','SEPA-933','','Creditor postal code','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Zip/postal code','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','Zipcode','','',1,'','','',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NL-AR','SEPA-933','','Creditor city','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > City','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','City','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NL-AR','SEPA-933','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab)> IBAN','PmtInf > CdtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',1,0,1,'34',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NL-AR','SEPA-933','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',1,0,1,'10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NL-AR','SEPA-933','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > CdtrAgt >  FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,'2','8','11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NL-AR','SEPA-933','','Customer Bank Swift number','TAS > Common > Customer eBanking details> Customer bank accounts > General tab > Additional identification (fast tab) > Swift No','PmtInf > DrctDbtTxInf > DbtrAgt >  FinInstnId > BIC','Swift code related to Customer',1,'SWIFTNo','','',0,0,'8','11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NL-AR','SEPA-933','','Name','Accounts receivables > All customers > Select a customer > General (Fast tab) > Name','PmtInf > DrctDbtTxInf > Dbtr > Nm','Name related to customer','5','Name','','',0,0,1,'70',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NL-AR','SEPA-933','','Customer Country','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Country/region','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > Ctry','Country related to Legal entity','2','CountryRegionId','','',1,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NL-AR','SEPA-933','','Customer street','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Street','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Street','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NL-AR','SEPA-933','','Customer postal code','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Zip/postal code','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Zipcode','','',1,1,'','',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NL-AR','SEPA-933','','Customer city','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > City','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','City','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NL-AR','SEPA-933','','Customer bank IBAN number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Additional identification (fast tab)> IBAN','PmtInf > DrctDbtTxInf > DbtrAcct > Id > IBAN','IBAN related to customer',1,'BankIBAN','','',1,0,1,'34',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NL-AR','SEPA-933','','Customer bank account number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Bank account number','PmtInf > DrctDbtTxInf > DbtrAcct > Id > Othr > Id','Bank account number related to customer',1,'AccountNum','','',1,0,1,'10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NL-AR','SEPA-933','','Customer Invoice Number','AR > Journal> Payments > Payment Journal> New > Lines > Overview Tab > Invoice','PmtInf > DrctDbtTxInf > RmtInf > RfrdDocInf > Nb','Customer Invoice Number','7','Invoice','','',1,'2','','80',0,1]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_CITICONNECT_XML_NZ_AR</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_CITICONNECT_XML_NZ_AR()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NZ-AR','DD-830','','Creditor Country','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Country/region','PmtInf > Cdtr > PstlAdr > Ctry','Country related to Legal entity','17','CountryRegionId','','',1,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NZ-AR','DD-830','','Creditor street','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Street','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','Street','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NZ-AR','DD-830','','Creditor postal code','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Zip/postal code','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','Zipcode','','',1,1,'','',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NZ-AR','DD-830','','Creditor city','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > City','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','City','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NZ-AR','DD-830','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',0,0,1,'30',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NZ-AR','DD-830','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > CdtrAgt >  FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,'2','8','11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NZ-AR','DD-830','','Routing number','TAS > Common > Customer eBanking details> Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > DrctDbtTxInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','',0,0,1,'16',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NZ-AR','DD-830','','Name','Accounts receivables > All customers > Select a customer > General (Fast tab) > Name','PmtInf > DrctDbtTxInf > Dbtr > Nm','Name related to customer','5','Name','','',0,0,1,'70',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NZ-AR','DD-830','','Customer Country','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Country/region','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > Ctry','Country related to Legal entity','2','CountryRegionId','','',1,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NZ-AR','DD-830','','Customer street','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Street','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Street','','',0,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NZ-AR','DD-830','','Customer postal code','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Zip/postal code','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Zipcode','','',1,1,'','',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NZ-AR','DD-830','','Customer city','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > City','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','City','','',0,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NZ-AR','DD-830','','Customer bank account number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Bank account number','PmtInf > DrctDbtTxInf > DbtrAcct > Id > Othr > Id','Bank account number related to customer',1,'AccountNum','','',0,0,1,'30',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-NZ-AR','DD-830','','Customer Invoice Number','AR > Journal> Payments > Payment Journal> New > Lines > Overview Tab > Invoice','PmtInf > DrctDbtTxInf > RmtInf > Ustrd','Customer Invoice Number','7','Invoice','','',1,'2','','35',0,1]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_CITICONNECT_XML_PL_AR</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_CITICONNECT_XML_PL_AR()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-PL-AR','DD-327','','Creditor Country','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Country/region','PmtInf > Cdtr > PstlAdr > Ctry','Country related to Legal entity','17','CountryRegionId','','',1,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-PL-AR','DD-327','','Creditor street','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Street','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','Street','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-PL-AR','DD-327','','Creditor postal code','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Zip/postal code','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','Zipcode','','',1,1,'','',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-PL-AR','DD-327','','Creditor city','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > City','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','City','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-PL-AR','DD-327','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',0,0,1,'10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-PL-AR','DD-327','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > CdtrAgt >  FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,'2','8','11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-PL-AR','DD-327','','Routing number','TAS > Common > Customer eBanking details> Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > DrctDbtTxInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','',0,0,1,'8',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-PL-AR','DD-327','','Customer bank Country','Customer eBanking details > Select a customer > Customer bank accounts > Address > Country/region','PmtInf > DrctDbtTxInf > DbtrAgt > PstlAdr > Ctry','Country related to Legal entity','8','CountryRegionId','','',0,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-PL-AR','DD-327','','Name','Accounts receivables > All customers > Select a customer > General (Fast tab) > Name','PmtInf > DrctDbtTxInf > Dbtr > Nm','Name related to customer','5','Name','','',0,0,1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-PL-AR','DD-327','','Customer Country','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Country/region','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > Ctry','Country related to Legal entity','2','CountryRegionId','','',1,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-PL-AR','DD-327','','Customer street','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Street','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Street','','',0,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-PL-AR','DD-327','','Customer postal code','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Zip/postal code','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Zipcode','','',1,1,'','',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-PL-AR','DD-327','','Customer city','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > City','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','City','','',0,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-PL-AR','DD-327','','Customer bank account number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Bank account number','PmtInf > DrctDbtTxInf > DbtrAcct > Id > Othr > Id','Bank account number related to customer',1,'AccountNum','','',0,0,1,'26',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-PL-AR','DD-327','','Customer Invoice Number','AR > Journal> Payments > Payment Journal> New > Lines > Overview Tab > Invoice','PmtInf > DrctDbtTxInf > RmtInf > RfrdDocInf > Nb','Customer Invoice Number','7','Invoice','','',1,'2','','80',0,1]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_CITICONNECT_XML_ZA_AR</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_CITICONNECT_XML_ZA_AR()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ZA-AR','DD-800','','Creditor Country','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Country/region','PmtInf > Cdtr > PstlAdr > Ctry','Country related to Legal entity','17','CountryRegionId','','',1,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ZA-AR','DD-800','','Creditor street','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Street','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','Street','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ZA-AR','DD-800','','Creditor postal code','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Zip/postal code','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','Zipcode','','',1,1,'','',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ZA-AR','DD-800','','Creditor city','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > City','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','City','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ZA-AR','DD-800','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',0,0,'10','10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ZA-AR','DD-800','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > CdtrAgt >  FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,'2','8','11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ZA-AR','DD-800','','Routing number','TAS > Common > Customer eBanking details> Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > DrctDbtTxInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','',0,0,'6','6',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ZA-AR','DD-800','','Name','Accounts receivables > All customers > Select a customer > General (Fast tab) > Name','PmtInf > DrctDbtTxInf > Dbtr > Nm','Name related to customer','5','Name','','',0,0,1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ZA-AR','DD-800','','Customer Country','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Country/region','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > Ctry','Country related to Legal entity','2','CountryRegionId','','',1,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ZA-AR','DD-800','','Customer street','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Street','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Street','','',0,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ZA-AR','DD-800','','Customer postal code','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Zip/postal code','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Zipcode','','',1,1,'','',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ZA-AR','DD-800','','Customer city','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > City','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','City','','',0,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ZA-AR','DD-800','','Customer bank account number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Bank account number','PmtInf > DrctDbtTxInf > DbtrAcct > Id > Othr > Id','Bank account number related to customer',1,'AccountNum','','',0,0,1,'13',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-ZA-AR','DD-800','','Customer Invoice Number','AR > Journal> Payments > Payment Journal> New > Lines > Overview Tab > Invoice','PmtInf > DrctDbtTxInf > RmtInf > RfrdDocInf > Nb','Customer Invoice Number','7','Invoice','','',1,'2','','80',0,1]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_CITICONNECT_XML_DE_AR</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_CITICONNECT_XML_DE_AR()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-858','','Creditor Country','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Country/region','PmtInf > Cdtr > PstlAdr > Ctry','Country related to Legal entity','17','CountryRegionId','','',1,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-858','','Creditor street','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Street','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','Street','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-858','','Creditor postal code','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Street','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','Zipcode','','',1,1,'','',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-858','','Creditor city','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Street','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','City','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-858','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab)> IBAN','PmtInf > CdtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',1,0,1,'34',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-858','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',1,0,1,'10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-858','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > CdtrAgt >  FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,'2','8','11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-858','','Customer Bank Swift number','TAS > Common > Customer eBanking details> Customer bank accounts > General tab > Additional identification (fast tab) > Swift No','PmtInf > DrctDbtTxInf > DbtrAgt >  FinInstnId > BIC','Swift code related to Customer',1,'SWIFTNo','','',0,0,'8','11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-858','','Name','Accounts receivables > All customers > Select a customer > General (Fast tab) > Name','PmtInf > DrctDbtTxInf > Dbtr > Nm','Name related to customer','5','Name','','',0,0,1,'70',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-858','','Customer Country','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Country/region','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > Ctry','Country related to Legal entity','2','CountryRegionId','','',1,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-858','','Customer street','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Street','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Street','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-858','','Customer postal code','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Street','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Zipcode','','',1,1,'','',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-858','','Customer city','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Street','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','City','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-858','','Customer bank IBAN number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Additional identification (fast tab)> IBAN','PmtInf > DrctDbtTxInf > DbtrAcct > Id > IBAN','IBAN related to customer',1,'BankIBAN','','',1,0,1,'34',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-858','','Customer bank account number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Bank account number','PmtInf > DrctDbtTxInf > DbtrAcct > Id > Othr > Id','Bank account number related to customer',1,'AccountNum','','',1,0,1,'10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-858','','Customer Invoice Number','AR > Journal> Payments > Payment Journal> New > Lines > Overview Tab > Invoice','PmtInf > DrctDbtTxInf > RmtInf > RfrdDocInf > Nb','Customer Invoice Number','7','Invoice','','',1,'2','','80',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-933','','Creditor Country','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Country/region','PmtInf > Cdtr > PstlAdr > Ctry','Country related to Legal entity','17','CountryRegionId','','',1,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-933','','Creditor street','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Street','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','Street','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-933','','Creditor postal code','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Street','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','Zipcode','','',1,1,'','',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-933','','Creditor city','Organization administration > Setup > Organization > Legal entities > Address (fast tab) > edit > Street','PmtInf > Cdtr > PstlAdr > AdrLine','Address related to Legal entity','17','City','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-933','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab)> IBAN','PmtInf > CdtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',1,0,1,'34',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-933','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',1,0,1,'10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-933','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > CdtrAgt >  FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,'2','8','11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-933','','Customer Bank Swift number','TAS > Common > Customer eBanking details> Customer bank accounts > General tab > Additional identification (fast tab) > Swift No','PmtInf > DrctDbtTxInf > DbtrAgt >  FinInstnId > BIC','Swift code related to Customer',1,'SWIFTNo','','',0,0,'8','11',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-933','','Name','Accounts receivables > All customers > Select a customer > General (Fast tab) > Name','PmtInf > DrctDbtTxInf > Dbtr > Nm','Name related to customer','5','Name','','',0,0,1,'70',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-933','','Customer Country','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Country/region','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > Ctry','Country related to Legal entity','2','CountryRegionId','','',1,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-933','','Customer street','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Street','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Street','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-933','','Customer postal code','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Street','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Zipcode','','',1,1,'','',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-933','','Customer city','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Street','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','City','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-933','','Customer bank IBAN number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Additional identification (fast tab)> IBAN','PmtInf > DrctDbtTxInf > DbtrAcct > Id > IBAN','IBAN related to customer',1,'BankIBAN','','',1,0,1,'34',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-933','','Customer bank account number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Bank account number','PmtInf > DrctDbtTxInf > DbtrAcct > Id > Othr > Id','Bank account number related to customer',1,'AccountNum','','',1,0,1,'10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CITICONNECT-XML-DE-AR','SEPA-933','','Customer Invoice Number','AR > Journal> Payments > Payment Journal> New > Lines > Overview Tab > Invoice','PmtInf > DrctDbtTxInf > RmtInf > RfrdDocInf > Nb','Customer Invoice Number','7','Invoice','','',1,'2','','80',0,1]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML-AR','AcctTp','Beneficiary Account Type']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData</Name>
				<Source><![CDATA[
    protected container getFormatLookupsMetaData(str _formatID)
    {
        container   formatLookupsList;

        //Metadata column names of data elements

        switch (_formatID)
        {
        }

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML-AR','*','FormatValidations','*','3','MarkedInvoice']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>