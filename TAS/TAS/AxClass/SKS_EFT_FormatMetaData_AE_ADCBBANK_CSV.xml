<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_AE_ADCBBANK_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_AE_ADCBBANK_CSV Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_AE_ADCBBANK_CSV Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220112';
        dataContractVersion = '1.0';
        conFormatID = ['AE-ADCBBANK-CSV'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'AE - ADCB BANK - CSV',0,'','','AE-ADCBBANK-CSV',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'AE-ADCBBANK-CSV',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('AE-ADCBBANK-CSV'):
                paymSpecList = this.getPaymSpecsMetaData_AE_ADCBBANK_CSV();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_AE_ADCBBANK_CSV</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_AE_ADCBBANK_CSV()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,0,0,0,'',0,0,0,0,0,'Internal Fund Transfer (IFT)',1,'IFT','','IFT','TRADE PAY',0,'AE-ADCBBANK-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'External Fund Transfer – Domestic  AED(EFD)',1,'EFD','','EFD','TRADE PAY',0,'AE-ADCBBANK-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'External Fund Transfer – FCY (EFI)',1,'EFI','','EFI','TRADE PAY',0,'AE-ADCBBANK-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('AE-ADCBBANK-CSV'):
                notesList = this.getNotesMetaData_AE_ADCBBANK_CSV();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_AE_ADCBBANK_CSV</Name>
				<Source><![CDATA[
    private container getNotesMetaData_AE_ADCBBANK_CSV()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['AE-ADCBBANK-CSV','IFT','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['AE-ADCBBANK-CSV','EFD','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['AE-ADCBBANK-CSV','EFI','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('AE-ADCBBANK-CSV'):
                validationsList = this.getValidationsMetaData_AE_ADCBBANK_CSV();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_AE_ADCBBANK_CSV</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_AE_ADCBBANK_CSV()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','IFT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field No.3 > Debit Account Number / IBAN ','Bank account number',0,'AccountNum','','',0,0,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','IFT','','Beneficiary Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Field No.7 > Beneficiary Name','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','IFT','','Beneficiary Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field No.8 > Beneficiary Address 1','Address related to vendor','16','WBeneAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','IFT','','Beneficiary Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Field No.9 > Beneficiary Address 2','Address related to vendor','16','WBeneAddr2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','IFT','','Beneficiary Address 3','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Field No.10 > Beneficiary Address 3','City related to vendor','16','WBeneCity','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','IFT','','Beneficiary Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Beneficiary Account Number','Account Number related to vendor','9','AccountNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','IFT','','Vendor Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','Field No.12 > Beneficiary Bank Name','Vendor Bank Name','16','WBenBankName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','IFT','','Vendor Branch Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Branch','Field No.13 > Beneficiary Bank Address 1 (Branch)','Beneficiary Branch Name','16','WBenBankBranch','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','IFT','','Vendor Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Address','Field No.14 > Beneficiary Bank Address 2','Beneficiary Bank Address','16','WBenBankAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','IFT','','Vendor Bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > City','Field No.15 > Beneficiary Bank Address 3','Beneficiary Bank City','16','WBenBankCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','IFT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank Name','P46 >Record Position(6-38)','Intermediary Bank Name','16','WIntBankName','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','IFT','','Branch','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Branch','Field No.23 > Intermediary Bank Address 1 (Branch)','Branch','16','WIntBankBranch','','',1,0,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','IFT','','Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address','Field No.24 > Intermediary Bank Address 2','Intermediary Bank Address related to vendor','16','WIntBankAddr','','',1,0,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','IFT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address 2','Field No.25 > Intermediary Bank Address 3','Intermediary Bank Address related to vendor','16','WIntBankAddr2','','',1,0,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','IFT','','Swift code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','Field No.26 > Intermediary Bank SWIFT Code','Intermediary Bank Sort (ID) Code','16','WIntBankSwift','','',1,0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','IFT','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Field No.30 > Bene Bank Sort/ABA/NEFT Code','Routing number related to Vendor','9','RegistrationNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','IFT','','Vendor bank Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','Field No.30 > Bene Bank Sort/ABA/NEFT Code','Swift Code related to Vendor','9','SWIFTNo','','',1,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','IFT','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','Field No.30 > Bene Bank Sort/ABA/NEFT Code','IBAN related to vendor','9','BankIBAN','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFD','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field No.3 > Debit Account Number / IBAN ','Bank account number',0,'AccountNum','','',0,0,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFD','','Beneficiary Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Field No.7 > Beneficiary Name','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFD','','Beneficiary Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field No.8 > Beneficiary Address 1','Address related to vendor','16','WBeneAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFD','','Beneficiary Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Field No.9 > Beneficiary Address 2','Address related to vendor','16','WBeneAddr2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFD','','Beneficiary Address 3','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Field No.10 > Beneficiary Address 3','City related to vendor','16','WBeneCity','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFD','','Beneficiary Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Beneficiary Account Number','Account Number related to vendor','9','AccountNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFD','','Vendor Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','Field No.12 > Beneficiary Bank Name','Vendor Bank Name','16','WBenBankName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFD','','Vendor Branch Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Branch','Field No.13 > Beneficiary Bank Address 1 (Branch)','Beneficiary Branch Name','16','WBenBankBranch','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFD','','Vendor Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Address','Field No.14 > Beneficiary Bank Address 2','Beneficiary Bank Address','16','WBenBankAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFD','','Vendor Bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > City','Field No.15 > Beneficiary Bank Address 3','Beneficiary Bank City','16','WBenBankCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFD','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank Name','P46 >Record Position(6-38)','Intermediary Bank Name','16','WIntBankName','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFD','','Branch','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Branch','Field No.23 > Intermediary Bank Address 1 (Branch)','Branch','16','WIntBankBranch','','',1,0,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFD','','Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address','Field No.24 > Intermediary Bank Address 2','Intermediary Bank Address related to vendor','16','WIntBankAddr','','',1,0,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFD','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address 2','Field No.25 > Intermediary Bank Address 3','Intermediary Bank Address related to vendor','16','WIntBankAddr2','','',1,0,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFD','','Swift code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','Field No.26 > Intermediary Bank SWIFT Code','Intermediary Bank Sort (ID) Code','16','WIntBankSwift','','',1,0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFD','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Field No.30 > Bene Bank Sort/ABA/NEFT Code','Routing number related to Vendor','9','RegistrationNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFD','','Vendor bank Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','Field No.30 > Bene Bank Sort/ABA/NEFT Code','Swift Code related to Vendor','9','SWIFTNo','','',1,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFD','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','Field No.30 > Bene Bank Sort/ABA/NEFT Code','IBAN related to vendor','9','BankIBAN','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFI','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field No.3 > Debit Account Number / IBAN ','Bank account number',0,'AccountNum','','',0,0,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFI','','Beneficiary Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Field No.7 > Beneficiary Name','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFI','','Beneficiary Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field No.8 > Beneficiary Address 1','Address related to vendor','16','WBeneAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFI','','Beneficiary Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Field No.9 > Beneficiary Address 2','Address related to vendor','16','WBeneAddr2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFI','','Beneficiary Address 3','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Field No.10 > Beneficiary Address 3','City related to vendor','16','WBeneCity','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFI','','Beneficiary Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Beneficiary Account Number','Account Number related to vendor','9','AccountNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFI','','Vendor Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','Field No.12 > Beneficiary Bank Name','Vendor Bank Name','16','WBenBankName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFI','','Vendor Branch Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Branch','Field No.13 > Beneficiary Bank Address 1 (Branch)','Beneficiary Branch Name','16','WBenBankBranch','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFI','','Vendor Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Address','Field No.14 > Beneficiary Bank Address 2','Beneficiary Bank Address','16','WBenBankAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFI','','Vendor Bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > City','Field No.15 > Beneficiary Bank Address 3','Beneficiary Bank City','16','WBenBankCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFI','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank Name','P46 >Record Position(6-38)','Intermediary Bank Name','16','WIntBankName','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFI','','Branch','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Branch','Field No.23 > Intermediary Bank Address 1 (Branch)','Branch','16','WIntBankBranch','','',1,0,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFI','','Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address','Field No.24 > Intermediary Bank Address 2','Intermediary Bank Address related to vendor','16','WIntBankAddr','','',1,0,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFI','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address 2','Field No.25 > Intermediary Bank Address 3','Intermediary Bank Address related to vendor','16','WIntBankAddr2','','',1,0,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFI','','Swift code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','Field No.26 > Intermediary Bank SWIFT Code','Intermediary Bank Sort (ID) Code','16','WIntBankSwift','','',1,0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFI','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Field No.30 > Bene Bank Sort/ABA/NEFT Code','Routing number related to Vendor','9','RegistrationNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFI','','Vendor bank Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','Field No.16 > Bene Bank Sort/ABA/NEFT Code','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-ADCBBANK-CSV','EFI','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','Field No.30 > Bene Bank Sort/ABA/NEFT Code','IBAN related to vendor','9','BankIBAN','','',1,1,'','',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['AE-ADCBBANK-CSV','RemittanceCode','Remittance code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['AE-ADCBBANK-CSV','ChrgBr','Charges']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-ADCBBANK-CSV','RemittanceCode','Corporate Card Payments','CCP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-ADCBBANK-CSV','RemittanceCode','Credit Card Payment','CRP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-ADCBBANK-CSV','RemittanceCode','Debit Card Payment','DCP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-ADCBBANK-CSV','RemittanceCode','Mobile Wallet Card Cash-In','MWI']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-ADCBBANK-CSV','RemittanceCode','Mobile Wallet Card Cash-Out','MWO']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-ADCBBANK-CSV','RemittanceCode','Mobile Wallet Card Payments','MWP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-ADCBBANK-CSV','RemittanceCode','POS Merchant Settlement','POS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-ADCBBANK-CSV','RemittanceCode','Stored Value Card Cash-In','SVI']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-ADCBBANK-CSV','RemittanceCode','Stored Value Card Cash-Out','SVO']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-ADCBBANK-CSV','RemittanceCode','Stored Value Card Payments','SVP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-ADCBBANK-CSV','RemittanceCode','Agency Commissions','ACM']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-ADCBBANK-CSV','RemittanceCode','Air Transport','ATS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-ADCBBANK-CSV','RemittanceCode','Intellectual Property Royalties','IPC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-ADCBBANK-CSV','RemittanceCode','Commission','COM']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-ADCBBANK-CSV','RemittanceCode','Compensation','COP']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-ADCBBANK-CSV','ChrgBr','OUR','OUR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-ADCBBANK-CSV','ChrgBr','SHA','SHA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-ADCBBANK-CSV','ChrgBr','BEN','BEN']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('AE-ADCBBANK-CSV'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_AE_ADCBBANK_CSV();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_AE_ADCBBANK_CSV</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_AE_ADCBBANK_CSV()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AE-ADCBBANK-CSV','AE-ADCBBANK-CSV','IFT','RemittanceCode','Remittance Code',0,'RemittanceCode','',1,'','','Remittance Code']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AE-ADCBBANK-CSV','AE-ADCBBANK-CSV','EFD','RemittanceCode','Remittance Code',0,'RemittanceCode','',1,'','','Remittance Code']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AE-ADCBBANK-CSV','AE-ADCBBANK-CSV','EFI','RemittanceCode','Remittance Code',0,'RemittanceCode','',1,'','','Remittance Code']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AE-ADCBBANK-CSV','AE-ADCBBANK-CSV','IFT','ChrgBr','Charges',0,'ChrgBr','',1,'','','Charges']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AE-ADCBBANK-CSV','AE-ADCBBANK-CSV','EFD','ChrgBr','Charges',0,'ChrgBr','',1,'','','Charges']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AE-ADCBBANK-CSV','AE-ADCBBANK-CSV','EFI','ChrgBr','Charges',0,'ChrgBr','',1,'','','Charges']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AE-ADCBBANK-CSV','*','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AE-ADCBBANK-CSV','*','FormatValidations','*','16','WChargesIndic']);

        return deleteList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'AE-ADCBBANK-CSV':
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('ChrgBr', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>