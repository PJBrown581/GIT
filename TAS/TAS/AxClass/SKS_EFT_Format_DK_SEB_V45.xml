<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_DK_SEB_V45</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_DK_SEB_V45 extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_DK_SEB_V45 extends SKS_EFT_Format
{
    #define.FormatVersion('20220429')
    int mPaymentCount;
    AmountMST mPaymentAmount;
    #define.Comma(',')
    #define.DoubleQuote('"')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>appendField</Name>
				<Source><![CDATA[
    private str appendField(str _field = '', boolean _commaDelimit = true)
        {
        if(_commaDelimit)
        {
            return #DoubleQuote + _field + #DoubleQuote + #Comma;
        }
        else
        {
            return #DoubleQuote + _field + #DoubleQuote;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        ;
    
        // Format header
        this.rec_Header();
    
        while(mSKS_EFT_FileDetail)
        {
            // Detail lines
            this.rec_Payment();
    
            next mSKS_EFT_FileDetail;
        }
    
        // Format trailer
        this.rec_Trailer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Header</Name>
				<Source><![CDATA[
    //Nbr   Description                         Comment
    //1     Payment type (14)
    //2     Formation date (8)
    //3     Blank (90)
    //4     Blank (255)
    //5     Blank (255)
    //6     Blank (255)
    //7     <CR><LF>
    
    boolean rec_Header()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        //1 Payment type (14)
        sb.Append(this.appendField('IB000000000000'));
    
        //2 Formation date (8)
        sb.Append(this.appendField(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_File.EffectiveDate)));
    
        //3 Blank (90)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(90, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //4 Blank (255)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(255, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //5 Blank (255)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(255, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //6 Blank (255)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(255, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right), false));
    
        this.fileWrite(sb.ToString());
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Payment</Name>
				<Source><![CDATA[
    //Nbr   Description                         Comment
    //1     Trans-type (14)
    //2     Index (4)
    //3     Execution date (8)
    //4     Amount (13)
    //5     Currency (3)
    //6     Fra-type (1)
    //7     Account number(sender) (15)
    //8     Transfer method (1)
    //9     Clearing number(recipient) (4)
    //10    Account number(recipient) (10)
    //11    Advising type (1)
    //12    Entry text (35)
    //13    Name of recipient (32)
    //14    Address of recipient (32)
    //15    Address of recipient 2 (32)
    //16    Postal number of recipient (4)
    //17    City of recipient (32)
    //18    Senders payment identification (35)
    //19    Payment details to recipient (35)
    //20-27 Not Used (280)
    //28    Blank (1)
    //29    Blank (215)
    //30    <CR><LF>
    
    boolean rec_Payment()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        AmountMST amt;
        ;
    
        //1 Trans-type (14)
        sb.Append(this.appendField('IB030202000005'));
    
        //2 Index (4)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(4, '1', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));
    
        //3 Execution date (8)
        sb.Append(this.appendField(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_File.EffectiveDate)));
    
        //4 Amount (13)
        amt = mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1;
        sb.Append(#DoubleQuote);
        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(amt), 13));
        if(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur <= 0)
        {
            sb.Append('+');
        }
        else if (mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur > 0)
        {
            sb.Append('-');
        }
        sb.Append(#DoubleQuote);
        sb.Append(#Comma);
    
        //5 Currency (3)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(3, mSKS_EFT_FileDetail.PaymentCurrencyCode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //6 Fra-type (1)
        sb.Append(this.appendField('2'));
    
        //7 Account number(sender) (15)
        sb.Append(#DoubleQuote);
        sb.Append('0');
        sb.Append(SKS_PP_StringFormats::strFill(4, mSKS_EFT_FileDetail.BankBankTransit, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_EFT_FileDetail.BankBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(#DoubleQuote);
        sb.Append(#Comma);
    
        //8 Transfer method (1)
        sb.Append(this.appendField('2'));
    
        //9 Clearing number(recipient) (4)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(4, mSKS_EFT_FileDetail.DepBankTransit, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));
    
        //10 Account number(recipient) (10)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(10, mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));
    
        //11 Advising type (1)
        sb.Append(this.appendField('0'));
    
        //12 Entry text (35)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //13 Name of recipient (32)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(32, mSKS_EFT_FileDetail.AccountName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //14 Address of recipient (32)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(32, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //15 Address of recipient 2 (32)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(32, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //16 Postal number of recipient (4)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //17 City of recipient (32)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(32, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //18 Senders payment identification (35)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //19 Payment details to recipient (35)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_FileDetail.FileACHCompanyName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //20 Blank (35)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //21 Blank (35)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //22 Blank (35)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //23 Blank (35)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //24 Blank (35)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //25 Blank (35)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //26 Blank (35)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //27 Blank (35)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //28 Blank (1)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //29 Blank (215)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(215, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right), false));
    
        this.fileWrite(sb.ToString());
    
        mPaymentCount++;
        mPaymentAmount += amt;
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Trailer</Name>
				<Source><![CDATA[
    //Nbr   Description                         Comment
    //1     Payment type (14)
    //2     Formation date (8)
    //3     Payment count (6)
    //4     Amount total (13)
    //5     Blank (64)
    //6     Blank (255)
    //7     Blank (255)
    //8     Blank (255)
    //9     <CR><LF>
    
    boolean rec_Trailer()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        //1 Payment type (14)
        sb.Append(this.appendField('IB999999999999'));
    
        //2 Formation date (8)
        sb.Append(this.appendField(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_File.EffectiveDate)));
    
        //3 Payment count (6)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(6, num2str(mPaymentCount,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));
    
        //4 Amount total (13)
        sb.Append(#DoubleQuote);
        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(mPaymentAmount), 13));
        if(mPaymentAmount >= 0)
        {
            sb.Append('+');
        }
        else if(mPaymentAmount < 0)
        {
            sb.Append('-');
        }
        sb.Append(#DoubleQuote);
        sb.Append(#Comma);
    
        //5 Blank (64)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(64, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //6 Blank (255)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(255, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //7 Blank (255)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(255, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        //8 Blank (255)
        sb.Append(this.appendField(SKS_PP_StringFormats::strFill(255, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right), false));
    
        this.fileWrite(sb.ToString());
    
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>