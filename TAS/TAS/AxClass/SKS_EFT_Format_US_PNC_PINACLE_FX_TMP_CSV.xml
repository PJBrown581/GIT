<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_PNC_PINACLE_FX_TMP_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_PNC_PINACLE_FX_TMP_CSV extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_US_PNC_PINACLE_FX_TMP_CSV Extends SKS_EFT_Format
{
    #define.FormatVersion('20220706')
    #define.Separator(',')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            this.rec_Detail();

            next mSKS_EFT_FileDetail;

        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Detail</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_Detail
    /// </summary>
    /// <returns>true</returns>
    boolean rec_Detail()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        //1 currency
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.CurrencyCode,3));

        //2 currency
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.CurrencyCode,3));

        //  3       Amount
        sb.Append(this.wrapField(num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 0, 2, 1, 0)));

        //  4 supplier id
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.AccountNum + mSKS_EFT_FileDetail.AccountCompany, 1, 34)));

        //  5       bank Account
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.BankBankAcct, 1, 34)));

        //  6       payment  Date
        sb.Append(this.wrapField(SKS_PP_StringFormats::strDateMMDDYYYY(mSKS_EFT_FileDetail.PaymentTransDate, DateSeparator::Slash), false, false));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '',  boolean _Quote = false, boolean _addSeparator = true)
    {
        if(_addSeparator)
        {
            if(_Quote && _field != '' || _Quote == true)
            {
                return strReplace(_field, ',', ' ') + #Separator;
            }
            else
            {
                return _field + #Separator;
            }
        }
        else
        {
            if(_Quote && _field != '' || _Quote == true)
            {
                return strReplace(_field, ',', ' ');
            }
            else
            {
                return _field;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
              order by mSKS_EFT_FileDetail.PaymentCompany, //SKS_VSTS_12798
                   mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>