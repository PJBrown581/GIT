<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_SCF_Format_PrimeRevenue</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_SCF_Format_PrimeRevenue extends SKS_SCF_Format
{
    str buyerIdentification;
    str originName;
    str supplRefnum;
    int batchCount, totBatchCount, recordcount, batchnumber;
    real sumofBatchAmount, sumofTotFileamount;
    SKS_EFT_SequenceNumber mSequenceNumber;


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getSequence</Name>
				<Source><![CDATA[
    private void getSequence()
    {
        SKS_SCF_FileCreationNumber  FileCreationNumber;

        if(mSKS_SCF_InvoiceFileFormat)
        {
            //Get Next Sequence Number
            select firstonly forupdate FileCreationNumber
                order by FileCreationNumber.RecId desc
                where FileCreationNumber.SKS_SCF_FormatId == mSKS_SCF_InvoiceFileFormat.FormatId
                && FileCreationNumber.OrigId == mSKS_SCF_File.ProviderID
                && FileCreationNumber.TransferDate == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone());

            if(FileCreationNumber)
            {
                if(FileCreationNumber.LastValue < 9)
                {
                    ttsbegin;
                    FileCreationNumber.lastValue += 1;
                    FileCreationNumber.update();
                    ttscommit;
                    mSequenceNumber = FileCreationNumber.LastValue;
                }
                else
                {
                    ttsbegin;
                    FileCreationNumber.SKS_SCF_FormatId = mSKS_SCF_InvoiceFileFormat.FormatId;
                    FileCreationNumber.OrigId = mSKS_SCF_File.ProviderID;
                    FileCreationNumber.lastValue =  0;
                    FileCreationNumber.TransferDate = DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone());
                    FileCreationNumber.insert();
                    ttscommit;
                    mSequenceNumber = FileCreationNumber.LastValue;
                }
            }
            else
            {
                ttsbegin;
                FileCreationNumber.SKS_SCF_FormatId = mSKS_SCF_InvoiceFileFormat.FormatId;
                FileCreationNumber.OrigId = mSKS_SCF_File.ProviderID;
                FileCreationNumber.lastValue =  0;
                FileCreationNumber.TransferDate = DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone());
                FileCreationNumber.insert();
                ttscommit;
                mSequenceNumber = FileCreationNumber.LastValue;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtFormatHeader</Name>
				<Source><![CDATA[
    protected str txtFormatHeader()
    {
        SKS_SCF_Provider lSKS_SCF_Provider;
        SKS_SCF_FileFormatAdditionalOptions lSKS_SCF_FileFormatAdditionalOptions;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        this.getSequence();
        recordcount++;

        // Record Type Code
        sb.Append('FH');

        lSKS_SCF_Provider = SKS_SCF_Provider::find(mSKS_SCF_File.ProviderID);

        lSKS_SCF_FileFormatAdditionalOptions = SKS_SCF_FileFormatAdditionalOptions::find(mSKS_SCF_FileDetail.FormatId);

        // Buyer Identification
        buyerIdentification = SKS_SCF_Format::getValueFromCode('BuyerId', mSKS_SCF_InvoiceFileFormat, lSKS_SCF_Provider.RecId);

        sb.Append(SKS_PP_StringFormats::strFill(15, buyerIdentification,SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // Buyer Reference Number
        sb.Append(SKS_PP_StringFormats::strFill(15, buyerIdentification,SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // File Creation Date
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));

        // File Creation Time
        sb.Append(SKS_PP_StringFormats::strTimeHHMM());

        // Field ID Modifier
        sb.Append(subStr(num2Str(mSequenceNumber, 0,0,0,0), 1, 1));

        // Destination Name
        sb.Append(SKS_PP_StringFormats::strFill(20, 'PrimeRevenue',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        originName = SKS_SCF_Format::getValueFromCode('OriginName', mSKS_SCF_InvoiceFileFormat, lSKS_SCF_Provider.RecId);

        // Origin Name
        sb.Append(SKS_PP_StringFormats::strFill(25, originName,SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // Reference Code
        sb.Append(SKS_PP_StringFormats::strFill(15, '',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupHeader</Name>
				<Source><![CDATA[
    protected str txtGroupHeader()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        batchnumber++;

        recordcount++;

        // Record Type Code
        sb.Append('BH');

        // Buyer Currency Code
        sb.Append(SKS_PP_StringFormats::strFill(25, mSKS_SCF_FileDetail.CurrencyCode,SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // Buyer Discretionary Data
        sb.Append(SKS_PP_StringFormats::strFill(20, '',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // Supplier Reference Number
        supplRefnum = mSKS_SCF_FileDetail.VendorAccount;

        sb.Append(SKS_PP_StringFormats::strFill(35, supplRefnum,SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // Supplier Name
        sb.Append(SKS_PP_StringFormats::strFill(35, mSKS_SCF_FileDetail.VendName,SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // Batch Number
        sb.Append(SKS_PP_StringFormats::strFill(7, num2Str(batchnumber, 0,0,0,0),SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        recordcount++;

        sumofBatchAmount += this.getPositiveAmount(mSKS_SCF_FileDetail.Amount);
        batchCount++;

        // Record Type Code
        if(mSKS_SCF_FileDetail.Amount < 0)
        {
            sb.Append('CM');
        }
        else
        {
            sb.Append('PO');
        }

        // Buyer Identification
        sb.Append(SKS_PP_StringFormats::strFill(15, buyerIdentification,SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // Supplier Reference Number
        sb.Append(SKS_PP_StringFormats::strFill(35, mSKS_SCF_FileDetail.VendorAccount,SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // Original Invoice Date
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(mSKS_SCF_FileDetail.InvoiceDate));

        // Obligation / Credit Amount
        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(mSKS_SCF_FileDetail.Amount), 18));

        // Maturity / Effective Date
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(mSKS_SCF_FileDetail.DueDate));
        
        // Description
        sb.Append(SKS_PP_StringFormats::strFill(50, '',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // Payment Obligation / Credit Memo Reference
        sb.Append(SKS_PP_StringFormats::strFill(50, mSKS_SCF_FileDetail.Invoice,SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // Buyer Unique Doc ID
        sb.Append(SKS_PP_StringFormats::strFill(100, mSKS_SCF_FileDetail.Invoice,SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // Buyer Due Date / Forecast Date
        sb.Append(SKS_PP_StringFormats::strFill(6, '',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // Attached Document Indication
        sb.Append('000');
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupTrailer</Name>
				<Source><![CDATA[
    protected str txtGroupTrailer()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        recordcount++;

        totBatchCount++;

        sumofTotFileamount += sumofBatchAmount;

        // Record Type Code
        sb.Append('BC');

        // Entry Detail Count
        sb.Append(SKS_PP_StringFormats::strFill(6, num2Str(batchCount, 0,0,0,0),SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // Total Obligation Amount
        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(sumofBatchAmount), 22));

        // Supplier Reference Number
        sb.Append(SKS_PP_StringFormats::strFill(35, supplRefnum,SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // Batch Number
        sb.Append(SKS_PP_StringFormats::strFill(7, num2Str(batchnumber, 0,0,0,0),SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        sumofBatchAmount = 0;
        batchCount = 0;

        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtFormatTrailer</Name>
				<Source><![CDATA[
    protected str txtFormatTrailer()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        recordcount++;

        // Record Type Code
        sb.Append('FC');

        // Batch Count
        sb.Append(SKS_PP_StringFormats::strFill(6, num2Str(totBatchCount, 0,0,0,0),SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // Record Count
        sb.Append(SKS_PP_StringFormats::strFill(6, num2Str(recordcount, 0,0,0,0),SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // Total Obligation Amount
        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(sumofTotFileamount), 22));

        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>