<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_LedgerDimensionAccountController</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SKS_LedgerDimensionAccountController extends LedgerDimensionAccountController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadLookupData</Name>
				<Source><![CDATA[
    public void loadLookupData(Array _elements, int _currentSegment, AutoCompleteDataMode _autoCompleteMode, str _filterValue, str _lastPagedValue, str _lastPagedTag)
    {
        boolean                     pagingAliases;
        DimensionAttributeRecId     dimensionAttributeId;
        int                         numberPaged;
        DataAreaId                  originalCompany;
        DimensionControlInfo        state = this.getLastProcessedState();
        boolean                     otherSegmentsExist;
        int                         i;
        DimensionControlSegment     segment;

        originalCompany = curext();

        changecompany(dataAreaId)
        {
            if (_elements == null || state == null)
            {
                throw error(Error::wrongUseOfFunction(funcName()));
            }
            
            // Get the dimension attribute backing the segment
            dimensionAttributeId = state.getDimensionAttributeByIndex(_currentSegment).RecId;

            // If we are not paging aliases yet, then do the value query since aliases
            // are paged at the end
            if (!_lastPagedValue && dimensionAttributeId)
            {
                // Both all values and valid values lists come from the database
                numberPaged = this.getAutoCompleteDataFromDatabase(
                    _elements,
                    _autocompleteMode,
                    _filterValue,
                    dimensionAttributeId,
                    _lastPagedValue,
                    _currentSegment,
                    originalCompany);
            }

        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>