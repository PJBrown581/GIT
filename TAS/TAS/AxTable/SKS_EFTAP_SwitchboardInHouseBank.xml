<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFTAP_SwitchboardInHouseBank</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SKS_EFTAP_SwitchboardInHouseBank extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>lookupLegalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public static void lookupLegalEntity(FormControl _formControl)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(DataArea),_formControl);

        Query query = new Query();
        QueryBuildDataSource qbds;
        qbds = query.addDataSource(tableNum(DataArea));
        qbds.addOrderByField(fieldNum(DataArea,id),SortOrder::Descending);               

        sysTableLookup.addLookupfield(fieldNum(DataArea,id));
        sysTableLookup.addLookupfield(fieldNum(DataArea,name));
        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public static void lookupCurrency(FormControl _formControl, DataAreaId _company)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(Currency), _formControl);

        changecompany(_company)
        {
            Query query = new Query();
            QueryBuildDataSource qbds = query.addDataSource(tableNum(Currency));
            qbds.addOrderByField(fieldNum(Currency,CurrencyCode),SortOrder::Descending);

            sysTableLookup.addLookupfield(fieldNum(Currency, CurrencyCode));
            sysTableLookup.addLookupfield(fieldNum(Currency, Txt));
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupInHouseBank</Name>
				<Source><![CDATA[
    public static void lookupInHouseBank(FormControl _formControl, DataAreaId _company)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(BankAccountTable), _formControl);
        SKS_EFT_Setup sks_EFT_Setup = SKS_EFT_Setup::find();
        
        changecompany(curExt())
        {
            Query query = new Query();
            QueryBuildDataSource queryBuildDataSource = query.addDataSource(tableNum(BankAccountTable));
            queryBuildDataSource.addOrderByField(fieldNum(BankAccountTable, AccountID),SortOrder::Descending);
            queryBuildDataSource = queryBuildDataSource.addDataSource(tableNum(SKS_PP_Bank));
            queryBuildDataSource.joinMode(JoinMode::ExistsJoin);            
            queryBuildDataSource.addLink(fieldNum(BankAccountTable, AccountID), fieldNum(SKS_PP_Bank, BankAccountId));
            queryBuildDataSource.addRange(fieldNum(SKS_PP_Bank,SKS_IHBInhouseBank)).value(queryValue(NoYes::Yes));

            sysTableLookup.addLookupfield(fieldNum(BankAccountTable, AccountID));
            sysTableLookup.addLookupfield(fieldNum(BankAccountTable, Name));
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public static SKS_EFTAP_SwitchboardInHouseBank find(
        DataAreaid _legalEnity,
        CurrencyCode _currencyCode,
        boolean _forupdate = false)
    {
        SKS_EFTAP_SwitchboardInHouseBank switchboardInHouseBank;

        switchboardInHouseBank.selectForUpdate(_forupdate);

        select firstonly switchboardInHouseBank 
            where switchboardInHouseBank.LegalEntity == _legalEnity     
               && switchboardInHouseBank.CurrencyCode == _currencyCode;

        if(!switchboardInHouseBank)
        {
            select firstonly switchboardInHouseBank
                where switchboardInHouseBank.LegalEntity == _legalEnity
                   && switchboardInHouseBank.CurrencyCode == '';
        }

        return switchboardInHouseBank;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name = "_fieldId"></param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch(_fieldId)
        {
            case fieldNum(SKS_EFTAP_SwitchboardInHouseBank, LegalEntity):
                if(this.LegalEntity != this.orig().LegalEntity)
                {
                    this.CurrencyCode = '';
                    this.InHouseBank = '';
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <returns></returns>
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();

        SKS_PP_Bank sks_PP_Bank;
        SKS_EFT_Setup sks_EFT_Setup = SKS_EFT_Setup::find();        

        select crosscompany RecId from sks_PP_Bank where sks_PP_Bank.BankAccountId == this.InHouseBank 
            && sks_PP_Bank.SKS_IHBInhouseBank == NoYes::Yes
            && sks_PP_Bank.DataAreaId == curExt();

        if(!sks_PP_Bank.RecId)
        {
            ret = checkFailed(strFmt("@SKS:SKGIHBBankValidate",this.InHouseBank));
        }
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SKS:SKGSwitchBoardInHouseDevDoc</DeveloperDocumentation>
	<Label>@SKS:SKGSwitchBoardInHouse</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>LegalEntity</TitleField1>
	<TitleField2>InHouseBank</TitleField2>
	<PrimaryIndex>LegalEntityCurIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@ElectronicReporting:Overview</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LegalEntity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InHouseBank</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LegalEntity</Name>
			<ExtendedDataType>DataAreaid</ExtendedDataType>
			<Label>@Benefits:LegalEntity</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InHouseBank</Name>
			<ExtendedDataType>SKS_IHB_InHouseBank</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LegalEntityCurIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LegalEntity</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CurrencyCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CurrencyCode</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TransactionCurrency</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>