<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_FXA_Details</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SKS_FXA_Details extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allSettlementConfirmationsReceived</Name>
				<Source><![CDATA[
    private void allSettlementConfirmationsReceived()
    {
        SKS_EFT_FileDetail curSKS_EFT_FileDetail;
        SKS_EFT_FileDetail lSKS_EFT_FileDetail;
        SKS_FXA_Details lSKS_FXA_Details;
        SKS_EFTAP_File lSKS_EFTAP_File;
        boolean fileUpdate;
    
        // Lookup this record in file detail to determine the file number
        select firstOnly FileRecId, PaymentLineRecId from curSKS_EFT_FileDetail
          where curSKS_EFT_FileDetail.PaymentLineRecId == this.LedgerJournalTransRecid;
    
        if(curSKS_EFT_FileDetail)
        {
            select firstOnly FileRecId, RecordSection, RecordSummary, PaymentLineRecId from lSKS_EFT_FileDetail
              join LedgerJournalTransRecid, SettlementConfFileRcvd from lSKS_FXA_Details
              where lSKS_EFT_FileDetail.FileRecId == curSKS_EFT_FileDetail.FileRecId &&
                    lSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::FXAllVendor &&
                    lSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                    lSKS_FXA_Details.LedgerJournalTransRecid == lSKS_EFT_FileDetail.PaymentLineRecId &&
                    lSKS_FXA_Details.SettlementConfFileRcvd == dateNull();
    
            if(!lSKS_FXA_Details)
            {
                select firstonly forupdate lSKS_EFTAP_File where lSKS_EFTAP_File.RecId == curSKS_EFT_FileDetail.FileRecId;
                if(lSKS_EFTAP_File)
                {
                    if(lSKS_EFTAP_File.FXASettlementConfReceived == DateTimeUtil::minValue())
                    {
                        lSKS_EFTAP_File.FXASettlementConfReceived = DateTimeUtil::getSystemDateTime();
                        fileUpdate = true;
                    }
                    if(lSKS_EFTAP_File.FileStatus == SKS_EFT_FileStatus::FXAllPaymentInstructionSent)
                    {
                        lSKS_EFTAP_File.FileStatus = SKS_EFT_FileStatus::FXAllSettlementCenterComplete;
                        fileUpdate = true;
                    }
                    if(fileUpdate)
                    {
                        lSKS_EFTAP_File.update();
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>allTradesAcknowledged</Name>
				<Source><![CDATA[
    private void allTradesAcknowledged()
    {
        SKS_EFT_FileDetail          curSKS_EFT_FileDetail;
        SKS_EFT_FileDetail          lSKS_EFT_FileDetail;
        SKS_FXA_Details             lSKS_FXA_Details;
        SKS_EFTAP_File              lSKS_EFTAP_File;
        SKS_EFT_FilePmtSelection    lSKS_EFT_FilePmtSelection;
        LedgerJournalTrans          lLedgerJournalTrans;
        boolean                     fileUpdate;
        ledgerJournalEngine_Server  ledgerJournalEngine_Server;
        LedgerJournalTable          ledgerJournalTable;
        LedgerJournalId             tmpLedgerID;
        container                   ledgerAmounts;
    
        // Lookup this record in file detail to determine the file number
        select firstOnly FileRecId, PaymentLineRecId from curSKS_EFT_FileDetail
          where curSKS_EFT_FileDetail.PaymentLineRecId == this.LedgerJournalTransRecid;
    
        if(curSKS_EFT_FileDetail)
        {
            select firstOnly FileRecId, RecordSection, RecordSummary, PaymentLineRecId from lSKS_EFT_FileDetail
              join LedgerJournalTransRecid, TradeAckFileRcvd from lSKS_FXA_Details
              where lSKS_EFT_FileDetail.FileRecId == curSKS_EFT_FileDetail.FileRecId &&
                    lSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::FXAllVendor &&
                    lSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                    lSKS_FXA_Details.LedgerJournalTransRecid == lSKS_EFT_FileDetail.PaymentLineRecId &&
                    lSKS_FXA_Details.TradeAckFileRcvd == dateNull();
    
            if(!lSKS_FXA_Details)
            {
                select firstonly forupdate lSKS_EFTAP_File where lSKS_EFTAP_File.RecId == curSKS_EFT_FileDetail.FileRecId;
                if(lSKS_EFTAP_File)
                {
                    if(lSKS_EFTAP_File.FXAAllTradeAcksReceived == DateTimeUtil::minValue())
                    {
                        lSKS_EFTAP_File.FXAAllTradeAcksReceived = DateTimeUtil::getSystemDateTime();
                        fileUpdate = true;
                    }
                    if(lSKS_EFTAP_File.FileStatus == SKS_EFT_FileStatus::FXAllTradeSent)
                    {
                        lSKS_EFTAP_File.FileStatus = SKS_EFT_FileStatus::FXAllAllTradeAcksRecieved;
                        fileUpdate = true;
                    }
                    if(fileUpdate)
                    {
                        select forUpdate lSKS_EFT_FilePmtSelection order by lSKS_EFT_FilePmtSelection.PmtJournalNum
                               where lSKS_EFT_FilePmtSelection.FileRecId == lSKS_EFTAP_File.RecId;
    
                        if(lSKS_EFT_FilePmtSelection)
                        {
                            lSKS_EFTAP_File.OriginalPmtTotal = 0;
                            lSKS_EFTAP_File.PmtTotal = 0;
                        }
    
                        while(lSKS_EFT_FilePmtSelection)
                        {
                            if(tmpLedgerID != lSKS_EFT_FilePmtSelection.PmtJournalNum)
                            {
                                tmpLedgerID = lSKS_EFT_FilePmtSelection.PmtJournalNum;
                                select forupdate firstonly LedgerJournalTable where ledgerJournalTable.JournalNum == lSKS_EFT_FilePmtSelection.PmtJournalNum;
                                LedgerJournalEngine_Server = LedgerJournalEngine_Server::construct();
                                ledgeramounts = ledgerJournalEngine_Server.initBalances(lSKS_EFT_FilePmtSelection.PmtJournalNum, true);
                                ledgerJournalTable.JournalTotalDebit = conPeek(ledgerAmounts, 1);
                                ledgerJournalTable.JournalTotalCredit = conPeek(ledgerAmounts, 2);
                                ledgerJournalTable.journalTotalOffsetBalance = conPeek(ledgerAmounts,3);
                                ledgerJournalTable.update();
                            }
    
                            select sum(AmountCurDebit) from lLedgerJournalTrans where lLedgerJournalTrans.SKS_EFT_APPmtSelectionRecId == lSKS_EFT_FilePmtSelection.RecId;
                            lSKS_EFT_FilePmtSelection.PmtTotal = lLedgerJournalTrans.AmountCurDebit;
                            lSKS_EFT_FilePmtSelection.update();
    
                            lSKS_EFTAP_File.OriginalPmtTotal += lLedgerJournalTrans.AmountCurDebit;
                            lSKS_EFTAP_File.PmtTotal += lLedgerJournalTrans.AmountCurDebit;
    
                            next lSKS_EFT_FilePmtSelection;
    
                        }
    
                        lSKS_EFTAP_File.update();
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        super();
    
        this.allTradesAcknowledged();
        this.allSettlementConfirmationsReceived();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFundingCurrency</Name>
				<Source><![CDATA[
    public CurrencyCodeISO getFundingCurrency()
    {
        SKS_FXA_CurrencyPairsTable locSKS_FXA_CurrencyPairsTable;
        CurrencyCodeISO locCurrencyCodeISO;
    
    
    
        if(strLen(this.CurrencyPairISO) == 0)
            locCurrencyCodeISO = this.DealtCurrency;
        else
        {
            locSKS_FXA_CurrencyPairsTable = SKS_FXA_CurrencyPairsTable::find(this.CurrencyPairISO);
            if(this.SKS_FXA_BuySell == SKS_FXA_BuySell::Buy)
            {
                if(locSKS_FXA_CurrencyPairsTable.FromCurrencyCodeISO == locSKS_FXA_CurrencyPairsTable.ToCurrencyCodeISO)
                {
                    locCurrencyCodeISO = this.DealtCurrency;
                }
                else if(this.DealtCurrency == locSKS_FXA_CurrencyPairsTable.FromCurrencyCodeISO)
                {
                    locCurrencyCodeISO = locSKS_FXA_CurrencyPairsTable.ToCurrencyCodeISO;
                }
                else
                {
                   locCurrencyCodeISO = locSKS_FXA_CurrencyPairsTable.FromCurrencyCodeISO;
                }
    
            }
            else
            {
                locCurrencyCodeISO =  this.DealtCurrency;
            }
    
        }
        return locCurrencyCodeISO;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        SKS_FXA_Details origSKS_FXA_Details;
    
        origSKS_FXA_Details = this.orig();
    
        super();
    
        if(this.TradeAckFileRcvd != origSKS_FXA_Details.TradeAckFileRcvd)
        {
            this.allTradesAcknowledged();
        }
    
        if(this.SettlementConfFileRcvd != origSKS_FXA_Details.SettlementConfFileRcvd)
        {
            this.allSettlementConfirmationsReceived();
        }
    
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteByLedgerJournalTransRecid</Name>
				<Source><![CDATA[
    public static void deleteByLedgerJournalTransRecid(SKS_EB_RecId _Recid)
    {
        SKS_FXA_Details lSKS_FXA_Details;
        SKS_EFT_FileDetail lSKS_EFT_FileDetail;
        ;

        ttsBegin;
        lSKS_FXA_Details.skipDeleteActions(true);
        delete_from lSKS_FXA_Details
          where
            lSKS_FXA_Details.LedgerJournalTransRecid == _RecId;
    
        lSKS_EFT_FileDetail.skipDeleteActions(true);
        delete_from lSKS_EFT_FileDetail
          where
            lSKS_EFT_FileDetail.PaymentLineRecId == _RecId &&
            lSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::FXAllVendor;
    
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByLedgerJournalTransRecid</Name>
				<Source><![CDATA[
    public static SKS_FXA_Details findByLedgerJournalTransRecid(SKS_EB_RecId _Recid)
    {
        SKS_FXA_Details locSKS_FXA_Details;
        ;
    
        select firstOnly forUpdate locSKS_FXA_Details where locSKS_FXA_Details.LedgerJournalTransRecid == _RecId;
    
        return locSKS_FXA_Details;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SKS3636</DeveloperDocumentation>
	<Label>@SKS3593</Label>
	<TableGroup>TransactionLine</TableGroup>
	<TitleField1>SKS_FXA_AllocationID</TitleField1>
	<TitleField2>SKS_FXA_OrderID</TitleField2>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerJournalTransRecid</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyPairISO</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DealtCurrency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SKS_FXA_AllocationID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SettlementConfFileRcvd</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SKS_FXA_BuySell</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValueDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SKS_FXA_ContraAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SKS_FXA_CounterPartyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SKS_FXA_CounterPartyAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SKS_FXA_OrderID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SKS_FXA_TradeID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SKS_FXA_SettlementId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TradeAckFileRcvd</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SKS178</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DealtCurrency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyPairISO</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SKS_FXA_BuySell</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValueDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SKS_FXA_ContraAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SKS_FXA_CounterPartyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SKS_FXA_CounterPartyAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RelationshipFields</Name>
			<Label>@SKS3713</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerJournalTransRecid</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Settlement</Name>
			<Label>@SKS3642</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SKS_FXA_SettlementId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SettlementConfFileRcvd</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Trade</Name>
			<Label>@SKS3643</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SKS_FXA_OrderID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SKS_FXA_AllocationID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SKS_FXA_TradeID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TradeAckFileRcvd</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SKS3587</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyPairISO</Name>
			<ExtendedDataType>SKS_FXA_CurrencyPairISO</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DealtCurrency</Name>
			<ExtendedDataType>CurrencyCodeISO</ExtendedDataType>
			<Label>@SKS3588</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchRate</Name>
			<ExtendedDataType>ExchRate</ExtendedDataType>
			<HelpText>@SKS3639</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerJournalTransRecid</Name>
			<ExtendedDataType>SKS_EB_RecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>SettlementConfFileRcvd</Name>
			<ExtendedDataType>SKS_EB_Date</ExtendedDataType>
			<HelpText>@SKS3638</HelpText>
			<Label>@SKS3637</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SKS_FXA_AllocationID</Name>
			<ExtendedDataType>SKS_FXA_AllocationID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SKS_FXA_BuySell</Name>
			<EnumType>SKS_FXA_BuySell</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SKS_FXA_ContraAmount</Name>
			<ExtendedDataType>SKS_FXA_ContraAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SKS_FXA_CounterPartyAccount</Name>
			<ExtendedDataType>SKS_FXA_CounterPartyAccount</ExtendedDataType>
			<Label>@SKS3590</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SKS_FXA_CounterPartyName</Name>
			<ExtendedDataType>SKS_FXA_CounterPartyName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SKS_FXA_OrderID</Name>
			<ExtendedDataType>SKS_FXA_OrderID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SKS_FXA_SettlementId</Name>
			<ExtendedDataType>SKS_FXA_SettlementId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SKS_FXA_TradeID</Name>
			<ExtendedDataType>SKS_FXA_TradeID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TradeAckFileRcvd</Name>
			<ExtendedDataType>SKS_EB_Date</ExtendedDataType>
			<HelpText>@SKS3638</HelpText>
			<Label>@SKS3640</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValueDate</Name>
			<ExtendedDataType>SKS_EB_Date</ExtendedDataType>
			<HelpText>@SKS3641</HelpText>
			<Label>@SKS3112</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendAccount</Name>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<Label>@SYS24500</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>VendTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VendAccount</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SKS_FXA_CurrencyPairsTableIdx1</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CurrencyPairISO</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ISOCurrencyCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ISOCurrencyCode</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DealtCurrency</Name>
					<SourceEDT>CurrencyCodeISO</SourceEDT>
					<Field>DealtCurrency</Field>
					<RelatedField>ISCCurrencyCodeAlpha</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SKS_FXA_CounterPartyTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SKS_FXA_CounterPartyTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Link</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SKS_FXA_CounterPartyAccount</Name>
					<Field>SKS_FXA_CounterPartyAccount</Field>
					<RelatedField>CounterPartyID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SKS_FXA_CurrencyPairTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>SKS_FXA_CurrencyPairsTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyPairISO</Name>
					<Field>CurrencyPairISO</Field>
					<RelatedField>CurrencyPairISO</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyPairISOIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendAccount</Name>
					<SourceEDT>VendAccount</SourceEDT>
					<Field>VendAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>