<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_IHB_InhouseBanks</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SKS_IHB_InhouseBanks extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkForNewAccountAndLoad</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts inhouse bank records.
    /// </summary>
    public void checkForNewAccountAndLoad()
    {
        SKS_PP_Bank             sksPPBank;
        SKS_IHB_InhouseBanks    inhouseBanks;
        RecordInsertList        recordInsertList;

        recordInsertList        = new RecordInsertList(tableNum(SKS_IHB_InhouseBanks)); //SKS_Bug_VSTS11944
        
        while select sksPPBank
            where sksPPBank.SKS_IHBInhouseBank == NoYes::Yes
        {
            Select firstonly inhouseBanks
                where inhouseBanks.AccountId == sksPPBank.BankAccountId;
            if(inhouseBanks.RecId == 0)
            {
                inhouseBanks.AccountId    = sksPPBank.BankAccountId;
                inhouseBanks.Name         = BankAccountTable::name(sksPPBank.BankAccountId);
                recordInsertList.add(inhouseBanks);
            }
        }
        recordInsertList.insertDatabase();
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds inhouse bank record based on recid
    /// </summary>
    public static SKS_IHB_InhouseBanks find(
        RecId       _bankRecId,
        boolean     _forUpdate = false)
    {
        SKS_IHB_InhouseBanks    inhouseBanks;
        if (_bankRecId)
        {
            if (_forUpdate)
            {
                inhouseBanks.selectForUpdate(_forUpdate);
            }         
            select  inhouseBanks
                where inhouseBanks.RecId == _bankRecId;
        }

        return inhouseBanks;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SKS:SKSInhouseBank</DeveloperDocumentation>
	<Label>@SKS:SKGIHBInhouseBanks</Label>
	<TableGroup>TransactionLine</TableGroup>
	<TitleField1>AccountId</TitleField1>
	<TitleField2>Name</TitleField2>
	<PrimaryIndex>AccountIdIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountId</Name>
			<ExtendedDataType>CompanyBankAccountId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Mark</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StatementNumber</Name>
			<ExtendedDataType>BankAccountStatementNum</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AccountIdIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>AccountId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>