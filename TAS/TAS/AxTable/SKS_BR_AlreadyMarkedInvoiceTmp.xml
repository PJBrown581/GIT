<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_BR_AlreadyMarkedInvoiceTmp</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SKS_BR_AlreadyMarkedInvoiceTmp extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertAlreadyMarkedInvoice</Name>
				<Source><![CDATA[
    /// <summary>
    /// To insert the details of invoice where it is in use.
    /// </summary>
    // 8778 CR
    public static void insertAlreadyMarkedInvoice(SKS_LB_JournalARApplic _sKS_LB_JournalARApplic)
    {
        SpecTrans                           specTrans;
        CustTable                           custTable;
        SKS_BR_BankTran                     sKS_BR_BankTran;
        SKS_LB_JournalAR                    sKS_LB_JournalAR;
        LedgerJournalTable                  ledgerJournalTable;
        LedgerJournalTrans                  ledgerJournalTrans;
        SKS_LB_JournalARApplic              sKS_LB_JournalARApplic;
        SKS_BR_AlreadyMarkedInvoiceTmp      sKS_BR_AlreadyMarkedInvoice;
        VendTable                           vendTable; // CR-9480

        ttsbegin;
        delete_from SKS_BR_AlreadyMarkedInvoice;
        ttscommit;

        ttsbegin;
        // CR-9480 -->
        if(_sKS_LB_JournalARApplic.CustTransOpenRecId)
        {
            // CR-9480 <--
            // SKS_Bug_9627 -->
            sKS_LB_JournalARApplic = SKS_LB_Process_IMPORTTEMP_Records::MarkedApplicSearch(_sKS_LB_JournalARApplic.CustTransOpenRecId);
            // CR-9480 -->
        }
        else
        {
            sKS_LB_JournalARApplic = SKS_LB_JournalARApplic::MarkedApplicSearchVend(_sKS_LB_JournalARApplic.VendTransOpenRecId);
        }
        // CR-9480 <--
        sKS_BR_BankTran = sKS_LB_JournalARApplic.findSKS_BR_BankTran();
        // SKS_Bug_9627 <--

        sKS_BR_AlreadyMarkedInvoice.clear();
        sKS_BR_AlreadyMarkedInvoice.InvoiceNumber = _sKS_LB_JournalARApplic.Invoice;
        
        if(sKS_BR_BankTran.RecId)
        {
            sKS_BR_AlreadyMarkedInvoice.BankStmtCompany             =   sKS_BR_BankTran.company();
            sKS_BR_AlreadyMarkedInvoice.BankAccountId               =   sKS_BR_BankTran.AccountId;
            sKS_BR_AlreadyMarkedInvoice.BankAccountStatementNum     =   sKS_BR_BankTran.ImportedStatementNum;
            sKS_BR_AlreadyMarkedInvoice.BankAccountStatementDate    =   sKS_BR_BankTran.ImportedStatementDate;
            sKS_BR_AlreadyMarkedInvoice.BankStmtAmount              =   sKS_BR_BankTran.TranAmount;
        }

        select firstonly crosscompany  JournalId, BatchNum, ChkRefNbr, RecId from sKS_LB_JournalAR
            where sKS_LB_JournalAR.CustTransOpenRecId == _sKS_LB_JournalARApplic.CustTransOpenRecId;
       
        if(sKS_LB_JournalAR.RecId)
        {
            sKS_BR_AlreadyMarkedInvoice.AReSettleCompany    = sKS_LB_JournalAR.company();
            sKS_BR_AlreadyMarkedInvoice.AReSettleJournalId  = sKS_LB_JournalAR.JournalId;
            sKS_BR_AlreadyMarkedInvoice.AReSettleBatchNum   = sKS_LB_JournalAR.BatchNum;
            sKS_BR_AlreadyMarkedInvoice.AReSettleChkRefNbr  = sKS_LB_JournalAR.ChkRefNbr;
        }
        // SKS_Bug_9810 -->
        if(_sKS_LB_JournalARApplic.CustTransOpenRecId)
        {
            // SKS_Bug_9810 <--
            select firstonly crosscompany SpecCompany, SpecRecId, SpecTableId
                from specTrans where specTrans.RefRecId == _sKS_LB_JournalARApplic.CustTransOpenRecId;
            // SKS_Bug_9810 -->
        }
        else
        {
            select firstonly crosscompany SpecCompany, SpecRecId, SpecTableId
                from specTrans where specTrans.RefRecId == _sKS_LB_JournalARApplic.VendTransOpenRecId;
        }
        // SKS_Bug_9810 <--


        if(specTrans.SpecCompany)
        {
            changecompany(specTrans.SpecCompany)
            {
                if(tableNum(LedgerJournalTrans) == specTrans.SpecTableId)
                {
                    ledgerJournalTrans = LedgerJournalTrans::findRecId(specTrans.SpecRecId,false);
                    ledgerJournalTable = ledgerJournalTrans.ledgerJournalTable();

                    sKS_BR_AlreadyMarkedInvoice.PaymJournalCompany  =   ledgerJournalTable.company();
                    sKS_BR_AlreadyMarkedInvoice.JournalNum          =   ledgerJournalTable.JournalNum;
                    sKS_BR_AlreadyMarkedInvoice.JournalName         =   ledgerJournalTable.JournalName;
                    sKS_BR_AlreadyMarkedInvoice.JournalType         =   enum2Str(ledgerJournalTable.JournalType);
                    sKS_BR_AlreadyMarkedInvoice.Voucher             =   ledgerJournalTrans.Voucher;
                }
                else if(tableNum(CustTable) == specTrans.SpecTableId)
                {
                    custTable = CustTable::findRecId(specTrans.SpecRecId);
                    // CR-9480 -->
                    sKS_BR_AlreadyMarkedInvoice.CustVendAccountNum  =   custTable.AccountNum;
                    sKS_BR_AlreadyMarkedInvoice.CustVendCompany     =   custTable.company();
                    sKS_BR_AlreadyMarkedInvoice.CustVendName        =   custTable.name();
                    // CR-9480 <--
                }
                // CR-9480 -->
                else if(tableNum(VendTable) == specTrans.SpecTableId)
                {
                    vendTable = VendTable::findRecId(specTrans.SpecRecId);
                    sKS_BR_AlreadyMarkedInvoice.CustVendAccountNum  =   vendTable.AccountNum;
                    sKS_BR_AlreadyMarkedInvoice.CustVendCompany     =   vendTable.company();
                    sKS_BR_AlreadyMarkedInvoice.CustVendName        =   vendTable.name();
                }
                // CR-9480 <--
            }
        }
        sKS_BR_AlreadyMarkedInvoice.insert();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAlreadyMarked</Name>
				<Source><![CDATA[
    /// <summary>
    /// To validate the invoice where it is in use and then mark the already marked checkbox.
    /// </summary>
    // 8778 CR
    public static boolean validateAlreadyMarked(SKS_LB_JournalARApplic _sKS_LB_JournalARApplic)
    {
        boolean                     inUse = false;
        boolean                     markInSpecTrans = false;
        CustTransOpen               custTransOpen;
        SKS_LB_JournalAR            sKS_LB_JournalAR;
        SKS_LB_JournalARApplic      locSKS_LB_JournalARApplic;
        VendTransOpen               vendTransOpen; // CR-9480

        if(_sKS_LB_JournalARApplic.AlreadyMarked &&
            (_sKS_LB_JournalARApplic.CustTransOpenRecId ||
            _sKS_LB_JournalARApplic.VendTransOpenRecId)) // CR-9480
        {
            // CR-9480 -->
            if(_sKS_LB_JournalARApplic.CustTransOpenRecId)
            {
                // CR-9480 <--
                select firstonly crosscompany TableId, DataAreaId, RecId from custTransOpen
                    where custTransOpen.recid == _sKS_LB_JournalARApplic.CustTransOpenRecId;

                markInSpecTrans = SpecTrans::existByRef(custtransopen.DataAreaId,custtransopen.TableId,custtransopen.RecId);
            
                locSKS_LB_JournalARApplic = SKS_LB_Process_IMPORTTEMP_Records::MarkedApplicSearch(custTransopen.RecId); // SKS_Bug_9627
                
                select firstonly crosscompany RecId from sKS_LB_JournalAR
                    where sKS_LB_JournalAR.CustTransOpenRecId == _sKS_LB_JournalARApplic.CustTransOpenRecId;
                // CR-9480 -->
            }
            else
            {
                select firstonly crosscompany TableId, DataAreaId, RecId from vendTransOpen
                        where vendTransOpen.recid == _sKS_LB_JournalARApplic.VendTransOpenRecId;

                markInSpecTrans = SpecTrans::existByRef(vendTransOpen.DataAreaId,vendTransOpen.TableId,vendTransOpen.RecId);
            
                locSKS_LB_JournalARApplic = SKS_LB_JournalARApplic::MarkedApplicSearchVend(_sKS_LB_JournalARApplic.VendTransOpenRecId); // CR-9480
            }
            // CR-9480 <--
            if(sKS_LB_JournalAR.RecId || locSKS_LB_JournalARApplic.RecId || markInSpecTrans)
            {
                inUse = true;
            }
            else
            {
                ttsbegin;
                _sKS_LB_JournalARApplic.selectForUpdate(true);
                _sKS_LB_JournalARApplic.AlreadyMarked = inUse; 
                _sKS_LB_JournalARApplic.update();
                ttscommit;
            }
        }
        return inUse;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SKS_PositivePay</ConfigurationKey>
	<DeveloperDocumentation>@SKS6258</DeveloperDocumentation>
	<Label>@SKS6257</Label>
	<TitleField1>InvoiceNumber</TitleField1>
	<TitleField2>CustVendAccountNum</TitleField2>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustVendCompany</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustVendAccountNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PaymentJournal</Name>
			<Label>@SKS6259</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PaymJournalCompany</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BankAcctStatement</Name>
			<Label>@SYS23259</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankAccountId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankStmtCompany</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankAccountStatementNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankAccountStatementDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankStmtAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CustSettleTrans</Name>
			<Label>@SKS6260</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustVendCompany</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustVendAccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustVendName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AReSettleWorkBench</Name>
			<Label>@SKS6261</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AReSettleCompany</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AReSettleJournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AReSettleBatchNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AReSettleChkRefNbr</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoiceNumber</Name>
			<ExtendedDataType>InvoiceId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymJournalCompany</Name>
			<ExtendedDataType>SelectableDataArea</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalNum</Name>
			<ExtendedDataType>LedgerJournalId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalName</Name>
			<ExtendedDataType>LedgerJournalNameId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankStmtCompany</Name>
			<ExtendedDataType>SelectableDataArea</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankAccountId</Name>
			<ExtendedDataType>CompanyBankAccountId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankAccountStatementNum</Name>
			<ExtendedDataType>BankAccountStatementNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>BankAccountStatementDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>BankStmtAmount</Name>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustVendCompany</Name>
			<ExtendedDataType>SelectableDataArea</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustVendAccountNum</Name>
			<ExtendedDataType>CustAccount</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustVendName</Name>
			<ExtendedDataType>DirPartyName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalType</Name>
			<ExtendedDataType>JournalDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AReSettleCompany</Name>
			<ExtendedDataType>SelectableDataArea</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AReSettleJournalId</Name>
			<ExtendedDataType>JournalId</ExtendedDataType>
			<Label>@SYS92742</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AReSettleBatchNum</Name>
			<ExtendedDataType>SKS_LB_BatchNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AReSettleChkRefNbr</Name>
			<ExtendedDataType>BankChequeNum</ExtendedDataType>
			<Label>@SKS3836</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>