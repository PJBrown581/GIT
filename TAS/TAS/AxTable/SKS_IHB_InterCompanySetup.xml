<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_IHB_InterCompanySetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SKS_IHB_InterCompanySetup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <returns></returns>
    public boolean validateWrite()
    {
        SKS_PP_Bank                         sks_PP_Bank;
        DataArea                            dataArea;        
        
        InterCompanyTradingPartner          interCompanyTradingPartner;
        InterCompanyTradingPartner          interCompanyTradingPartnerCus;
        InterCompanyTradingRelation         interCompanyTradingRelation;
        InterCompanyEndpointActionPolicy    interCompanyActionPolicyCus;

        VendTable       vendTable;
        CustTable       custTable;

        vendTable = VendTable::find(this.VendAccount);
        custTable = CustTable::find(this.CustAccount);

        if (vendTable)
        {
            interCompanyTradingPartner = InterCompanyTradingPartner::findVendor(vendTable.Party, VendTable.dataAreaid);             

            interCompanyTradingRelation = InterCompanyTradingPartner.interCompanyTradingRelation();
            interCompanyTradingPartnerCus = InterCompanyTradingPartner::find(interCompanyTradingRelation.InterCompanyTradingCustomer);
            interCompanyActionPolicyCus = InterCompanyEndpointActionPolicy::findPartner(interCompanyTradingPartnerCus.RecId);
        }
        else if (custTable)
        {            
            interCompanyTradingPartner = InterCompanyTradingPartner::findCustomer(custTable.Party, custTable.dataAreaid);
        }
       
        boolean                             ret = true;
        InterCompanyTradingPartner          partnerCusDelete, partnerVendDelete;
    
        if(this.Active)
        {
            if(!this.PaymentCompany || !this.BankAccount)
            {
                ret = checkFailed("@SKS:SKGPayCompBankAcc");                
            }            
        }

        if(this.PaymentCompany != '')
        {
            select Id from dataArea
                where dataArea.id == this.PaymentCompany;

            if(!dataArea.id)
            {
                ret = checkFailed("@SKS:SKGPayCompExists");
            }
            else if(this.PaymentCompany == curExt())
            {
                select SKS_IHBLinkedinhousebankcompany, SKS_IHBLinkedinhousebankaccount from sks_PP_Bank
                where sks_PP_Bank.BankAccountId == this.BankAccount;
            }
            else
            {
                select crosscompany SKS_IHBLinkedinhousebankcompany, SKS_IHBLinkedinhousebankaccount from sks_PP_Bank
                    where sks_PP_Bank.BankAccountId == this.BankAccount &&
                        sks_PP_Bank.DataAreaId == this.PaymentCompany; // SKS_Bug_10482
            }
        }
        

        //*******
        if(ret && sks_PP_Bank && interCompanyTradingPartner.TradingPartnerType == InterCompanyTradingPartnerType::Vendor)
        {
            if(sks_PP_Bank.SKS_IHBLinkedinhousebankcompany && sks_PP_Bank.SKS_IHBLinkedinhousebankaccount)
            {
                if(interCompanyTradingPartnerCus.CustomerDataAreaId &&  interCompanyTradingPartnerCus.CustomerDataAreaId != sks_PP_Bank.SKS_IHBLinkedinhousebankcompany)
                {
                    ret = checkFailed("@SKS:SKGTradRelCustComp");                    
                }              
                if(!interCompanyTradingPartnerCus.CustomerParty)
                {
                    ret  =  checkFailed("@SKS:SKGTradRelMyAcc");                    
                }
                if(interCompanyActionPolicyCus.LedgerJournalNameIdCustPaym || interCompanyActionPolicyCus.AutoPostCustPaym == NoYes::Yes)
                {
                    ret = checkFailed ("@SKS:SKGAutoPostIHBInter");                   
                }
            }
            else
            {
                if(interCompanyTradingPartnerCus.CustomerDataAreaId || interCompanyTradingPartnerCus.CustomerParty)
                {
                    if (Box::yesNo("@SKS:SKGIHBVendRelRem", DialogButton::No) == DialogButton::Yes)
                    {
                        if (interCompanyTradingPartnerCus && interCompanyTradingPartner)
                        {
                            ttsbegin;
                            partnerCusDelete    = InterCompanyTradingPartner::find(interCompanyTradingPartnerCus.RecId, true);
                            partnerVendDelete   = InterCompanyTradingPartner::find(interCompanyTradingPartner.RecId, true);
                            partnerCusDelete.delete();
                            partnerVendDelete.delete();
                            ttscommit;                            
                        }
                    }                   
                }
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SKS:SKGIHBInterCompSetup</DeveloperDocumentation>
	<Label>@SKS:SKGIHBVendInter</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>VendAccount</TitleField1>
	<TitleField2>PaymentCompany</TitleField2>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Intercompany</Name>
			<Label>@SKS:SKGIHBInterCompany</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Active</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymentCompany</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendAccount</Name>
			<ExtendedDataType>VendAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Active</Name>
			<Label>@SYS14584</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymentCompany</Name>
			<Label>@SKS1407</Label>
			<StringSize>4</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankAccount</Name>
			<Label>@SYS178344</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustAccount</Name>
			<ExtendedDataType>CustAccount</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>BankAccount</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>SKS_PP_Bank</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BankAccount</Name>
					<Field>BankAccount</Field>
					<RelatedField>BankAccountId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>SKS_IHBInhouseBank</Name>
					<RelatedField>SKS_IHBInhouseBank</RelatedField>
					<ValueStr>NoYes::Yes</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>