<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_BR_eBankRecCustomerGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SKS_BR_eBankRecCustomerGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>SKS_BR_eBankRecCustomerGroup</c> table.
    /// </summary>
    /// <param name="_eBankReccustomergroup">
    /// The eBankRec customer group ID of the <c>SKS_BR_eBankRecCustomerGroup</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>SKS_BR_eBankRecCustomerGroup</c> table; otherwise, an empty record.
    /// </returns>
    public static SKS_BR_eBankRecCustomerGroup find (SKS_BR_eBankRecCustGroupId _eBankReccustomergroup, boolean _forUpdate = false)
    {
        SKS_BR_eBankRecCustomerGroup    eBankRecCustomerGroup;
       
        if (_forUpdate)
        {
            eBankRecCustomerGroup.selectForUpdate(_forUpdate);
        }

        select firstonly eBankRecCustomerGroup
            where eBankRecCustomerGroup.eBankRecCustGroupId == _eBankReccustomergroup;

        return eBankRecCustomerGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupeBankCustGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Lookup method to for the eBankRec customer group id
    /// </summary>
    /// <param name = "_lookupCtrl">FormStringControl</param>
    /// <param name = "_company">dataAreaId</param>
    /// <returns>PmfTableLookupExtended lookup</returns>
    /// SKS CR 9729
    public static client PmfTableLookupExtended lookupeBankCustGroup(FormStringControl _lookupCtrl, dataAreaId _company = '')
    {
        Query                   query;
        QueryBuildDataSource    queryBuildDataSource;        
        PmfTableLookupExtended  sysTableLookup;
        Container               companyList = SKS_EB_VirtualCompany::getBankRecCompanies();
        int                     i;
        
        // data sources to view - SKS_BR_BankAccountStatement
        sysTableLookup     = PmfTableLookupExtended::newParameters(tablenum(SKS_BR_eBankRecCustomerGroupView),_lookupCtrl,false);
        sysTableLookup.addLookupfield(fieldnum(SKS_BR_eBankRecCustomerGroupView,eBankRecCustGroupId),true);
        sysTableLookup.addLookupfield(fieldnum(SKS_BR_eBankRecCustomerGroupView,Description));
        sysTableLookup.addLookupfield(fieldnum(SKS_BR_eBankRecCustomerGroupView,Id));        

        query = new Query();
        queryBuildDataSource = query.addDataSource(tablenum(SKS_BR_eBankRecCustomerGroupView));        
        query.allowCrossCompany(true);
        
        if(_company)
        {
            queryBuildDataSource.clearRanges();
            if(_company)
            {
                query.addCompanyRange(_company);
            }           
        }
        else
        {
            for (i=1; i <= conLen(companyList); i++)
            {
                query.addCompanyRange(conPeek(companyList, i));
            }
        }
        sysTableLookup.parmQuery(query);
        sysTableLookup.parmUseLookupValue(true);
        sysTableLookup.performFormLookup();

        return sysTableLookup;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SKS_PositivePay</ConfigurationKey>
	<DeveloperDocumentation>@SKS:SKGeBankRecCustomerGroupDDInfo</DeveloperDocumentation>
	<FormRef>SKS_BR_eBankRecCustomerGroup</FormRef>
	<Label>@SKS:SKGBakRecCustGroup</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>eBankRecCustGroupId</TitleField1>
	<TitleField2>Description</TitleField2>
	<ClusteredIndex>eBankRecCustGroupIdx</ClusteredIndex>
	<PrimaryIndex>eBankRecCustGroupIdx</PrimaryIndex>
	<TableContents>BaseData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DeleteAction1</Name>
			<Relation></Relation>
			<Table>CustTable</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>eBankRecCustGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>eBankRecCustGroup</Name>
			<Label>@SKS:SKGBakRecCustGroup</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>eBankRecCustGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>eBankRecCustGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>SKS_BR_eBankRecCustGroupId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>eBankRecCustGroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>eBankRecCustGroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>