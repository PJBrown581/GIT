<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EB_FileStorage</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SKS_EB_FileStorage extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>editSKS_EB_FileHubToken</Name>
				<Source><![CDATA[
    edit SKS_EB_FileHubToken editSKS_EB_FileHubToken(boolean _set = false, SKS_EB_FileHubToken _SKS_EB_FileHubToken = '')
    {
        if(_set)
        {
            this.FileHubToken = _SKS_EB_FileHubToken;
        }

        return (this.FileHubToken == '') ? '' : 'xxxxxxxxx';
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankFabricClientIDS</Name>
				<Source><![CDATA[
    public str parmBankFabricClientIDS(boolean _set, str value)
    {
        return Global::editEncryptedStringField(this, value, fieldNum(SKS_EB_FileStorage, BankFabricClientIDS), _set);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        this.parmBankFabricClientIDS(true, this.BankFabricClientIDS);
        Global::handleEncryptedTablePreInsert(this);
        super();
        Global::handleEncryptedTablePostInsert(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        this.parmBankFabricClientIDS(true, this.BankFabricClientIDS);
        Global::handleEncryptedTablePreUpdate(this);
        super();
        Global::handleEncryptedTablePostUpdate(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public static SKS_EB_FileStorage find()
    {
        SKS_EB_FileStorage fileStorage;

        select firstonly fileStorage;

        return fileStorage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankIntType</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method returns the specified module's BankIntType;
    /// </summary>
    public static SKS_BF_BankIntType getBankIntType(SKS_EB_Module _SKS_EB_Module)
    {
        SKS_EB_BankIntegOptWithNoLicense locSKS_EB_BankIntegOptWithNoLicense;
        SKS_EB_FileStorage locSKS_EB_FileStorage;
        select firstonly StorageOption_APEFTFXDD, StorageOption_BR, StorageOption_CCR,
                        StorageOption_IHB, StorageOption_LB, StorageOption_MandateAutomation,
                        StorageOption_PP from locSKS_EB_FileStorage;
        switch (_SKS_EB_Module)
        {
            case SKS_EB_Module::APEFT:
            case SKS_EB_Module::FXAll:
            case SKS_EB_Module::AREFT:
                locSKS_EB_BankIntegOptWithNoLicense  =   locSKS_EB_FileStorage.StorageOption_APEFTFXDD;
                break;
            case SKS_EB_Module::eBankRec:
                locSKS_EB_BankIntegOptWithNoLicense = locSKS_EB_FileStorage.StorageOption_BR;
                break;
            case SKS_EB_Module::CreditCardReconciliation:
                locSKS_EB_BankIntegOptWithNoLicense = locSKS_EB_FileStorage.StorageOption_CCR;
                break;
            case SKS_EB_Module::InHouseBankInterestRate:
                locSKS_EB_BankIntegOptWithNoLicense = locSKS_EB_FileStorage.StorageOption_IHB;
                break;
            case SKS_EB_Module::Lockbox:
                locSKS_EB_BankIntegOptWithNoLicense = locSKS_EB_FileStorage.StorageOption_LB;
                break;
            case SKS_EB_Module::MandateAutomation:
                locSKS_EB_BankIntegOptWithNoLicense = locSKS_EB_FileStorage.StorageOption_MandateAutomation;
                break;
            case SKS_EB_Module::PP:
                locSKS_EB_BankIntegOptWithNoLicense = locSKS_EB_FileStorage.StorageOption_PP;
                break;
        }
        return    locSKS_EB_BankIntegOptWithNoLicense == SKS_EB_BankIntegOptWithNoLicense::BankFabricEnumValue ? SKS_BF_BankIntType::BankFabric : SKS_BF_BankIntType::FileHubLocal;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankIntegDefaultForNewModulesWithNoLicense</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts bank integration default modules field's value to bank integration modules with no license enum value.
    /// </summary>
    /// <returns>Returns an enum value</returns>
    public SKS_EB_BankIntegOptWithNoLicense getBankIntegDefaultForNewModulesWithNoLicense()
    {
        if (this.BankIntegDefaultForNewModules == SKS_EB_BankIntegDefaultForNewModules::BankFabricEnumValue)
        {
            return SKS_EB_BankIntegOptWithNoLicense::BankFabricEnumValue;
        }
        else
        {
            return SKS_EB_BankIntegOptWithNoLicense::FileHubLocalEnumValue;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateNotLicensedStorageOpt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the not licensed marked storage options if any.
    /// </summary>
    /// <param name = "_SKS_PP_Setup">TAS setup record</param>
    public static void updateNotLicensedStorageOpt(SKS_PP_Setup _SKS_PP_Setup)
    {
        SKS_EB_FileStorage  fileStorage = SKS_EB_FileStorage::find();

        if (!fileStorage)
        {
            return;
        }

        // PP
        if (fileStorage.StorageOption_PP == SKS_EB_BankIntegOptWithNoLicense::NotLicensedEnumValue
            && _SKS_PP_Setup.RegPP)
        {
            fileStorage.StorageOption_PP = fileStorage.getBankIntegDefaultForNewModulesWithNoLicense();
        }

        // BR
        if (fileStorage.StorageOption_BR == SKS_EB_BankIntegOptWithNoLicense::NotLicensedEnumValue
            && _SKS_PP_Setup.RegBR)
        {
            fileStorage.StorageOption_BR = fileStorage.getBankIntegDefaultForNewModulesWithNoLicense();
        }

        // CCR
        if (fileStorage.StorageOption_CCR == SKS_EB_BankIntegOptWithNoLicense::NotLicensedEnumValue
            && _SKS_PP_Setup.RegCCReconciliationExtensions)
        {
            fileStorage.StorageOption_CCR = fileStorage.getBankIntegDefaultForNewModulesWithNoLicense();
        }

        // LB
        if (fileStorage.StorageOption_LB == SKS_EB_BankIntegOptWithNoLicense::NotLicensedEnumValue
            && _SKS_PP_Setup.RegLB)
        {
            fileStorage.StorageOption_LB = fileStorage.getBankIntegDefaultForNewModulesWithNoLicense();
        }

        // APEFT
        if (fileStorage.StorageOption_APEFTFXDD == SKS_EB_BankIntegOptWithNoLicense::NotLicensedEnumValue
            && _SKS_PP_Setup.RegAPEFT)
        {
            fileStorage.StorageOption_APEFTFXDD = fileStorage.getBankIntegDefaultForNewModulesWithNoLicense();
        }

        // IHB
        if (fileStorage.StorageOption_IHB == SKS_EB_BankIntegOptWithNoLicense::NotLicensedEnumValue
            && _SKS_PP_Setup.RegInhouseBank)
        {
            fileStorage.StorageOption_IHB = fileStorage.getBankIntegDefaultForNewModulesWithNoLicense();
        }

        // Mandate
        if (fileStorage.StorageOption_MandateAutomation == SKS_EB_BankIntegOptWithNoLicense::NotLicensedEnumValue
            && _SKS_PP_Setup.RegMandateAutomation)
        {
            fileStorage.StorageOption_MandateAutomation = fileStorage.getBankIntegDefaultForNewModulesWithNoLicense();
        }

        ttsbegin;
        fileStorage.selectForUpdate(true);
        fileStorage.doUpdate();
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SKS_PositivePay</ConfigurationKey>
	<DeveloperDocumentation>@SKS:SKGFileStoreageDevDoc</DeveloperDocumentation>
	<Label>@SKS:SKGFileStorage</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>SKS_EB_BankIntegOpt</TitleField1>
	<TitleField2>BankIntegDefaultForNewModules</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FileStorageType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FileHubLocation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SKS178</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FileStorageType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FileHubToken</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FileHubLocation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Trace</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankFabricClientID</Name>
			<ExtendedDataType>SKS_BF_ConnectionParams</ExtendedDataType>
			<Label>@SKS:SKGBankFabricClientIDLabel</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankFabricPin</Name>
			<ExtendedDataType>SKS_EB_BankFabricPin</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>BankfabricPinExchDatetime</Name>
			<ExtendedDataType>DateTimeAccepted</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankFabricResponseReason</Name>
			<ExtendedDataType>SKS_BF_ResponseReason</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BankFabricResponseStatus</Name>
			<EnumType>SKS_BF_ResponseStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankFabricScope</Name>
			<ExtendedDataType>SKS_BF_ConnectionParams</ExtendedDataType>
			<Label>@SKS:SKGBankFabricScope</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankFabricSecretName</Name>
			<ExtendedDataType>SKS_BF_SecretName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankFabricSubscription</Name>
			<ExtendedDataType>SKS_BF_ConnectionParams</ExtendedDataType>
			<Label>@SKS:SKGBankFabricSubscriptionLabel</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankFabricTenant</Name>
			<ExtendedDataType>SKS_BF_ConnectionParams</ExtendedDataType>
			<Label>@SKS:SKGBankFabricTenantLabel</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankFabricURL</Name>
			<ExtendedDataType>SKS_EB_FileHubLocation</ExtendedDataType>
			<HelpText>@SKS:SKGBankFabricURLHelpText</HelpText>
			<Label>@SKS:SKGBankFabricURLLabel</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FileStorageType</Name>
			<EnumType>SKS_EB_FileStorageType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FileHubToken</Name>
			<ExtendedDataType>SKS_EB_FileHubToken</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FileHubLocation</Name>
			<ExtendedDataType>SKS_EB_FileHubLocation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Trace</Name>
			<HelpText>@SKS:SKGNewTrace</HelpText>
			<Label>@SYS26038</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BankIntegDefaultForNewModules</Name>
			<EnumType>SKS_EB_BankIntegDefaultForNewModules</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SKS_EB_BankIntegOpt</Name>
			<EnumType>SKS_EB_BankIntegOpt</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StorageOption_PP</Name>
			<Label>@SKS39</Label>
			<EnumType>SKS_EB_BankIntegOptWithNoLicense</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StorageOption_BR</Name>
			<Label>@SKS313</Label>
			<EnumType>SKS_EB_BankIntegOptWithNoLicense</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StorageOption_CCR</Name>
			<Label>@SKS:SKGCCReconciliation</Label>
			<EnumType>SKS_EB_BankIntegOptWithNoLicense</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StorageOption_LB</Name>
			<Label>@SKS432</Label>
			<EnumType>SKS_EB_BankIntegOptWithNoLicense</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StorageOption_APEFTFXDD</Name>
			<Label>@SKS1030</Label>
			<EnumType>SKS_EB_BankIntegOptWithNoLicense</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StorageOption_IHB</Name>
			<Label>@SKS:SKGIHB</Label>
			<EnumType>SKS_EB_BankIntegOptWithNoLicense</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StorageOption_MandateAutomation</Name>
			<Label>@SKS:SKGMandateAutomation</Label>
			<EnumType>SKS_EB_BankIntegOptWithNoLicense</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankFabricClientIDS</Name>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>EncryptedString</ExtendedDataType>
			<Label>@SKS:SKGBankFabricClientIDS</Label>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>