<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventQualityOrderTableHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>PIPInventQualityOrderTableHandler</c> class provides method event subscription handlers for the
///     <c>InventQualityOrderTable</c> table.
/// </summary>
public class PIPInventQualityOrderTableHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateInventFlexSamplingActivities</Name>
				<Source><![CDATA[
    [PostHandlerFor(tableStr(InventQualityOrderTable), tableMethodStr(InventQualityOrderTable, delete))]
    /// <summary>
    ///     Checks whether deletion should be allowed based on flexible sampling setup and if so, updates flexible sampling activities accordingly.
    /// </summary>
    /// <param name="_args">
    ///     The arguments passed by the event hanlder.
    /// </param>
    /// <exception cref="Exception::Error">
    ///     Thrown when setup under Inventory management indicates deletion should not be allowed if flexible sampling plan is attached.
    /// </exception>
    public static void updateInventFlexSamplingActivities(XppPrePostArgs _args)
    {
        InventQualityOrderTable             inventQualityOrderTable = _args.getThis();
        PIPInventFlexSamplingQualityDelete  inventFlexSamplingQualityDelete;
    
        if (inventQualityOrderTable.PIPFlexibleSamplingPlanId)
        {
            if (!InventParameters::find().PIPAllowQualityOrderDeletion)
            {
                throw error("@PIP142");
            }
    
            inventFlexSamplingQualityDelete = PIPInventFlexSamplingQualityDelete::newFromQualityOrder(inventQualityOrderTable.QualityOrderId);
            inventFlexSamplingQualityDelete.updateActivities();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>