<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventTestAssociationTable_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(tableStr(InventTestAssociationTable))]
public final class PIPInventTestAssociationTable_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>InventTestAssociationTable_onValidatingWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [DataEventHandler(tableStr(InventTestAssociationTable), DataEventType::ValidatingWrite)]
    public static void InventTestAssociationTable_onValidatingWrite(Common sender, DataEventArgs e)
    {
        InventTestAssociationTable record = sender as InventTestAssociationTable;
        if (record.PIPFlexibleSampling)
        {
            record.pipSetPlaceHolderReferences();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>InventTestAssociationTable_onInserting</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [DataEventHandler(tableStr(InventTestAssociationTable), DataEventType::Inserting)]
    public static void InventTestAssociationTable_onInserting(Common sender, DataEventArgs e)
    {
        InventTestAssociationTable record = sender as InventTestAssociationTable;
        if (record.PIPFlexibleSampling && (record.ItemSamplingId != "--" || record.TestGroupId != "--"))
        {
            record.pipSetPlaceHolderReferences();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>pipSetPlaceHolderReferences</Name>
				<Source><![CDATA[
    public void pipSetPlaceHolderReferences()
    {
        const str placeHolderId = '--';
        const str placeHolderDescription = 'Place holder for flexible sampling';

        this.ItemSamplingId = placeHolderId;
        this.TestGroupId = placeHolderId;

        ttsbegin;
        if (!InventItemSampling::exist(placeHolderId))
        {
            InventItemSampling itemSampling;

            itemSampling.initValue();
            itemSampling.InventItemSamplingId = placeHolderId;
            itemSampling.Description = placeHolderDescription;
            itemSampling.insert();
        }

        if (!InventTestGroup::exist(placeHolderId))
        {
            InventTestGroup testGroup;

            testGroup.initValue();
            testGroup.TestGroupId = placeHolderId;
            testGroup.Description = placeHolderDescription;
            testGroup.insert();
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pipExistByPlanId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets a value indicating if a record in the <c>InventTestAssociationTable</c> table exists for the given flexible sampling plan Id.
    /// </summary>
    /// <param name="_flexibleSamplingPlanId">
    ///     The surrogate record id for the activity sampling table record.
    /// </param>
    /// <returns>
    ///     True if the record exists; otherwise, false.
    /// </returns>
    public static boolean pipExistByPlanId(PIPFlexibleSamplingPlanId _flexibleSamplingPlanId)
    {
        return _flexibleSamplingPlanId
            && (select InventTestAssociationTable
                where InventTestAssociationTable.PIPFlexibleSamplingPlanId == _flexibleSamplingPlanId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildCheckDateOverlapQuery</Name>
				<Source><![CDATA[
    protected Query buildCheckDateOverlapQuery()
    {
        Query query = next buildCheckDateOverlapQuery();

        QueryBuildDataSource qbdsInventTestAssociationTable = query.dataSourceTable(tableNum(InventTestAssociationTable));
        qbdsInventTestAssociationTable.addRange(fieldNum(InventTestAssociationTable, PIPFlexibleSamplingPlanId)).value(queryValue(this.PIPFlexibleSamplingPlanId));
        
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pipCanEditGroupAndSmplingSpecification</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a value indicating if the item group and item sampling specification fields on the main record can be edited.
    /// </summary>
    /// <returns>true if the item group and item sampling specification fields can be edited; otherwise, false.</returns>
    public boolean pipCanEditGroupAndSmplingSpecification()
    {
        return PIPFlexInventTestAssociationTableSupport::newInventTestAssociation(this).canEditGroupAndSamplingSpecification();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>