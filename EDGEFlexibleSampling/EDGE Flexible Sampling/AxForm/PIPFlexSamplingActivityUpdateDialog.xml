<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PIPFlexSamplingActivityUpdateDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PIPFlexSamplingActivityUpdateDialog extends FormRun
{
    PIPInventFlexSamplingActivityTable      inventFlexSamplingActivity;
    PIPInventFlexSamplingActivityDetails    lastActivity;
    PIPInventFlexSamplingPlanTable          inventFLexSamplingPlanTable;
    PIPInventFlexSamplingPlanLines          inventFlexSamplingPlanLines;
    PIPFlexibleSamplingPlanId               flexibleSamplingPlanId;

    FormRun                                 callerForm;
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (element.args().dataset() != tableNum(PIPInventFlexSamplingActivityTable))
        {
            throw error(error::missingFormActiveBuffer(this.name(), tableStr(PIPInventFlexSamplingActivityTable)));
        }
    
        super();
    
        this.parmInventFlexSamplingActivity(this.args().record());
    
        callerForm = this.args().caller();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFlexibleSamplingPlanId</Name>
				<Source><![CDATA[
    public PIPFlexibleSamplingPlanId parmFlexibleSamplingPlanId(PIPFlexibleSamplingPlanId _flexibleSamplingPlanId = flexibleSamplingPlanId)
    {
        flexibleSamplingPlanId = _flexibleSamplingPlanId;
    
        return flexibleSamplingPlanId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventFlexSamplingActivity</Name>
				<Source><![CDATA[
    public PIPInventFlexSamplingActivityTable parmInventFlexSamplingActivity(PIPInventFlexSamplingActivityTable _inventFlexSamplingActivity = inventFlexSamplingActivity)
    {
        inventFlexSamplingActivity = _inventFlexSamplingActivity;
    
        return inventFlexSamplingActivity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateActivities</Name>
				<Source><![CDATA[
    public void updateActivities()
    {
        PIPInventFlexSamplingActivityDetails   inventFlexsamplingActivityDetails;
    
        lastActivity = inventFlexSamplingActivity.getCurrentActivity();
    
        ttsBegin;
    
        inventFlexsamplingActivityDetails.clear();
        inventFlexsamplingActivityDetails.PassActionLevel                   = nextLevel.value();
        inventFlexsamplingActivityDetails.ReasonCode                        = reasonCode.valueStr();
        inventFlexsamplingActivityDetails.Reference                         = reference.valueStr();
        inventFlexsamplingActivityDetails.Level                             = lastActivity.Level;
        inventFlexsamplingActivityDetails.PlanActivityNumber                = lastActivity.PlanActivityNumber + 1;
        inventFlexsamplingActivityDetails.RoundTrackingNumber               = lastActivity.RoundTrackingNumber + 1;
        inventFlexsamplingActivityDetails.InventFlexSamplingActivityRecId   = element.parmInventFlexSamplingActivity().RecId;
    
        inventFlexsamplingActivityDetails.insert();
        inventFlexsamplingActivityDetails.update();
    
        ttsCommit;
    
        if (callerForm)
        {
            callerForm.dataSource().research(true);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>NextLevel</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query                   query = new Query();
            QueryBuildDataSource    queryBuildDataSource;
            QueryBuildRange         queryBuildRange1;
            PIPLevel                currentLevel;
        
            SysTableLookup          sysTableLookup      = SysTableLookup::newParameters(tableNum(PIPInventFlexSamplingPlanLines), this);
            SysFieldGroupLookup     sysFieldGroupLookup = SysFieldGroupLookup::newParameters(tableNum(PIPInventFlexSamplingPlanLines), this);
        
            sysTableLookup.addLookupField(fieldNum(PIPInventFlexSamplingPlanLines, Level));
            sysTableLookup.addLookupField(fieldNum(PIPInventFlexSamplingPlanLines, ItemSamplingId));
            sysTableLookup.addLookupField(fieldNum(PIPInventFlexSamplingPlanLines, TestGroupId));
            sysTableLookup.addLookupMethod(tableMethodStr(PIPInventFlexSamplingPlanLines, roundsDisplay));
            sysTableLookup.addLookupField(fieldNum(PIPInventFlexSamplingPlanLines, Skip));
            sysTableLookup.addLookupField(fieldNum(PIPInventFlexSamplingPlanLines, Fails));
        
            queryBuildDataSource = query.addDataSource(tableNum(PIPInventFlexSamplingPlanLines));
        
            queryBuildRange1 = queryBuildDataSource.addRange(fieldNum(PIPInventFlexSamplingPlanLines, FlexibleSamplingPlanId));
            queryBuildRange1.value(element.parmInventFlexSamplingActivity().FlexibleSamplingPlanId);
        
            currentLevel = element.parmInventFlexSamplingActivity().currentLevel();
        
            select firstOnly FlexibleSamplingPlanId, LastLevel from inventFLexSamplingPlanTable
                where inventFLexSamplingPlanTable.FlexibleSamplingPlanId == inventFlexSamplingActivity.FlexibleSamplingPlanId;
        
            sysTableLookup.parmQuery(query);
        
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReasonCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            MenuFunction    menuFunction;
        
            menuFunction = new MenuFunction(menuitemdisplaystr(PIPFlexSamplingChangeLevelReasonCode), MenuItemType::Display);
            menuFunction.run();
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query                   query = new Query();
            QueryBuildDataSource    queryBuildDataSource;
        
            SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(PIPInventFlexSamplingChangeLevelReason), this);
        
            sysTableLookup.addLookupField(fieldNum(PIPInventFlexSamplingChangeLevelReason, ReasonCode));
            sysTableLookup.addLookupField(fieldNum(PIPInventFlexSamplingChangeLevelReason, ReasonComment));
        
            queryBuildDataSource = query.addDataSource(tableNum(PIPInventFlexSamplingChangeLevelReason));
        
            sysTableLookup.parmQuery(query);
        
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OKButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
        
            element.updateActivities();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PIPInventFlexSamplingChangeLevelReason</Name>
			<Table>PIPInventFlexSamplingChangeLevelReason</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonComment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@PIP141</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>NextLevel</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Integer</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>PIPLevel</ExtendedDataType>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ReasonCode</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>PIPReasonCode</ExtendedDataType>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Reference</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>PIPPlanActivityReference</ExtendedDataType>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<Text>@SYS5469</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>