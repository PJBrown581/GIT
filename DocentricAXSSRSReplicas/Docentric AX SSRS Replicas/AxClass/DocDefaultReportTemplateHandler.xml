<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocDefaultReportTemplateHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class DocDefaultReportTemplateHandler is a handler for default report templates.
/// </summary>
public class DocDefaultReportTemplateHandler
{
    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setDefaultTemplate_SalesInvoiceReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set here your default template for the Customer invoice report.
    /// </summary>
    public static void setDefaultTemplate_SalesInvoiceReport()
    {
        DocReportTable reportTable = DocReportTable::findReportId(ssrsReportStr(SalesInvoice, Report));
        if (reportTable && reportTable.numberOfTemplates() > 0)
        {
            DocReportTemplate reportTemplate;
            select firstonly reportTemplate where reportTemplate.TemplateId == 'SalesInvoice.Report';

            if (reportTemplate.RecId != 0)
            {
                DocReportTemplate::setDefaultTemplate(reportTemplate.RecId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DocReportingSetupHelper_Post_reloadSystemTemplatesForReports_DC</Name>
				<Source><![CDATA[
    [PostHandlerFor(classStr(DocReportingSetupHelper), staticMethodStr(DocReportingSetupHelper, reloadSystemTemplatesForReportsV2))]
    public static void DocReportingSetupHelper_Post_reloadSystemTemplatesForReports_DC(XppPrePostArgs _args)
    {
        try
        {
            Set reportIds = _args.getArgNum(0); // argument: _reportIds
            //container returnValueCnt = _args.getReturnValue(); // [affectedReportsOrTemplates, invalidReportCount, firstInvalidReportRecord, validatedReportCount]
            //boolean countOnlyReports = _args.getArgNum(2); // argument: _countOnlyReports

            // *** Update here the templates of reloading reports if needed.

            // (1) For SalesInvoice.Report:
            if (reportIds.in(ssrsReportStr(SalesInvoice, Report)))
            {
                // Set the default template.
                DocDefaultReportTemplateHandler::setDefaultTemplate_SalesInvoiceReport();
            }
        }
        catch
        {
            exceptionTextFallThrough();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DocReportingSetupHelper_Post_reloadSystemTemplatesAndReports_DC</Name>
				<Source><![CDATA[
    [PostHandlerFor(classStr(DocReportingSetupHelper), staticMethodStr(DocReportingSetupHelper, reloadSystemTemplatesAndReports))]
    public static void DocReportingSetupHelper_Post_reloadSystemTemplatesAndReports_DC(XppPrePostArgs _args)
    {
        try
        {
            int updatedReportCount, insertedReportCount, invalidReportCount, validatedReportCount;
            [updatedReportCount, insertedReportCount, invalidReportCount, validatedReportCount] = _args.getReturnValue();
            if (insertedReportCount > 0)
            {
                // Update here the default templates if needed.

                // (1) For SalesInvoice.Report:
                DocDefaultReportTemplateHandler::setDefaultTemplate_SalesInvoiceReport();
            }
        }
        catch
        {
            exceptionTextFallThrough();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>