<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocBOMConsistOfDSP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The DocBOMConsistOfDSP class is a DSP class for the BOMConsistOf report.
/// </summary>
public class DocBOMConsistOfDSP extends DocDataSourceProviderSrsReporting
{
    // Indent space
    private const str Space = '   ';

    private const str BOMConsistOfLine = 'BOMConsistOfLine';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the class description.
    /// </summary>
    /// <returns>The class description</returns>
    public ClassDescription description()
    {
        return 'BOM Consist Of DSP';
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateIndent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate indent depending on level
    /// </summary>
    /// <param name = "_strInput">Input string for checking validity</param>
    /// <param name = "_level">BOM level</param>
    /// <param name = "_additionalSpace">Flag if additional space nedded</param>
    /// <returns>Indent depending on level</returns>
    protected str calculateIndent(str _strInput, Level _level, boolean _additionalSpace = false)
    {
        if (!_strInput)
        { 
            // No indent necessery 
            return '';
        }

        return _additionalSpace ? strRep(Space, _level + 1) : strRep(Space, _level);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addDataFieldsForRdpTableRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// This is overriden method that exclude particular fields from the currently
    /// adding record of the RDP (report data provider) table to the report data source,
    /// by using the _addingRecord.addAllFieldsExcept() method.
    /// Extend this method in order to add additional data to the currently adding record.
    /// Use the methods: _addingRecord.addField(), _addingRecord.addCalculatedFieldXXX(),
    /// _addingRecord.addDisplayMethod(), etc.
    /// </summary>
    /// <param name="_addingRecord">Data record in the record tree based on the currently adding RDP record table buffer.</param>
    /// <param name="_rdpTableRecord">RDP (report data provider) table record.</param>
    /// <param name="_rdpTableName">RDP (report data provider) table name.</param>
    protected void addDataFieldsForRdpTableRecord(DocXmlRecord _addingRecord, Common _rdpTableRecord, TableName _rdpTableName)
    {
        if (_rdpTableName == tableStr(BOMConsistOfTmp))
        {
            BOMConsistOfTmp bomConsistOfTmp = _rdpTableRecord;

            // Add all fields in report data
            _addingRecord.addAllFields();

            // Add calculated fields for Item and BOM indent
            _addingRecord.addCalculatedField('IndentBOMItem', this.calculateIndent(bomConsistOfTmp.BOMItemId, bomConsistOfTmp.BOMLevel_DR));
            _addingRecord.addCalculatedField('IndentBOMVersion', this.calculateIndent(bomConsistOfTmp.BOMVersionBOMId, bomConsistOfTmp.BOMLevel_DR, true));

            // Rename the record from 'BOMConsistOfTmp' to 'BOMConsistOfLine'.
            _addingRecord.setRecordName(BOMConsistOfLine);
        }
        else
        {
            super(_addingRecord, _rdpTableRecord, _rdpTableName);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCustomLabels</Name>
				<Source><![CDATA[
    /// <summary>
    /// This overridden method adds additional custom labels to the DDSP to use them in template designer.
    /// Learn more: https://ax.docentric.com/d365-how-to-manuals/d365-miscellaneous/d365-how-to-add-missing-labels-to-multilingual-reports/
    /// </summary>
    /// <param name = "_labelMap">Label map</param>
    protected void addCustomLabels(Map _labelMap)
    {
        super(_labelMap);

        // Header and pagination
        _labelMap.insert(literalStr("@SYS101241"), 'Lines');
        _labelMap.insert(literalStr("@SYS5250"), 'Page');
        _labelMap.insert(literalStr("@SYS26401"), 'of');

        // BOM table (second)
        _labelMap.insert(literalStr("@SYS7916"), 'BOM');
        _labelMap.insert(literalStr("@SYS672"), 'Formula');
        _labelMap.insert(literalStr("@SYS4009249"), 'BOM/Formula');
        _labelMap.insert(literalStr("@SYS329986"), 'From Qty');
        _labelMap.insert(literalStr("@SYS24676"), 'Active');
        _labelMap.insert(literalStr("@SYS3492"), 'Approved by');
        _labelMap.insert(literalStr("@SYS10158"), 'Approved');
        _labelMap.insert(literalStr("@SYS5461"), 'Yes');
        _labelMap.insert(literalStr("@SYS2048"), 'No');

        // Details table (third)
        _labelMap.insert(literalStr("@SYS17860"), 'Origin');
        _labelMap.insert(literalStr("@SYS14011"), 'Configuration');
        _labelMap.insert(literalStr("@SYS329841"), 'Operation number');

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>