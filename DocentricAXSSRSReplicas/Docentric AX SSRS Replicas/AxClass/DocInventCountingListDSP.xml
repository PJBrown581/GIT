<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocInventCountingListDSP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The DocInventCountingListDSP class is a DSP class for the InventCountingList report.
/// </summary>
class DocInventCountingListDSP extends DocDataSourceProviderSrsReporting
{
    // Placeholders
    str placeholderJournalId;

    // Bit position for ViewLicensePlateId flag inside InventJournalTable.InventDimFixed field. (taken from InventDimFixedClass)
    const int WhsLicensePlateId_Idx = 20;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets description of the class.
    /// </summary>
    /// <returns>Description of the class</returns>
    public ClassDescription description()
    {
        return 'InventCountingList DSP';
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCustomLabels</Name>
				<Source><![CDATA[
    // This overridden method adds additional custom labels to the DDSP to use them in template designer.
    // Learn more: https://ax.docentric.com/d365-how-to-manuals/d365-miscellaneous/d365-how-to-add-missing-labels-to-multilingual-reports/
    protected void addCustomLabels(Map _labelMap)
    {
        super(_labelMap);

        _labelMap.insert(literalStr("@SYS9398"), 'Now counted');
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateXmlDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overriding generateXmlDataSource method to call fixViewLicensePlateIdParameter method.
    /// </summary>
    /// <param name = "_recordBuilder">An instance of the DocXmlRecordBuilder class</param>
    protected void generateXmlDataSource(DocXmlRecordBuilder _recordBuilder)
    {
        // Build the whole data source.
        super(_recordBuilder);

        this.fixViewLicensePlateIdParameter();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fixViewLicensePlateIdParameter</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method sets the value of ViewLicensePlateId report parameter as 
    /// Microsoft forgot to populate it in InventCountigList.modifyQueryAndParameters() controller method.
    /// The actual bug is in the InventDimViewRdlContractWrapper.setInventDimParmValue() method.
    /// </summary>
    protected void fixViewLicensePlateIdParameter()
    {
        InventJournalId journalId;

        /* 
        We need to grab the JournalId value used as range in the query, so lets iterate the query ranges
        and grab the value from the one named 'JournalId'.
        */

        ListEnumerator enumerator = this.getSrsReportFirstDynamicQueryRanges().getEnumerator();

        while(enumerator.MoveNext())
        {
            QueryBuildRange currentQueryRange = enumerator.current();
            
            if (currentQueryRange.name() == 'JournalId')
            {
                journalId = currentQueryRange.value();
                // found it, stop iteration loop
                break;
            }
        }

        /*
        If we found the JournalId value, use it to grab the header record from 
        InventJournalTable and update the 'ViewLicensePlateId' parameter based on
        the bit flags set in InventDimFixed field. (Bit 21).
        */
        if (journalId)
        {
            placeholderJournalId = journalId;

            InventJournalTable inventJournalTable = InventJournalTable::find(journalId, /*forUpdate*/ false);
            this.getParameter('ViewLicensePlateId').setValueTyped((inventJournalTable.InventDimFixed & (1 << WhsLicensePlateId_Idx)) > 0);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>overrideReportRunSettings</Name>
				<Source><![CDATA[
    // List of defined custom placeholders for the report:
    #define.JournalId('JournalId')
    [DocPlaceholderAttribute(#JournalId, 'ICL - Journal Id')]
    public DocPlaceholderManager overrideReportRunSettings(DocReportRunContext _reportRunContext, boolean _replaceStandardPlaceholders = true)
    {
        // Replace standard placeholders.
        DocPlaceholderManager placeholderMng = super(_reportRunContext, _replaceStandardPlaceholders);

        // Replace custom placeholders:
        // -- Placeholder @JournalId@
        placeholderMng.replacePlaceholderInCurrentPrintDest(#JournalId, placeholderJournalId);
        
        // Fill the print archive contract
        _reportRunContext.archiveContract().setDocument(placeholderJournalId);

        return placeholderMng;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>