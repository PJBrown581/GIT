<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocDspHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The DocDspHelper class is a helper class for DSP.
/// </summary>
class DocDspHelper
{
    public const str SirMadam = 'Sir/Madam';
    public const str FieldName_PrintMgmtOriginalCopy = 'PrintMgmtOriginalCopy';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>contactPersonName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the contact person name for the specified contact person id.
    /// </summary>
    /// <param name = "_contactPersonId">A contact person Id</param>
    /// <param name = "_fallbackName">A fallback contact person name</param>
    /// <returns>The contact person name</returns>
    public static ContactPersonName contactPersonName(ContactPersonId _contactPersonId, ContactPersonName _fallbackName = SirMadam)
    {
        ContactPersonName contactPersonName = ContactPerson::name(_contactPersonId);

        return (contactPersonName ? contactPersonName : _fallbackName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>custContactPersonName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the contact person name for the specified customer account.
    /// </summary>
    /// <param name = "_custAccount">Customer account</param>
    /// <param name = "_fallbackName">A fallback contact person name</param>
    /// <returns>The contact person name</returns>
    public static ContactPersonName custContactPersonName(CustAccount _custAccount, ContactPersonName _fallbackName = SirMadam)
    {
        CustTable custTable = CustTable::find(_custAccount);
        
        return DocDspHelper::contactPersonName(custTable.ContactPersonId, _fallbackName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPrintMgmtOriginalCopyField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the Original/Copy print information to the provided _dataRecord depending on the value of the provided _printMgmtOriginalCopyType.
    /// </summary>
    /// <param name = "_dataRecord">Data record</param>
    /// <param name = "_printMgmtOriginalCopyType">Original/Copy print management</param>
    /// <returns>Data record with added Original/Copy print information</returns>
    public static DocXmlRecord addPrintMgmtOriginalCopyField(DocXmlRecord _dataRecord, DocPrintMgmtOriginalCopyType _printMgmtOriginalCopyType)
    {
        PrintMgmtDocInstanceType printMgmtDocInstanceType;
        
        // Throw exception if the method is called with invalid _printMgmtOriginalCopyType parameter.
        if (_printMgmtOriginalCopyType == DocPrintMgmtOriginalCopyType::NonPrintMgmtReport)
        {
            DocGlobalHelper::handleException(funcName(), strFmt('Incorrectly called method with invalid value (%1) for parameter _printMgmtOriginalCopyType.', _printMgmtOriginalCopyType));
        }

        switch (_printMgmtOriginalCopyType)
        {
            case DocPrintMgmtOriginalCopyType::Copy : 
                printMgmtDocInstanceType = PrintMgmtDocInstanceType::Copy;
                break;

            case DocPrintMgmtOriginalCopyType::Original : 
                printMgmtDocInstanceType = PrintMgmtDocInstanceType::Original;
                break;
        }

        _dataRecord.addCalculatedFieldFromEnum(FieldName_PrintMgmtOriginalCopy, enumStr(PrintMgmtDocInstanceType), printMgmtDocInstanceType);

        return _dataRecord;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>