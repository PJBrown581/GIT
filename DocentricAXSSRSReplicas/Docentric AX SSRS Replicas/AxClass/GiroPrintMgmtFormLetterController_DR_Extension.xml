<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GiroPrintMgmtFormLetterController_DR_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class GiroPrintMgmtFormLetterController_DR_Extension is an extension of the class GiroPrintMgmtFormLetterController.
/// </summary>
[ExtensionOf(classStr(GiroPrintMgmtFormLetterController))]
final class GiroPrintMgmtFormLetterController_DR_Extension
{
    // TODO: Uncomment the following method to skip printing of the standard (SSRS) Giro payment attachment after invoice.
    // If you are using Docentric templates, this way you will enable scenarios such as:
    // >> Printing Invoice and Giro as the single document (to all Docentric print destinations).
    // >> Emailing Invoice and Giro as 2 separate documents in the single email.
    // -------------------------------------------------------------------------------------------------------------------
    // The first scenario demands to create an additional page in Docentric invoice template bound to Giro data
    // using the SalesInvoicePaymentStubTmp data record, which is presented in the invoice's DDSP OOTB, while the second scenario
    // demands to create an additional invoice template (with a different Template ID, e.g. 'Giro') showing the Giro data only.
    // However, in the second scenario, you will also need to customize the overrideReportRunSettings() method in order
    // to generate the Giro document in addition to the Invoice document, using the same DDSP as for the invoice (i.e. the
    // SalesInvoicePaymentStubTmp data record). This can be done by invoking the DocOutputManager::printReportToMemory() method.
    /*
    protected void outputReport()
    {
        boolean disableGiroReport = (this is FreeTextInvoiceController || this is SalesInvoiceController || this is ProjInvoiceController);
        RecId origGiroReportTmpRecId = giroReportTmpRecId;
        
        // This way the printing of the Giro report after the invoice will be disabled.
        if (disableGiroReport) 
            giroReportTmpRecId = 0;

        next outputReport();

        // If printing of Giro has been disabled, delete the corresponding record from the GiroReportTmp table.
        // This record has been inserted by the SalesInvoiceDP.insertGiroInformation() method, which has just been executed.
        // But it hasn't been deleted, because we disabled the Giro report, and GiroReportController -> GiroReportDP.processReport()
        // will never be executed, and this method deletes the record from GiroReportTmp inserted by SalesInvoiceDP!
        if (disableGiroReport)
        {
            GiroReportTmp   giroReportTmp;
            delete_from giroReportTmp where giroReportTmp.RecId == origGiroReportTmpRecId;
        }
    }
    */

}
]]></Declaration>
		<Methods />
	</SourceCode>
</AxClass>