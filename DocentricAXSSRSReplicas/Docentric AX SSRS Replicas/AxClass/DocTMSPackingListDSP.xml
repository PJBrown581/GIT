<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocTMSPackingListDSP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The DocTMSPackingListDSP class is a DSP class for the TMSPackingList report.
/// </summary>
public class DocTMSPackingListDSP extends DocDataSourceProviderSrsReporting
{    
    WHSShipmentId  placeholderShipmentId;
    WHSCarrierCode placeholderShippingCarrier;
    TMSService placeholderCarrierService;
    TMSCurrentId placeholderNumOfContainers;
    CustName placeholderCustomerName;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the class description.
    /// </summary>
    /// <returns>The class description</returns>
    public ClassDescription description()
    {
        return 'Packing List DSP';
    }

]]></Source>
			</Method>
			<Method>
				<Name>onSelectedRdpTableRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// This is an overriden method that enables you to store particular data fields
    /// from the currently adding record of the RDP (report data provider) table to the class
    /// global variables. This way you can use them in the this.overrideReportRunSettings() method to
    /// replace custom placeholders or change the selected print destination settings.
    /// </summary>
    /// <param name = "_rdpTableRecord">RDP (report data provider) table record.</param>
    /// <param name = "_rdpTableName">RDP (report data provider) table name.</param>
    protected void onSelectedRdpTableRecord(Common _rdpTableRecord, TableName _rdpTableName)
    {
        super(_rdpTableRecord, _rdpTableName);

        if (_rdpTableName == tableStr(TMSPackingListTmp))
        {
            TMSPackingListTmp currentRecord = _rdpTableRecord;

            // Store custom placeholders' values.
            if (placeholderShipmentId == '')
            {
                placeholderShipmentId = currentRecord.ShipmentId;
            }

            if (placeholderShippingCarrier == '')
            {
                placeholderShippingCarrier = currentRecord.Carrier;
            }

            if (placeholderCarrierService == '')
            {
                placeholderCarrierService = currentRecord.Service;
            }

            if (!placeholderNumOfContainers)
            {
                placeholderNumOfContainers = currentRecord.NumberOfContainers;
            }

            if (placeholderCustomerName == '')
            {
                placeholderCustomerName = currentRecord.CustomerName;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addDataFieldsForRdpTableRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Override this method in order to exclude particular fields from the currently adding record of the RDP table
    /// to the report data source (DDSP), by using the _addingRecord.addAllFieldsExcept() method.
    /// Extend this method in order to add additional data to the currently adding record.
    /// Use the methods: _addingRecord.addField(), _addingRecord.addCalculatedFieldXXX(), _addingRecord.addDisplayMethod(), etc.
    /// </summary>
    /// <param name="_addingRecord">Data record in the record tree based on the currently adding RDP record table buffer.</param>
    /// <param name="_rdpTableRecord">RDP (report data provider) table record.</param>
    /// <param name="_rdpTableName">RDP (report data provider) table name.</param>
    protected void addDataFieldsForRdpTableRecord(DocXmlRecord _addingRecord, Common _rdpTableRecord, TableName _rdpTableName)
    {
        if (_rdpTableName == tableStr(TMSPackingListTmp))
        {
            super(_addingRecord, _rdpTableRecord, _rdpTableName);
           
            TMSPackingListTmp currentPackingListTmp = _rdpTableRecord;
            
            // TODO: Add here additional data. For example, you can add account number like this:
            //WHSShipmentTable shipmentTable = WHSShipmentTable::find(currentPackingListTmp.ShipmentId);
            //_addingRecord.addCalculatedField('AccountNum', shipmentTable.AccountNum);
        }
        else
        {
            super(_addingRecord, _rdpTableRecord, _rdpTableName);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCustomLabels</Name>
				<Source><![CDATA[
    // This overridden method adds additional custom labels to the DDSP to use them in template designer.
    // Learn more: https://ax.docentric.com/d365-how-to-manuals/d365-miscellaneous/d365-how-to-add-missing-labels-to-multilingual-reports/
    protected void addCustomLabels(Map _labelMap)
    {
        super(_labelMap);

        // Labels in order of appearance on document from top to bottom, left to right.

        // Report caption
        _labelMap.insert(literalStr('@TRX1815'), 'Packing list');

        // Document header
        _labelMap.insert(literalStr('@TRX2667'), '_________________________ 20 _______');
        _labelMap.insert(literalStr('@TRX2668'), 'Place and date of shipment');
        _labelMap.insert(literalStr('@SYS8828'), 'To');
        _labelMap.insert(literalStr('@TRX623'), 'Carrier :');
        _labelMap.insert(literalStr('@TRX119'), 'Service');
        _labelMap.insert(literalStr('@WAX:Label_OrderNo'), 'Order no.');
        _labelMap.insert(literalStr('@WAX:Label_WithListedMaterialsWasShipped'), 'with listed material was shipped by');
        _labelMap.insert(literalStr('@TRX2688'), 'via');
        _labelMap.insert(literalStr('@TRX2669'), 'Shipment consists of');
        _labelMap.insert(literalStr('@TRX2670'), 'Marks');
        _labelMap.insert(literalStr('@TRX2671'), '_______________ Cases');
        _labelMap.insert(literalStr('@WAX:Containers_ReportLabel'), '_______________ Containers');
        _labelMap.insert(literalStr('@TRX2673'), '_______________ Crates');
        _labelMap.insert(literalStr('@TRX2674'), '_______________ Cartons');
        _labelMap.insert(literalStr('@TRX2675'), '_______________ Barrels');
        _labelMap.insert(literalStr('@TRX2676'), '_______________ Drums');

        // Document lines
        _labelMap.insert(literalStr('@TRX366'), 'Package');
        _labelMap.insert(literalStr('@SYS13864'), 'Number');
        _labelMap.insert(literalStr('@TRX2679'), 'Weights in lbs. or kilos');
        _labelMap.insert(literalStr('@SYS5951'), 'Dimensions');
        _labelMap.insert(literalStr('@SYS3065'), 'Quantity');
        _labelMap.insert(literalStr('@TRX2682'), 'Clearly state contents');
        _labelMap.insert(literalStr('@TRX2683'), 'of each package');
        _labelMap.insert(literalStr('@SYS2785'), 'Gross');
        _labelMap.insert(literalStr('@SYS11575'), 'Weight');
        _labelMap.insert(literalStr('@TRX2680'), 'Each');
        _labelMap.insert(literalStr('@SYS13914'), 'Net');
        _labelMap.insert(literalStr('@SYS13182'), 'Height');
        _labelMap.insert(literalStr('@SYS7069'), 'Width');
        _labelMap.insert(literalStr('@SYS3064'), 'Length');
    }

]]></Source>
			</Method>
			<Method>
				<Name>overrideReportRunSettings</Name>
				<Source><![CDATA[
    // List of defined custom placeholders for the report:
    #define.ShipmentId('ShipmentId')
    #define.ShippingCarrier('ShippingCarrier')
    #define.CarrierService('CarrierService')
    #define.NumOfContainers('NumberOfContainers')
    #define.CustomerName('CustomerName')

    [DocPlaceholderAttribute(#ShipmentId, 'PL - Shipment Id'),
     DocPlaceholderAttribute(#ShippingCarrier, 'PL - Shipping Carrier'),
     DocPlaceholderAttribute(#CarrierService, 'PL - Carrier Service'),
     DocPlaceholderAttribute(#NumOfContainers, 'PL - Number of Containers'),
     DocPlaceholderAttribute(#CustomerName, 'PL - Customer Name')]
    public DocPlaceholderManager overrideReportRunSettings(DocReportRunContext _reportRunContext, boolean _replaceStandardPlaceholders = true)
    {
        // Replace standard placeholders.
        DocPlaceholderManager placeholderMng = super(_reportRunContext, _replaceStandardPlaceholders);
        
        // Replace custom placeholders:
        // -- Placeholder @ShipmentId@
        placeholderMng.replacePlaceholderInCurrentPrintDest(#ShipmentId, placeholderShipmentId);
        
        // -- Placeholder @ShippingCarrier@
        placeholderMng.replacePlaceholderInCurrentPrintDest(#ShippingCarrier, placeholderShippingCarrier);

        // -- Placeholder @CarrierService@
        placeholderMng.replacePlaceholderInCurrentPrintDest(#CarrierService, placeholderCarrierService);

        // -- Placeholder @NumOfContainers@
        placeholderMng.replacePlaceholderInCurrentPrintDest(#NumOfContainers, placeholderNumOfContainers);

        // -- Placeholder @CustomerName@
        placeholderMng.replacePlaceholderInCurrentPrintDest(#CustomerName, placeholderCustomerName);

        // Fill the Print archive contract.
        _reportRunContext.archiveContract().parmDocumentId(placeholderShipmentId);

        return placeholderMng;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>