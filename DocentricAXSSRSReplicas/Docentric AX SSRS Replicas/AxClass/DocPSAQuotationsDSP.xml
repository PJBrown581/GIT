<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocPSAQuotationsDSP</Name>
	<SourceCode>
		<Declaration><![CDATA[
class DocPSAQuotationsDSP extends DocDataSourceProviderSrsReporting //DocDataSourceProviderSrsProforma
{
    /* Variable used for custom placeholders */
    str                 placeholder_reportType;
    CustTable           orderCustomer, invoiceCustomer;
    smmBusRelTable      prospect;
    str                 placeholder_quotationId;
    str                 placeholder_quotationConfirmId;
    str                 placeholder_quotationDocNum;
    date                placeholder_quotationDate;
    date                placeholder_deadlineDate;
    str                 placeholder_projectId;
    str                 placeholder_projectInvoiceId;
    str                 placeholder_accountContactName;
    str                 placeholder_projEmail;

    HcmWorker           salesTaker;
    Common              journal;
    

    #define.PSAQuotationLine('PSAQuotationLine')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addCustomLabels</Name>
				<Source><![CDATA[
    // This overridden method adds additional custom labels to the DDSP to use them in template designer.
    // Learn more: https://ax.docentric.com/d365-how-to-manuals/d365-miscellaneous/d365-how-to-add-missing-labels-to-multilingual-reports/
    protected void addCustomLabels(Map _labelMap)
    {
        super(_labelMap);

        // Labels in order of appearance on document from top to bottom, left to right.

        // Pagination.
        _labelMap.insert(literalStr("@SYS5250"), 'Page');
        _labelMap.insert(literalStr("@SYS26401"), 'of');

        // Document header.
        _labelMap.insert(literalStr("@SYS120475"), 'Quotation name');
        _labelMap.insert(literalStr("@SYS333973"), 'Customer');
        _labelMap.insert(literalStr("@SYS190114"), 'Address'); // Customer address
        _labelMap.insert(literalStr("@SYS129713"), 'Currency'); // Sales currency
        _labelMap.insert(literalStr("@SYS332798"), 'External description'); // Description

        // Document lines.
        _labelMap.insert(literalStr("@SYS81564"), 'Quotation line');
        _labelMap.insert(literalStr("@SYS101400"), 'Description');
        _labelMap.insert(literalStr("@SYS311019"), 'Category');
        _labelMap.insert(literalStr("@SYS98361"), 'Sales quantity'); // Quantity
        _labelMap.insert(literalStr("@Proj:ExtendedPrice"), 'Extended price');
        _labelMap.insert(literalStr("@PSA3463"), 'Sub total');
        _labelMap.insert(literalStr("@SYS304698"), 'Grand total');
        // Quote information.
        _labelMap.insert(literalStr("@SYS332208"), 'Transaction type');

        // Final price calculation.
        _labelMap.insert(literalStr("@SYS464"), 'Sales subtotal amount');
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
        public ClassDescription description()
    {
        return 'Project quotation DSP';
    }

]]></Source>
			</Method>
			<Method>
				<Name>addDataFieldsForRdpTableRecord</Name>
				<Source><![CDATA[
    protected void addDataFieldsForRdpTableRecord(DocXmlRecord _addingRecord, Common _rdpTableRecord, TableName _rdpTableName)
    {
        // Rename the record from 'PSAQuotationsTmp' to 'PSAQuotationLine'.
        _addingRecord.setRecordName(#PSAQuotationLine);
        // Add all fields from the PSAQuotationsTmp table.
        _addingRecord.addAllFields();


        // TODO: Add here additional fields from the related tables.
        // For example, add the related project ID:
        //PSAQuotationsTmp currentPSAQuotationsTmp = _rdpTableRecord;
        //PSAQuotationsContract rdpContract = this.getSrsRdpContract();
        //if (rdpContract.parmCustQuotationRecId())
        //{
        //    CustQuotationJour jour = CustQuotationJour::findRecId(rdpContract.parmCustQuotationRecId());
        //    _addingRecord.addCalculatedField('ProjId', jour.ProjIdRef);
        //}
        //else if (rdpContract.parmCustQuotationConfirmRecId())
        //{
        //    CustQuotationConfirmJour jour = CustQuotationConfirmJour::findRecId(rdpContract.parmCustQuotationConfirmRecId());
        //    _addingRecord.addCalculatedField('ProjId', jour.ProjIdRef);
        //}
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateXmlDataSource</Name>
				<Source><![CDATA[
    protected void generateXmlDataSource(DocXmlRecordBuilder _recordBuilder)
    {
        // Add the single data record representing the header and add multiple records representing the lines.
        super(_recordBuilder);

        // If this is design time, add main or tax lines if they haven't been already added.
        _recordBuilder.goToTopRecord();

        // Get report parameters from report contract
        PSAQuotationsContract rdpContract = this.getSrsRdpContract();

        if (rdpContract.parmCustQuotationRecId())
        {
            CustQuotationJour jour = CustQuotationJour::findRecId(rdpContract.parmCustQuotationRecId());

            placeholder_reportType = 'Project quotation';
            orderCustomer = CustTable::find(jour.OrderAccount);
            invoiceCustomer = CustTable::find(jour.InvoiceAccount);
            prospect = smmBusRelTable::find(jour.BusRelAccount);
            placeholder_quotationId = this.salesQuotationTable(jour.QuotationDocNum).QuotationId;
            placeholder_quotationDocNum = jour.QuotationDocNum;
            placeholder_quotationDate = jour.QuotationDate;
            placeholder_deadlineDate = jour.RespiteDate;
            placeholder_projectId = jour.ProjIdRef;
            placeholder_projectInvoiceId = jour.ProjInvoiceProjId;
            salesTaker = HcmWorker::find(jour.WorkerSalesTaker);
            journal = jour;
        }
        else if (rdpContract.parmCustQuotationConfirmRecId())
        {
            CustQuotationConfirmJour jour = CustQuotationConfirmJour::findRecId(rdpContract.parmCustQuotationConfirmRecId());

            placeholder_reportType = 'Project quotation confirmation';
            orderCustomer = CustTable::find(jour.OrderAccount);
            invoiceCustomer = CustTable::find(jour.InvoiceAccount);
            prospect = smmBusRelTable::find(jour.BusRelAccount);
            placeholder_quotationId = this.salesQuotationTable(jour.QuotationDocNum).QuotationId;
            placeholder_quotationConfirmId = jour.QuotationConfirmId;
            placeholder_quotationDocNum = jour.QuotationDocNum;
            placeholder_quotationDate = jour.QuotationDate;
            placeholder_deadlineDate = jour.RespiteDate;
            placeholder_projectId = jour.ProjIdRef;
            placeholder_projectInvoiceId = jour.ProjInvoiceProjId;
            salesTaker = HcmWorker::find(jour.WorkerSalesTaker);
            journal = jour;
        }

        placeholder_accountContactName = SalesQuotationTable::find(placeholder_quotationId).contactPersonName();
        placeholder_projEmail = ProjTable::find(placeholder_projectId).Email;

        _recordBuilder.addCalculatedField('ReportType', placeholder_reportType, 'Report type');
    }

]]></Source>
			</Method>
			<Method>
				<Name>overrideReportRunSettings</Name>
				<Source><![CDATA[
    // List of defined custom placeholders for the report:
    #define.ReportType('ReportType')
    #define.QuotationId('QuotationId')
    #define.QuotationConfirmId('QuotationConfirmId')
    #define.QuotationDocNum('QuotationDocNum')
    #define.AccountNum('AccountNum')
    #define.AccountName('AccountName')
    #define.AccountContactName('AccountContactName')
    #define.QuotationDate('QuotationDate')
    #define.DeadlineDate('DeadlineDate')
    #define.ProjectId('ProjectId')
    #define.ProjectContractId('ProjectContractId')
    #define.SalesTakerName('SalesTakerName')
    #define.SalesTakerImage('SalesTakerImage')
    #define.ProjEmail('ProjEmail')
    
    [DocPlaceholderAttribute(#ReportType, 'PQ - ReportType'),
     DocPlaceholderAttribute(#QuotationId, 'PQ - Quotation ID'),
     DocPlaceholderAttribute(#QuotationConfirmId, 'PQ - Quotation Confirmation ID'),
     DocPlaceholderAttribute(#QuotationDocNum, 'PQ - Document ID'),
     DocPlaceholderAttribute(#AccountNum, 'PQ - Account Number'),
     DocPlaceholderAttribute(#AccountName, 'PQ - Account Name'),
     DocPlaceholderAttribute(#AccountContactName, 'PQ - Account Contact Name'),
     DocPlaceholderAttribute(#QuotationDate, 'PQ - Quotation Date'),
     DocPlaceholderAttribute(#DeadlineDate, 'PQ - Deadline Date'),
     DocPlaceholderAttribute(#ProjectId, 'PQ - Project ID'),
     DocPlaceholderAttribute(#ProjectContractId, 'PQ - Project Contract ID'),
     DocPlaceholderAttribute(#SalesTakerName, 'PQ - Sales Taker Name'),
     DocPlaceholderImageAttribute(#SalesTakerImage, 'PQ - Sales Taker Picture', 80, 80),
     DocPlaceholderAttribute(#ProjEmail, 'PQ - Project Email')]
    public DocPlaceholderManager overrideReportRunSettings(DocReportRunContext _reportRunContext, boolean _replaceStandardPlaceholders = true)
    {
        // Set the report execution context record to the corresponding salesQuotationTable. This will affect:
        // (1) Standard placeholders
        // (2) Saving to Attachments -> Record type: Context record
        // (3) Additional Attachments -> Load from: Context record
        _reportRunContext.setReportExecutionContextRecord(SalesQuotationTable::find(placeholder_quotationId));

        // Replace standard placeholders.
        DocPlaceholderManager placeholderMng = super(_reportRunContext, _replaceStandardPlaceholders);
        
        // Replace custom placeholders:
        // -- Placeholder @ReportType@
        placeholderMng.replacePlaceholderInCurrentPrintDest(#ReportType, placeholder_reportType);

        // -- Placeholder @QuotationId@
        placeholderMng.replacePlaceholderInCurrentPrintDest(#QuotationId, placeholder_quotationId);
       
        // -- Placeholder @QuotationConfirmId@
        placeholderMng.replacePlaceholderInCurrentPrintDest(#QuotationConfirmId, placeholder_quotationConfirmId);

        // -- Placeholder @QuotationDocNum@
        placeholderMng.replacePlaceholderInCurrentPrintDest(#QuotationDocNum, placeholder_quotationDocNum);
        
        // -- Placeholder @AccountNum@
        str custAccount = orderCustomer.AccountNum;
        str prospectId = prospect.BusRelAccount;
        placeholderMng.replacePlaceholderInCurrentPrintDest(#AccountNum, custAccount ? custAccount : prospectId);
        
        // -- Placeholder @AccountName@
        placeholderMng.replacePlaceholderInCurrentPrintDest(#AccountName, custAccount ? orderCustomer.name() : prospect.name());

        // -- Placeholder @AccountContactName@
        placeholderMng.replacePlaceholderInCurrentPrintDest(#AccountContactName, placeholder_accountContactName);
        
        // -- Placeholder @QuotationDate@
        placeholderMng.replacePlaceholderInCurrentPrintDest(#QuotationDate, placeholder_quotationDate);

        // -- Placeholder @DeadlineDate@
        placeholderMng.replacePlaceholderInCurrentPrintDest(#DeadlineDate, placeholder_deadlineDate);

        // -- Placeholder @ProjectId@
        placeholderMng.replacePlaceholderInCurrentPrintDest(#ProjectId, placeholder_projectId);

        // -- Placeholder @ProjectContractId@
        placeholderMng.replacePlaceholderInCurrentPrintDest(#ProjectContractId, placeholder_projectInvoiceId);

        // -- Placeholder @SalesTakerName@
        placeholderMng.replacePlaceholderInCurrentPrintDest(#SalesTakerName, salesTaker.name());

        // -- Placeholder @ProjEmail@
        placeholderMng.replacePlaceholderInCurrentPrintDest(#ProjEmail, placeholder_projEmail);

        // -- Placeholder @AccountContactName@
        placeholderMng.replacePlaceholderInCurrentPrintDest(#AccountContactName, placeholder_accountContactName);
        
        // For the @AccountContactName@ and @SalesTakerImage@ placeholders first check if they are used
        // in the Email body print destination, if it is the currently selected print destination.
        // NOTE: Remove this condition if it's not true:
        if (_reportRunContext.parmPrintDestination() == DocPrintDestination::Email)
        {            
            /*** Replace a custom placeholder image ***/
            // -- Placeholder @SalesTakerImage@
            if (salesTaker && DocPlaceholderManager::findPlaceholder(_reportRunContext.emailPrintDestSettings().parmEmailBody(), #SalesTakerImage))
            {
                Bitmap workerImage = salesTaker.personImageOrNull_DC();
                if (workerImage)
                {
                    placeholderMng.replacePlaceholderImage(#SalesTakerImage, workerImage);
                }
            }
        }

        // Fill the Print archive contract.
        if (orderCustomer.AccountNum)
        {
            _reportRunContext.archiveContract().setCustAccount(orderCustomer.AccountNum);
        }

        _reportRunContext.archiveContract().setQuotationId(placeholder_quotationId);
        _reportRunContext.archiveContract().setDocument(placeholder_quotationDocNum, placeholder_quotationDate);

        if (journal.TableId == tableNum(CustQuotationJour))
        {
            _reportRunContext.archiveContract().setJournal(journal.RecId, DocJournalType::CustQuotationJour);
        }
        else
        {
            _reportRunContext.archiveContract().setJournal(journal.RecId, DocJournalType::CustQuotationConfirmJour);
        }

        return placeholderMng;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesQuotationTable</Name>
				<Source><![CDATA[
    protected SalesQuotationTable salesQuotationTable(QuotationDocNum _quotationDocNum)
    {
        int origQuotationIdPos = strScan(_quotationDocNum, '-', 1, strLen(_quotationDocNum));
        str origQuotationId = subStr(_quotationDocNum, 1, origQuotationIdPos - 1);

        return SalesQuotationTable::find(origQuotationId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>SalesQuotationEditLinesForm_Pre_callPrinterSettingsFormletter_DC</Name>
				<Source><![CDATA[
    // Fixed bug in standard code. Without it SalesQuotations report is called instead PSAQuotations.
    [PreHandlerFor(classStr(SalesQuotationEditLinesForm), staticMethodStr(SalesQuotationEditLinesForm, callPrinterSettingsFormletter))]
    public static void SalesQuotationEditLinesForm_Pre_callPrinterSettingsFormletter_DC(XppPrePostArgs args)
    {
        SalesQuotationEditLinesForm actionClass = args.getArgNum(0);

        if (actionClass is SalesQuotationEditLinesForm_Proj)
        {
            SRSPrintDestinationSettings printSettings = new SRSPrintDestinationSettings(actionClass.printerSettingsFormletter());
        
            printSettings.parmTmpPrintDestSettings_DC().parmIsReportNameSetInPrintMgmt(true);
            printSettings.parmTmpPrintDestSettings_DC().parmReportId(ssrsReportStr(PSAQuotations, Report));
            printSettings.parmTmpPrintDestSettings_DC().parmReportCaption('Project quotation');

            actionClass.updatePrinterSettingsFormLetter(printSettings.pack());
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>