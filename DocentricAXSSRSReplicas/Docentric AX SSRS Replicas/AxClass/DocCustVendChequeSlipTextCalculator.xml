<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocCustVendChequeSlipTextCalculator</Name>
	<SourceCode>
		<Declaration><![CDATA[
// This class adds an additional column Voucher to standard cheque slip text (used in CustVendCheque.output())
public class DocCustVendChequeSlipTextCalculator extends CustVendChequeSlipTextCalculator
{
    // UNCOMMENT THIS METHOD TO ENABLE THIS FUNCTIONALITY
    /*[PostHandlerFor(classStr(CustVendChequeSlipTextCalculator), staticMethodStr(CustVendChequeSlipTextCalculator, construct))]
    public static void construct_DC(XppPrePostArgs args)
    {
        BankChequeLayout bankChequeLayout = args.getArgNum(0);

        if (!bankChequeLayout.UseGER)
        {
            CustVendChequeSlipTextCalculator calculator = new DocCustVendChequeSlipTextCalculator(bankChequeLayout);
            args.setReturnValue(calculator);
        }
    }*/

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(BankChequeLayout _bankChequeLayout)
    {
        bankChequeLayout = _bankChequeLayout;
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineSlipTextTitleAndEndLinesAdjustmentForColumnHeaders</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determine slip text title and end lines adjustment for column headers.
    /// </summary>
    /// <param name = "_bankChequeTable">The bank check table.</param>
    /// <param name = "_chequeFormType">The check form type.</param>
    /// <returns>The slip text and the end lines adjustment.</returns>
    public container determineSlipTextTitleAndEndLinesAdjustmentForColumnHeaders(
        BankChequeTable _bankChequeTable,
        ChequeFormType _chequeFormType)
    {
        ChequeSlipTxt chequeSlipText;
        Counter endLines;

        if (_chequeFormType == ChequeFormType::USStyle || _chequeFormType == ChequeFormType::CAStyle)
        {
            chequeSlipText += strFmt(
                '%1  %2  %3  %4  %5  %6 %7\n\n',
                "@SYS12371", "@SYS4726", "@SYS7572", "@SYS7354", "@SYS11818", "@SYS4376", "@SYS1943");  // added Voucher column
            endLines = -2;

            return [chequeSlipText, endLines];
        }

        return super(_bankChequeTable, _chequeFormType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineSlipTextAndEndLinesAdjustmentForBankChequePaymTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determine slip text and end lines adjustment for <c>BankChequePaymTrans</c>.
    /// </summary>
    /// <param name = "_bankChequePaymTrans">The bank payment transaction.</param>
    /// <returns>The slip text and the end lines adjustment.</returns>
    protected container determineSlipTextAndEndLinesAdjustmentForBankChequePaymTrans(BankChequePaymTrans _bankChequePaymTrans)
    {
        ChequeSlipTxt chequeSlipText;
        Counter endLines;

        FromDate invoiceDate = _bankChequePaymTrans.InvoiceDate;
        CashDiscAmount cashDiscAmount = _bankChequePaymTrans.CashDiscAmountCur;

        
        if (bankChequeLayout.ChequeFormType == ChequeFormType::USStyle || bankChequeLayout.ChequeFormType == ChequeFormType::CAStyle)
        {
            chequeSlipText += strFmt(
            '%1  %2  %3  %4  %5  %6 %7\n',
            strLFix(_bankChequePaymTrans.Voucher, strLen("@SYS12371")),  // added Voucher column
            strLFix(_bankChequePaymTrans.InvoiceId, 14),
            strLFix(_bankChequePaymTrans.CurrencyCode, 8),
            strLFix(date2StrUsr(invoiceDate), 12),
            strRFix(num2str(-_bankChequePaymTrans.InvoiceAmountCur, 0, 2, -1, -1), 12),
            strRFix(num2str(cashDiscAmount, 0, 2, -1, -1), 13),
            strRFix(num2str(-_bankChequePaymTrans.PaymentAmountCur, 0, 2, -1, -1), 14));

            endLines = -1;

            return [chequeSlipText, endLines];
        }

        return super(_bankChequePaymTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineSlipTextTitleAndEndLinesForSubTotalOrTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the slip text title and end lines for subtotal and total for a page of a cheque report.
    /// </summary>
    /// <param name = "_args">An instance of <c>CustVendChequeSlipTextCalcDeterminSlipTextForTotalParameters</c> class.</param>
    /// <returns>An instance of <c>CustVendChequeSlipTextCalcDeterminSlipTextForTotalReturn</c> class.</returns>
    protected CustVendChequeSlipTextCalcDeterminSlipTextForTotalReturn determineSlipTextTitleAndEndLinesForSubTotalOrTotal(CustVendChequeSlipTextCalcDeterminSlipTextForTotalParameters _args)
    {
        if (bankChequeLayout.ChequeFormType == ChequeFormType::USStyle || bankChequeLayout.ChequeFormType == ChequeFormType::CAStyle)
        {
            CustVendChequeSlipTextCalcDeterminSlipTextForTotalReturn totalReturn = CustVendChequeSlipTextCalcDeterminSlipTextForTotalReturn::construct();
            totalReturn.chequeSlipTxt = strFmt('\n%1 %2', strLFix(_args.chequeSlipTxtLabel, 66 + strLen("@SYS12371") + 1), num2str(_args.TotalAmountCur, 16, 2, -1, -1));
            totalReturn.endLines = -1;

            return totalReturn;
        }

        return super(_args);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>