<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocTMSCertificateOfOriginDSP</Name>
	<SourceCode>
		<Declaration><![CDATA[
class DocTMSCertificateOfOriginDSP extends DocDataSourceProviderSrsReporting
{
    TMSCertificateOfOriginTmp   header;
    WHSShipmentTable            whsShipmentTable;
    WHSLoadTable                whsLoadTable;
    DocTableFieldsMetadata      extensionFieldsMetadata_TMSCertificateOfOriginTmp = DocTableFieldsMetadata::construct(tableStr(TMSCertificateOfOriginTmp));

    #define.TMSCertificateHeader('CertificateHeader')
    #define.TMSCertificateLines('CertificateLines')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public ClassDescription description()
    {
        return 'Certificate of origin DSP';
    }

]]></Source>
			</Method>
			<Method>
				<Name>onSelectedRdpTableRecord</Name>
				<Source><![CDATA[
    protected void onSelectedRdpTableRecord(Common _rdpTableRecord, TableName _rdpTableName)
    {
        super(_rdpTableRecord, _rdpTableName);

        if (_rdpTableName == tableStr(TMSCertificateOfOriginTmp))
        {
            if (!header.RecId)
            {
                header = _rdpTableRecord.data();

                whsShipmentTable = WHSShipmentTable::find(header.ShipmentId_DR);
                whsLoadTable = whsShipmentTable.whsLoadTable();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addDataFieldsForRdpTableRecord</Name>
				<Source><![CDATA[
    protected void addDataFieldsForRdpTableRecord(DocXmlRecord _addingRecord, Common _rdpTableRecord, TableName _rdpTableName)
    {
        if (_rdpTableName == tableStr(TMSCertificateOfOriginTmp))
        {
            // Rename the record 'TMSCertificateOfOriginTmp' -> 'CertificateLines'
            _addingRecord.setRecordName(#TMSCertificateLines);
            _addingRecord.setRecordLabel('Certificate lines');
            _addingRecord.addFieldGroup(tableFieldGroupStr(TMSCertificateOfOriginTmp, LineFields_DR));            
        
            // Add Extension fields defined on TMSCertificateOfOriginTmp, if any.
            // NOTE: Fields will be added to the child record named ExtensionFields. Change the last parameter to false to add
            // Extension fields on flat. If the result doesn't suit you, add your Extension fields directly using the addField() method.
            DocExtensionFieldsHelper::tryAddAllExtensionFieldsToDataRecord(_rdpTableRecord, _addingRecord, true, extensionFieldsMetadata_TMSCertificateOfOriginTmp);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateXmlDataSource</Name>
				<Source><![CDATA[
    protected void generateXmlDataSource(DocXmlRecordBuilder _recordBuilder)
    {
        DocXmlRecord headerDataRecord;

        void addHeaderFields()
        {
            headerDataRecord.addFieldGroup(tableFieldGroupStr(TMSCertificateOfOriginTmp, HeaderFields_DR)); 
        }

        super(_recordBuilder);

        headerDataRecord = _recordBuilder.addRecord(header).setSingleRecord(true);

        // Rename the record 'TMSCommercialInvoiceTmp' -> 'CertificateHeader'.
        headerDataRecord.setRecordName(#TMSCertificateHeader);
        headerDataRecord.setRecordLabel('Certificate header');
        addHeaderFields();

        // Add Custom Fields defined on WHSShipmentTable, WHSLoadTable and CustTable/VendTable, if any.
        // Custom Fields: https://docs.microsoft.com/en-us/dynamics365/unified-operations/fin-and-ops/get-started/user-defined-fields
        DocCustomFieldsHelper::tryAddAllCustomFieldsToDataRecord(whsShipmentTable, headerDataRecord);
        DocCustomFieldsHelper::tryAddAllCustomFieldsToDataRecord(whsLoadTable, headerDataRecord);
        if (header.WorkTransType_DR == WHSWorkTransType::Sales)
        {
            DocCustomFieldsHelper::tryAddAllCustomFieldsToDataRecord(CustTable::find(header.AccountNum_DR), headerDataRecord);
        }
        else if (header.WorkTransType_DR == WHSWorkTransType::Purch)
        {
            DocCustomFieldsHelper::tryAddAllCustomFieldsToDataRecord(VendTable::find(header.AccountNum_DR), headerDataRecord);
        }                   
        
        // Add Extension fields defined on TMSCertificateOfOriginTmp, if any.
        // NOTE: Fields will be added to the child record named ExtensionFields. Change the last parameter to false to add
        // Extension fields on flat. If the result doesn't suit you, add your Extension fields directly using the addField() method.
        DocExtensionFieldsHelper::tryAddAllExtensionFieldsToDataRecord(header, headerDataRecord, true, extensionFieldsMetadata_TMSCertificateOfOriginTmp);
    }

]]></Source>
			</Method>
			<Method>
				<Name>overrideReportRunSettings</Name>
				<Source><![CDATA[
    #define.ExporterName('ExporterName')
    #define.ExporterAddress('ExporterAddress')
    #define.ProducerName('ProducerName')
    #define.ProducerAddress('ProducerAddress')
    #define.ImporterName('ImporterName')
    #define.ImporterAddress('ImporterAddress')
    #define.FromDate('FromDate')
    #define.ToDate('ToDate')

    [DocPlaceholderAttribute(#ExporterName, 'CO - Exporter Name'),
     DocPlaceholderAttribute(#ExporterAddress, 'CO - Exporter Address'),
     DocPlaceholderAttribute(#ProducerName, 'CO - Producer Name'),
     DocPlaceholderAttribute(#ProducerAddress, 'CO - Producer Address'),
     DocPlaceholderAttribute(#ImporterName, 'CO - Importer Name'),
     DocPlaceholderAttribute(#ImporterAddress, 'CO - Importer Address'),
     DocPlaceholderAttribute(#FromDate, 'CO - From Date'),
     DocPlaceholderAttribute(#ToDate, 'CO - To Date')]
    public DocPlaceholderManager overrideReportRunSettings(DocReportRunContext _reportRunContext, boolean _replaceStandardPlaceholders = true)
    {
        // Replace all standard placeholders in the current print destination.
        DocPlaceholderManager placeHolderMng = super(_reportRunContext, _replaceStandardPlaceholders);

        placeHolderMng.replacePlaceholderInCurrentPrintDest(#ExporterName, header.ExporterName);
        placeHolderMng.replacePlaceholderInCurrentPrintDest(#ExporterAddress, header.ExporterAddress);
        placeHolderMng.replacePlaceholderInCurrentPrintDest(#ProducerName, header.ProducerName);
        placeHolderMng.replacePlaceholderInCurrentPrintDest(#ProducerAddress, header.ProducerAddress);
        placeHolderMng.replacePlaceholderInCurrentPrintDest(#ImporterName, header.ImporterName);
        placeHolderMng.replacePlaceholderInCurrentPrintDest(#ImporterAddress, header.ImporterAddress);
        placeHolderMng.replacePlaceholderInCurrentPrintDest(#FromDate, header.FromDate);
        placeHolderMng.replacePlaceholderInCurrentPrintDest(#ToDate, header.ToDate);

        // Fill the Print archive contract.
        if (header.WorkTransType_DR == WHSWorkTransType::Sales)
        {
            _reportRunContext.archiveContract().setCustAccount(header.AccountNum_DR);
        }
        else if (header.WorkTransType_DR == WHSWorkTransType::Purch)
        {
            _reportRunContext.archiveContract().setVendAccount(header.AccountNum_DR);
        }

        _reportRunContext.archiveContract().setWHSShipmentId(header.ShipmentId_DR);

        return placeHolderMng;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>