<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPBatchProdReportUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>PIPBatchProdReportUIBuilder</c> builds the input dialog for the <c>PIPBatchProdReport</c> report.
/// </summary>
class PIPBatchProdReportUIBuilder extends SrsReportDataContractUIBuilder
{
    PIPBatchProdReportContract  contract;

    DialogField                 dialogFieldBPRId;
    DialogField                 dialogFieldQualityProduced;
    DialogField                 dialogFieldIncludePostProduction;

    DialogField                 dialogFieldBPRIdList;
    private FormStringControl   dialogFieldBPRIdListRecIdsControl;
    private const str           DialogFieldBPRIdListRecIdsControllName = 'dialogFieldBPRIdListRecIdsControl';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>batchProdIdLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates the lookup for the Batch production ID field.
    /// </summary>
    /// <param name="_formStringControl">
    ///     The control for which the lookup field need to be associated.
    /// </param>
    public void batchProdIdLookup(FormStringControl _formStringControl)
    {
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSource;
        QueryBuildRange         queryBuildRange1;
    
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(ProdTable), _formStringControl);
    
        sysTableLookup.addLookupField(fieldNum(ProdTable, PIPBatchProdId));
        sysTableLookup.addLookupField(fieldNum(ProdTable, ProdId));
        sysTableLookup.addLookupfield(fieldNum(ProdTable, ItemId));
    
        queryBuildDataSource = query.addDataSource(tableNum(ProdTable));
    
        queryBuildDataSource.addSortField(fieldNum(ProdTable, PIPBatchProdId));
    
        queryBuildRange1 = queryBuildDataSource.addRange(fieldNum(ProdTable, PIPBatchProdId));
        queryBuildRange1.value(SysQuery::valueNotEmptyString());
    
        sysTableLookup.parmQuery(query);
    
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefBatchProdId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates a hyperlink to the Batch production record.
    /// </summary>
    /// <param name = "_batchProdId">
    ///     The control for which the hyperlink need to be associated.
    /// </param>
    public void jumpRefBatchProdId(FormStringControl _batchProdId)
    {
        MenuFunction    menuFunction;
        Args            args = new Args();

        container batchProdIds = str2con(_batchProdId.text(),";");
        
        menuFunction = new MenuFunction(menuitemDisplayStr(PIPBatchProdRecord), MenuItemType::Display);

        ProdTable prodTable;

        select prodTable
            where prodTable.PIPBatchProdId == _batchProdId.text();
        
        args.record(prodTable);
        args.caller(this);

        menuFunction.copyCallerQuery(CopyCallerQuery::No);
        menuFunction.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Builds the layout for the report dialog.
    /// </summary>
    public void build()
    {
        contract            = this.dataContractObject() as PIPBatchProdReportContract;

        this.addDialogField(methodStr(PIPBatchProdReportContract, parmBatchProdId));
        this.addDialogField(methodStr(PIPBatchProdReportContract, parmBatchProdIdList));
    
        this.dialog().addGroup("@PIP530");
    
        dialogFieldQualityProduced = this.addDialogField(methodStr(PIPBatchProdReportContract, parmShowQualityProduced));
        dialogFieldIncludePostProduction = this.addDialogField(methodStr(PIPBatchProdReportContract, parmIncludePostProductionQuality));
        this.addDialogField(methodStr(PIPBatchProdReportContract, parmShowBatchProduced));
    
        this.dialog().addGroup("@PIP4004");
    
        this.addDialogField(methodStr(PIPBatchProdReportContract, parmShowQualityIngredient));
        this.addDialogField(methodStr(PIPBatchProdReportContract, parmShowBatchIngredient));
        this.addDialogField(methodStr(PIPBatchProdReportContract, parmShowVendBatch));

        this.dialog().addGroup("@SYS54502");
        this.addDialogField(methodStr(PIPBatchProdReportContract, parmUsePrintManagement));
    }

]]></Source>
			</Method>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes the dialog fields after the fields are build.
    /// </summary>
    public void postBuild()
    {
        #define.LabelWidth30(30)
        #define.DisplayLength20(20)
    
        contract            = this.dataContractObject() as PIPBatchProdReportContract;
    
        dialogFieldBPRId    = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(PIPBatchProdReportContract, parmBatchProdId));
        dialogFieldBPRIdList = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(PIPBatchProdReportContract, parmBatchProdIdList));
    
        super();
    
        dialogFieldBPRId.labelWidth(#LabelWidth30);
        dialogFieldBPRId.displayLength(#DisplayLength20);
        
        dialogFieldBPRIdList.labelWidth(#LabelWidth30);
        dialogFieldBPRIdList.displayLength(#DisplayLength20);

        if (ProdParameters::find().PIPAllowEBRMulitSelect)
        {
            dialogFieldBPRId.visible(false);
        }
        else
        {
            dialogFieldBPRIdList.visible(false);
        }

        if (!dialogFieldQualityProduced.value())
        {
            dialogFieldIncludePostProduction.value(false);
            dialogFieldIncludePostProduction.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Registers the dialog field methods to capture events.
    /// </summary>
    public void postRun()
    {
        Dialog dialogLocal = this.dialog();
    
        //super();
    
        // This method should be called in order to handle events on dialogs.
        dialogLocal.dialogForm().formRun().controlMethodOverload(false);
    
        // Override the methods of Batch production record ID field.
        dialogFieldBPRId = this.bindInfo().getDialogField(this.dataContractObject(), methodstr(PIPBatchProdReportContract, parmBatchProdId));
        dialogFieldBPRId.registerOverrideMethod(methodstr(FormStringControl, lookup), methodstr(PIPBatchProdReportUIBuilder, batchProdIdLookup), this);
        dialogFieldBPRId.registerOverrideMethod(methodStr(FormStringControl, jumpRef), methodStr(PIPBatchProdReportUIBuilder, jumpRefBatchProdId), this);       

        dialogFieldQualityProduced.registerOverrideMethod(methodStr(FormCheckBoxControl, modified), methodStr(PIPBatchProdReportUIBuilder, showQualityProducedModified), this);

        dialogFieldBPRIdList = this.bindInfo().getDialogField(this.dataContractObject(), methodstr(PIPBatchProdReportContract, parmBatchProdIdList));
        dialogFieldBPRIdList.registerOverrideMethod(methodStr(FormStringControl, lookup), methodStr(PIPBatchProdReportUIBuilder, batchProdIdListLookup),this);
        
        SysOperationDialog reportDialogBox = this.dialog();
        dialogFieldBPRIdListRecIdsControl = reportDialogBox.formRun().design().addControl(FormControlType::String, DialogFieldBPRIdListRecIdsControllName);
        dialogFieldBPRIdListRecIdsControl.visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQualityProducedModified</Name>
				<Source><![CDATA[
    public boolean showQualityProducedModified(FormCheckBoxControl _formCheckBoxControl)
    {
        if (!dialogFieldQualityProduced.value())
        {
            dialogFieldIncludePostProduction.value(false);
            dialogFieldIncludePostProduction.enabled(false);
        }
        else
        {
            dialogFieldIncludePostProduction.enabled(true);
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>batchProdIdListLookup</Name>
				<Source><![CDATA[
    private void batchProdIdListLookup(FormStringControl _control)
    {
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSource;
        QueryBuildRange         queryBuildRange1;
    
        queryBuildDataSource = query.addDataSource(tableNum(ProdTable));
    
        queryBuildDataSource.addSortField(fieldNum(ProdTable, PIPBatchProdId));
    
        queryBuildRange1 = queryBuildDataSource.addRange(fieldNum(ProdTable, PIPBatchProdId));
        queryBuildRange1.value(SysQuery::valueNotEmptyString());
        
        QueryBuildFieldList qbfl = queryBuildDataSource.fields();
        qbfl.dynamic(false);
        qbfl.clearFieldList();
        qbfl.addField(fieldNum(ProdTable, PIPBatchProdId));
        qbfl.addField(fieldNum(ProdTable, ProdId));
        qbfl.addField(fieldNum(ProdTable, ItemId));

        SysLookupMultiSelectGrid::lookup(query, _control, dialogFieldBPRIdListRecIdsControl, _control, conNull());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>