<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPEBRInventQualityOrderValidate_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(InventQualityOrderValidate))]
public final class PIPEBRInventQualityOrderValidate_Extension
{
    private const str SharedVariableProcedure = 'PIPEBRInventQualityOrderValidate.esigProcedure';

    private PIPSIGQualityOrderStatusUpdateProcedure orderStatusUpdateProcedure;
    private boolean signatureRequired;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmPIPQualityStatusChangeProcedure</Name>
				<Source><![CDATA[
    public PIPSIGQualityOrderStatusUpdateProcedure parmPIPQualityStatusChangeProcedure(PIPSIGQualityOrderStatusUpdateProcedure _orderStatusUpdateProcedure = orderStatusUpdateProcedure)
    {
        orderStatusUpdateProcedure = _orderStatusUpdateProcedure;
    
        return orderStatusUpdateProcedure;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyInventQualityOrder</Name>
				<Source><![CDATA[
    protected void modifyInventQualityOrder(InventTestOrderStatus _orderStatus)
    {
        next modifyInventQualityOrder(_orderStatus);

        if (orderStatusUpdateProcedure)
        {
            orderStatusUpdateProcedure.captureDelayedSignature(inventQualityOrderTable);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustSkipRunPromptWithArgs</Name>
				<Source><![CDATA[
    protected static boolean mustSkipRunPromptWithArgs(Args _args)
    {
        boolean mustSkip = next mustSkipRunPromptWithArgs(_args);

        if (!mustSkip && isConfigurationkeyEnabled(configurationKeyNum(PIPEBR)))
        {
            InventQualityOrderTable record = _args.record() as InventQualityOrderTable;
            PIPSIGQualityOrderStatusUpdateProcedure procedure = PIPSIGQualityOrderStatusUpdateProcedure::newQualityOrder(record);
            if (procedure.signatureRequired())
            {
                if (procedure.sign())
                {
                    PIPThreadVariable::save(SharedVariableProcedure, procedure);
                }
                else
                {
                    mustSkip = true;
                }
            }
        }

        return mustSkip;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runPrompt</Name>
				<Source><![CDATA[
    protected static boolean runPrompt(InventQualityOrderValidate _inventQualityOrderValidate)
    {
        boolean ret = next runPrompt(_inventQualityOrderValidate);

        if (isConfigurationkeyEnabled(configurationKeyNum(PIPEBR)))
        {
            PIPSIGQualityOrderStatusUpdateProcedure procedure = PIPThreadVariable::get(SharedVariableProcedure, true);
            if (procedure)
            {
                _inventQualityOrderValidate.signatureRequired = true;
                _inventQualityOrderValidate.parmPIPQualityStatusChangeProcedure(procedure);
            }
        }
        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        boolean newSessionOk = next canRunInNewSession();

        return newSessionOk && !signatureRequired;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>