<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPSIGProdRAFJournalPostProcedure</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>PIPSIGProdRAFJournalPostProcedure</c> class is for the built-in report as finished production journal posting based signature providers.
/// </summary>
[PIPSIGProdJournalPostProcedureAttribute(ProdJournalType::ReportFinished)]
class PIPSIGProdRAFJournalPostProcedure extends PIPSIGProdJournalPostProcedure
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAuditFieldList</Name>
				<Source><![CDATA[
    public container getAuditFieldList()
    {
        return super() + [[DatabaseLogType::Update, tableNum(ProdJournalProd), fieldNum(ProdJournalProd, PIPActivateSignature)]];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalTable</Name>
				<Source><![CDATA[
    protected JournalTableMap parmJournalTable(JournalTableMap _journalTable = null)
    {
        ProdJournalProd prodJournalProd;
    
        if (!prmisDefault(_journalTable))
        {
            super(_journalTable);
    
            if (this.signatureRequired())
            {
                while select prodJournalProd
                    where prodJournalProd.JournalId == journalTable.JournalId
                {
                    docList.addEnd(SIGBaseDocument::newDatabaseLog(DatabaseLogType::Update, prodJournalProd));
                }
            }
        }
    
        return journalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pipActivationChangeAllowed</Name>
				<Source><![CDATA[
    public boolean pipActivationChangeAllowed(boolean activated)
    {
        boolean ret = true;
    
        if (activated)
        {
            ret = Box::okCancel(strFmt("@PIP540"), DialogButton::Cancel) == DialogButton::Ok;
        }
        else
        {
            ret = Box::okCancel(strFmt("@PIP541"), DialogButton::Cancel) == DialogButton::Ok;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectLinesForSignature</Name>
				<Source><![CDATA[
    public PIPRecordSigningList selectLinesForSignature()
    {
        PIPRecordSigningList    journalLinesList = PIPRecordSigningList::newTableId(tableNum(ProdJournalProd));
        ProdJournalProd         prodJournalProd;
    
        while select forUpdate prodJournalProd
            where prodJournalProd.JournalId == journalTable.JournalId
        {
            prodJournalProd.PIPActivateSignature = !prodJournalProd.PIPActivateSignature;
            journalLinesList.add(prodJournalProd);
        }
    
        return journalLinesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PIPSIGProdRAFJournalPostProcedure construct()
    {
        return new PIPSIGProdRAFJournalPostProcedure();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    server static public ClassDescription description()
    {
        return "@PIP426";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>