<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPEBRBOMTableForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(BOMTable))]
public final class PIPEBRBOMTableForm_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>DocuRef_TypeId_OnLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormControlEventHandler(formControlStr(BOMTable, DocuRef_TypeId), FormControlEventType::Lookup)]
    public void DocuRef_TypeId_OnLookup(FormControl sender, FormControlEventArgs e)
    {
        DocuType::lookupDocuTypeNote(sender);

        FormControlCancelableSuperEventArgs ce = e as FormControlCancelableSuperEventArgs;
        ce.CancelSuperCall();
    }

]]></Source>
			</Method>
			<Method>
				<Name>BOMTable_OnActivated</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataSourceEventHandler(formDataSourceStr(BOMTable, BOMTable), FormDataSourceEventType::Activated)]
    public void BOMTable_OnActivated(FormDataSource sender, FormDataSourceEventArgs e)
    {
        this.pipSetWorkInstructions();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pipSetWorkInstructions</Name>
				<Source><![CDATA[
    private void pipSetWorkInstructions()
    {
        boolean lockWorkInstruction = #PIPEBREnabled && (!BOMParameters::find().BlockEditing || !bomTable.isApproved());
        
        DocuRef_DS.allowCreate(lockWorkInstruction);
        DocuRef_DS.allowEdit(lockWorkInstruction);
        DocuRef_DS.allowDelete(lockWorkInstruction);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>