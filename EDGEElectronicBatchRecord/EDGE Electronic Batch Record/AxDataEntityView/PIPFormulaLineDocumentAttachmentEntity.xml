<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPFormulaLineDocumentAttachmentEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Entity used to import/export document attachments for the <c>BOMVersion</c> table.
/// </summary>
public class PIPFormulaLineDocumentAttachmentEntity extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates virtual fields.
    /// </summary>
    public void postLoad()
    {
        super();

        // Virtual fields are not auto-populated from the base entity, so an extra select is necessary.
        if (this.RecId && this.DocumentId != emptyGuid())
        {
            DocuRefEntity baseEntity;
            select firstonly baseEntity where baseEntity.DocumentId == this.DocumentId;
            this.Attachment = baseEntity.FileContents;
            this.fieldExternallySet(fieldNum(PIPFormulaLineDocumentAttachmentEntity, Attachment), false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common      ret;
        InventDim   inventDim;

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(PIPFormulaLineDocumentAttachmentEntity, InventDim):
                inventDim = this.initializeInventDimDataSource();
                ret = InventDim::findDim(inventDim);
                break;

            case dataEntityDataSourceStr(PIPFormulaLineDocumentAttachmentEntity, FormulaLine):
                inventDim = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(PIPFormulaLineDocumentAttachmentEntity, InventDim)).getBuffer();
                BOM bom;
                BOMTable bomTable;
                select firstonly bom where bom.BOMId == this.FormulaId && bom.ItemId == this.ItemNumber && bom.InventDimId == inventDim.InventDimId && bom.FromDate == this.ValidFromDate && bom.BOMQty == this.Quantity
                    exists join bomTable where bomTable.BOMId == bom.BOMId && bomTable.PmfBOMFormula == PmfBOMFormula::Formula;
                ret = bom;
                break;

            default:
                ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeInventDimDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an <c>InventDim</c> record based on the values from an entity.
    /// </summary>
    /// <returns>An initialized <c>InventDim</c> record.</returns>
    protected InventDim initializeInventDimDataSource()
    {
        InventDim inventDim = InventProductDimension::createInventDimFromTable(this);

        inventDim.InventSiteId = this.ConsumptionSiteId;
        inventDim.InventLocationId = this.ConsumptionWarehouseId;

        return inventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCTQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the default change tracking query.
    /// </summary>
    /// <returns>The default change tracking query.</returns>
    public static Query defaultCTQuery()
    {
        Query billOfMaterialsDocumentAttachmentQuery = new Query();

        var docuRefDS = billOfMaterialsDocumentAttachmentQuery.addDataSource(tableNum(DocuRef));

        var docuValue = docuRefDS.addDataSource(tableNum(DocuValue));
        docuValue.joinMode(JoinMode::OuterJoin);
        docuValue.relations(true);

        var bomDS = docuRefDS.addDataSource(tableNum(BOM));
        bomDS.addLink(fieldNum(DocuRef, RefTableId), fieldNum(BOM, TableId));
        bomDS.addLink(fieldNum(DocuRef, RefRecId), fieldNum(BOM, RecId));
        bomDS.addLink(fieldNum(DocuRef, RefCompanyId), fieldNum(BOM, DataAreaId));

        var bomTableDS = bomDS.addDataSource(tableNum(BOMTable));
        bomTableDS.relations(true);
        bomTableDS.addRange(fieldNum(BOMTable, PmfBOMFormula)).value(queryValue(PmfBOMFormula::Formula));

        var inventDimDS = bomDS.addDataSource(tableNum(InventDim));
        inventDimDS.relations(true);

        return billOfMaterialsDocumentAttachmentQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        DocuRefEntity docuRefEntity;
        DocuRefEntity docuRefEntityOrig;

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(PIPFormulaLineDocumentAttachmentEntity, DocuRefEntity))
        {
            docuRefEntity = _dataSourceCtx.getBuffer();
            docuRefEntityOrig = docuRefEntity.data();
        }

        super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(PIPFormulaLineDocumentAttachmentEntity, DocuRefEntity))
        {
            // Must clear the unchanged fields 'externally set' indicator because the underlying data source will not allow updating the records if any non-whitelisted field is changed but
            // the calling data source automatically sets all fields on the underlying data source buffer, even if the values are the same as the original field value.
            PIPFormulaLineDocumentAttachmentEntity::clearExternallySetForUnchangedFields(docuRefEntityOrig, docuRefEntity);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearExternallySetForUnchangedFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clears the field externally set indicatory for a data entity buffer if the field value has not actually been changed.
    /// </summary>
    /// <param name = "_orig">The original data entity buffer.</param>
    /// <param name = "_buffer">The data entity buffer to check and clear the indicator on.</param>
    /// <remarks>This checks each field, if field external set is true for that field but the field value in <paramref name="_orig"/> exactly matches the field value in <paramref name="_buffer"/>
    /// then the field extern set indicator for that field will be changed to false.</remarks>
    public static void clearExternallySetForUnchangedFields(Common _orig, Common _buffer)
    {
        DictDataEntity dictEntity = new DictDataEntity(_buffer.TableId);

        for (int i = 1; i <= dictEntity.fieldCnt(); i++)
        {
            FieldId fieldId = dictEntity.fieldCnt2Id(i);

            if (_buffer.fieldExternallySet(fieldId) && _orig.(fieldId) == _buffer.(fieldId))
            {
                _buffer.fieldExternallySet(fieldId, false);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PIPEBR</ConfigurationKey>
	<FormRef>DocuView</FormRef>
	<Label>@PIP:FormulaLineDocumentAttachmentEntity</Label>
	<Tags>ISV Formula EBR</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>PIPFormulaLineDocumentAttachmentStaging</DataManagementStagingTable>
	<Modules>ProductInformationManagement</Modules>
	<PrimaryCompanyContext>ActualCompanyId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DocumentId</Name>
			<DataField>DocumentId</DataField>
			<DataSource>DocuRefEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DocumentAttachmentTypeCode</Name>
			<DataField>TypeId</DataField>
			<DataSource>DocuRefEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AttachmentDescription</Name>
			<DataField>Name</DataField>
			<DataSource>DocuRefEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Notes</Name>
			<DataField>Notes</DataField>
			<DataSource>DocuRefEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccessRestriction</Name>
			<DataField>Restriction</DataField>
			<DataSource>DocuRefEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Attachment</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>FileContents</DataField>
			<DataSource>DocuRefEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FileName</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>FileName</DataField>
			<DataSource>DocuRefEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FileType</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>FileType</DataField>
			<DataSource>DocuRefEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ActualCompanyId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ActualCompanyId</DataField>
			<DataSource>DocuRefEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsDefaultAttachment</Name>
			<DataField>DefaultAttachment</DataField>
			<DataSource>DocuRefEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>ItemId</DataField>
			<DataSource>FormulaLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FormulaId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>BOMId</DataField>
			<DataSource>FormulaHeader</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ValidFromDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>FromDate</DataField>
			<DataSource>FormulaLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Quantity</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>BOMQty</DataField>
			<DataSource>FormulaLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductConfigurationId</Name>
			<DataField>configId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductColorId</Name>
			<DataField>InventColorId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductSizeId</Name>
			<DataField>InventSizeId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductStyleId</Name>
			<DataField>InventStyleId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductVersionId</Name>
			<DataField>InventVersionId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ConsumptionSiteId</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ConsumptionWarehouseId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>DocumentId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>DocuRefEntity</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>DocuRefEntity</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>FormulaLine</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>BOM</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>InventDim</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>InventDim</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>InventDimId</Field>
										<JoinDataSource>FormulaLine</JoinDataSource>
										<RelatedField>inventDimId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>FormulaHeader</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>BOMTable</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges>
									<AxQuerySimpleDataSourceRange>
										<Name>PmfBOMFormula</Name>
										<Field>PmfBOMFormula</Field>
										<Status>Hidden</Status>
										<Value>Formula</Value>
									</AxQuerySimpleDataSourceRange>
								</Ranges>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>BOMTable</Name>
										<JoinRelationName>BOMTable</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RefTableId</Field>
								<JoinDataSource>DocuRefEntity</JoinDataSource>
								<RelatedField>TableId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>RefRecId</Field>
								<JoinDataSource>DocuRefEntity</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation3</Name>
								<Field>RefCompanyId</Field>
								<JoinDataSource>DocuRefEntity</JoinDataSource>
								<RelatedField>DataAreaId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>