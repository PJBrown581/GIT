<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GGIWHSFixedProductWarehouseLocationEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class GGIWHSFixedProductWarehouseLocationEntity extends common
{
}

]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        // The method super should not be called here, because method saveDataSources from the persister class will throw an exception when trying to resolve datasource.
        // super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(WHSFixedProductWarehouseLocationV2Entity, WHSFixedProductWarehouseLocation))
        {
            // Need to assign RecId in order to get around the check for RecId in <c>DMFEntityBase</c> class
            // in insertUpdate method which throws an error if RecId is not set and insert happened.
            this.RecId = this.insertFixedLocationRecord();
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(WHSFixedProductWarehouseLocationV2Entity, WHSFixedProductWarehouseLocation))
        {
            // Need to assign RecId in order to get around the check for RecId in <c>DMFEntityBase</c> class
            // in insertUpdate method which throws an error if RecId is not set and insert happened.
            this.RecId = this.updateFixedLocationRecord();
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteEntityDataSource</Name>
				<Source><![CDATA[
    public boolean deleteEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean isDeleted;

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(WHSFixedProductWarehouseLocationV2Entity, WHSFixedProductWarehouseLocation))
        {
            ttsbegin;

            InventDim inventDim = this.InventInventoryDimensionEntityFieldsMapping::resolveInventDim();

            if (inventDim && this.InventInventoryDimensionEntityFieldsMapping::anyProductDimensionSpecified())
            {
                WHSProductVariantFixedLocation whsProductVariantFixedLocation;

                while select forupdate whsProductVariantFixedLocation
                    where whsProductVariantFixedLocation.ItemId == this.ItemNumber
                        && whsProductVariantFixedLocation.InventLocationId == this.WarehouseId
                        && whsProductVariantFixedLocation.WMSLocationId == this.WarehouseLocationId
                        && whsProductVariantFixedLocation.ProductVariantInventDimId == inventDim.InventDimId
                {
                    WHSDataEntityValidationHelper::validateAndDeleteRecord(whsProductVariantFixedLocation);
                }
            }

            WHSInventFixedLocation whsInventFixedLocation;

            while select forupdate whsInventFixedLocation
                where whsInventFixedLocation.ItemId == this.ItemNumber
                    && whsInventFixedLocation.InventLocationId == this.WarehouseId
                    && whsInventFixedLocation.WMSLocationId == this.WarehouseLocationId
                    && whsInventFixedLocation.InventSiteId == InventLocation::find(this.WarehouseId).InventSiteId
            {
                WHSDataEntityValidationHelper::validateAndDeleteRecord(whsInventFixedLocation);
            }

            ttscommit;

            isDeleted = true;
        }
        else
        {
            isDeleted = super(_entityCtx, _dataSourceCtx);
        }
    
        return isDeleted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertFixedLocationRecord</Name>
				<Source><![CDATA[
    private RecId insertFixedLocationRecord()
    {
        InventDim inventDim = this.InventInventoryDimensionEntityFieldsMapping::resolveInventDim();

        if (inventDim && this.InventInventoryDimensionEntityFieldsMapping::anyProductDimensionSpecified())
        {
            WHSProductVariantFixedLocation productVariantFixedLocation = this.initWHSProductVariantFixedLocation(inventDim.inventDimId);
            WHSDataEntityValidationHelper::validateAndInsertRecord(productVariantFixedLocation);
            return productVariantFixedLocation.RecId;
        }

        InventLocation inventLocation = InventLocation::find(this.WarehouseId);
        WHSInventFixedLocation itemFixedLocation = this.initWHSInventFixedLocation(inventLocation.InventSiteId);
        WHSDataEntityValidationHelper::validateAndInsertRecord(itemFixedLocation);
        return itemFixedLocation.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFixedLocationRecord</Name>
				<Source><![CDATA[
    private RecId updateFixedLocationRecord()
    {
        InventDim inventDim = this.InventInventoryDimensionEntityFieldsMapping::resolveInventDim();

        if (inventDim && this.InventInventoryDimensionEntityFieldsMapping::anyProductDimensionSpecified())
        {
            WHSProductVariantFixedLocation productVariantFixedLocation = this.retrieveWHSProductVariantFixedLocationForUpdate(inventDim.inventDimId);
            WHSDataEntityValidationHelper::validateAndUpdateRecord(productVariantFixedLocation);
            return productVariantFixedLocation.RecId;
        }

        InventLocation inventLocation = InventLocation::find(this.WarehouseId);
        WHSInventFixedLocation itemFixedLocation = this.retrieveWHSInventFixedLocationForUpdate(inventLocation.InventSiteId);
        WHSDataEntityValidationHelper::validateAndUpdateRecord(itemFixedLocation);
        return itemFixedLocation.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWHSProductVariantFixedLocation</Name>
				<Source><![CDATA[
    private WHSProductVariantFixedLocation initWHSProductVariantFixedLocation(InventDimId _inventDimId)
    {
        WHSProductVariantFixedLocation productVariantFixedLocation;

        productVariantFixedLocation.InventLocationId            = this.WarehouseId;
        productVariantFixedLocation.WMSLocationId               = this.WarehouseLocationId;
        productVariantFixedLocation.ItemId                      = this.ItemNumber;
        productVariantFixedLocation.ProductVariantInventDimId   = _inventDimId;

        return productVariantFixedLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveWHSProductVariantFixedLocationForUpdate</Name>
				<Source><![CDATA[
    private WHSProductVariantFixedLocation retrieveWHSProductVariantFixedLocationForUpdate(InventDimId _inventDimId)
    {
        WHSProductVariantFixedLocation productVariantFixedLocation;

        select firstonly forupdate productVariantFixedLocation
            where productVariantFixedLocation.ItemId						== this.ItemNumber
                && productVariantFixedLocation.ProductVariantInventDimId	== _inventDimId
                && productVariantFixedLocation.InventLocationId				== this.WarehouseId
                && productVariantFixedLocation.WMSLocationId				== this.WarehouseLocationId;

        return productVariantFixedLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWHSInventFixedLocation</Name>
				<Source><![CDATA[
    private WHSInventFixedLocation initWHSInventFixedLocation(InventSiteId _siteId)
    {
        WHSInventFixedLocation  itemFixedLocation;

        itemFixedLocation.InventSiteId      = _siteId;
        itemFixedLocation.InventLocationId  = this.WarehouseId;
        itemFixedLocation.WMSLocationId     = this.WarehouseLocationId;
        itemFixedLocation.ItemId            = this.ItemNumber;

        return itemFixedLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveWHSInventFixedLocationForUpdate</Name>
				<Source><![CDATA[
    private WHSInventFixedLocation retrieveWHSInventFixedLocationForUpdate(InventSiteId _siteId)
    {
        WHSInventFixedLocation itemFixedLocation;

        select firstonly forupdate itemFixedLocation
            where itemFixedLocation.ItemId				== this.ItemNumber
                && itemFixedLocation.InventLocationId	== this.WarehouseId
                && itemFixedLocation.InventSiteId		== _siteId
                && itemFixedLocation.WMSLocationId		== this.WarehouseLocationId;

        return itemFixedLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>configurationIdDefinition</Name>
				<Source><![CDATA[
    private static str configurationIdDefinition()
    {
		return SysComputedColumn::if(
            SysComputedColumn::isNullExpression(
                SysComputedColumn::returnField(tablestr(WHSFixedProductWarehouseLocationV2Entity), dataEntityDataSourceStr(WHSFixedProductWarehouseLocationV2Entity, InventDim), fieldStr(InventDim, configId))),
            SysComputedColumn::returnLiteral(''),
            SysComputedColumn::returnField(tablestr(WHSFixedProductWarehouseLocationV2Entity), dataEntityDataSourceStr(WHSFixedProductWarehouseLocationV2Entity, InventDim), fieldStr(InventDim, configId)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>sizeIdDefinition</Name>
				<Source><![CDATA[
    private static str sizeIdDefinition()
    {
        return SysComputedColumn::if(
            SysComputedColumn::isNullExpression(
                SysComputedColumn::returnField(tablestr(WHSFixedProductWarehouseLocationV2Entity), dataEntityDataSourceStr(WHSFixedProductWarehouseLocationV2Entity, InventDim), fieldStr(InventDim, InventSizeId))),
            SysComputedColumn::returnLiteral(''),
            SysComputedColumn::returnField(tablestr(WHSFixedProductWarehouseLocationV2Entity), dataEntityDataSourceStr(WHSFixedProductWarehouseLocationV2Entity, InventDim), fieldStr(InventDim, InventSizeId)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>colorIdDefinition</Name>
				<Source><![CDATA[
    private static str colorIdDefinition()
    {
        return SysComputedColumn::if(
            SysComputedColumn::isNullExpression(
                SysComputedColumn::returnField(tablestr(WHSFixedProductWarehouseLocationV2Entity), dataEntityDataSourceStr(WHSFixedProductWarehouseLocationV2Entity, InventDim), fieldStr(InventDim, InventColorId))),
            SysComputedColumn::returnLiteral(''),
            SysComputedColumn::returnField(tablestr(WHSFixedProductWarehouseLocationV2Entity), dataEntityDataSourceStr(WHSFixedProductWarehouseLocationV2Entity, InventDim), fieldStr(InventDim, InventColorId)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>styleIdDefinition</Name>
				<Source><![CDATA[
    private static str styleIdDefinition()
    {
        return SysComputedColumn::if(
            SysComputedColumn::isNullExpression(
                SysComputedColumn::returnField(tablestr(WHSFixedProductWarehouseLocationV2Entity), dataEntityDataSourceStr(WHSFixedProductWarehouseLocationV2Entity, InventDim), fieldStr(InventDim, InventStyleId))),
            SysComputedColumn::returnLiteral(''),
            SysComputedColumn::returnField(tablestr(WHSFixedProductWarehouseLocationV2Entity), dataEntityDataSourceStr(WHSFixedProductWarehouseLocationV2Entity, InventDim), fieldStr(InventDim, InventStyleId)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>versionIdDefinition</Name>
				<Source><![CDATA[
    private static str versionIdDefinition()
    {
        return SysComputedColumn::if(
            SysComputedColumn::isNullExpression(
                SysComputedColumn::returnField(tablestr(WHSFixedProductWarehouseLocationV2Entity), dataEntityDataSourceStr(WHSFixedProductWarehouseLocationV2Entity, InventDim), fieldStr(InventDim, InventVersionId))),
            SysComputedColumn::returnLiteral(''),
            SysComputedColumn::returnField(tablestr(WHSFixedProductWarehouseLocationV2Entity), dataEntityDataSourceStr(WHSFixedProductWarehouseLocationV2Entity, InventDim), fieldStr(InventDim, InventVersionId)));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:WHSFixedProductWarehouseLocationEntityDevDoc</DeveloperDocumentation>
	<FormRef>WHSInventFixedLocation</FormRef>
	<Label>@GGI:FixedProductLocationEntity</Label>
	<Tags>Fixed Product Locations</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>WHSFixedProductWarehouseLocationV2Staging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>WMS</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>WHSFixedProductWarhouseLocationEntities</PublicCollectionName>
	<PublicEntityName>WHSFixedProductWarhouseLocationEntity</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemNumber</Name>
			<AllowEdit>No</AllowEdit>
			<Mandatory>Yes</Mandatory>
			<DataField>ItemId</DataField>
			<DataSource>WHSFixedProductWarehouseLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ProductConfigurationId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>configurationIdDefinition</ComputedFieldMethod>
			<ExtendedDataType>EcoResItemConfigurationName</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ProductSizeId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>sizeIdDefinition</ComputedFieldMethod>
			<ExtendedDataType>EcoResItemSizeName</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ProductColorId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>colorIdDefinition</ComputedFieldMethod>
			<ExtendedDataType>EcoResItemColorName</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ProductStyleId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>styleIdDefinition</ComputedFieldMethod>
			<ExtendedDataType>EcoResItemStyleName</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ProductVersionId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>versionIdDefinition</ComputedFieldMethod>
			<ExtendedDataType>EcoResItemVersionName</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InternalConfigurationId</Name>
			<AccessModifier>Private</AccessModifier>
			<AllowEdit>No</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>configId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InternalSizeId</Name>
			<AccessModifier>Private</AccessModifier>
			<AllowEdit>No</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>InventSizeId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InternalColorId</Name>
			<AccessModifier>Private</AccessModifier>
			<AllowEdit>No</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>InventColorId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InternalStyleId</Name>
			<AccessModifier>Private</AccessModifier>
			<AllowEdit>No</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>InventStyleId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InternalVersionId</Name>
			<AccessModifier>Private</AccessModifier>
			<AllowEdit>No</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>InventVersionId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseId</Name>
			<AllowEdit>No</AllowEdit>
			<Mandatory>Yes</Mandatory>
			<DataField>InventLocationId</DataField>
			<DataSource>WHSFixedProductWarehouseLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseLocationId</Name>
			<AllowEdit>No</AllowEdit>
			<Mandatory>Yes</Mandatory>
			<DataField>WMSLocationId</DataField>
			<DataSource>WHSFixedProductWarehouseLocation</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ItemNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductConfigurationId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductSizeId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductColorId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductStyleId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductVersionId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>WarehouseId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>WarehouseLocationId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>InventInventoryDimensionEntityFieldsMapping</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>configId</MapField>
					<MapFieldTo>ProductConfigurationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventBatchId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventColorId</MapField>
					<MapFieldTo>ProductColorId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventGTDId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventOwnerId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventProfileId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventSerialId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSizeId</MapField>
					<MapFieldTo>ProductSizeId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStatusId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStyleId</MapField>
					<MapFieldTo>ProductStyleId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventVersionId</MapField>
					<MapFieldTo>ProductVersionId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LicensePlateId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSLocationId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSPalletId</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ProductConfiguration</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResProductConfigurationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ProductConfiguration</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>FixedProductWarehouseLocationsV2</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>EcoResProductConfigurationEntity_ConfigurationId</Name>
					<Field>ProductConfigurationId</Field>
					<RelatedField>ConfigurationId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ProductColor</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResProductColorEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ProductColor</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>FixedProductWarehouseLocationsV2</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>EcoResProductColorEntity_ColorId</Name>
					<Field>ProductColorId</Field>
					<RelatedField>ColorId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>ProductColorKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ProductSize</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResProductSizeEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ProductSize</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>FixedProductWarehouseLocationsV2</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>EcoResProductSizeEntity_SizeId</Name>
					<Field>ProductSizeId</Field>
					<RelatedField>SizeId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>ProductSizeKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ProductStyle</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResProductStyleEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ProductStyle</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>FixedProductWarehouseLocationsV2</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>EcoResProductStyleEntity_StyleId</Name>
					<Field>ProductStyleId</Field>
					<RelatedField>StyleId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>ProductStyleKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ProductVersion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResProductVersionEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ProductVersion</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>FixedProductWarehouseLocationsV2</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>EcoResProductVersionEntity_VersionId</Name>
					<Field>ProductVersionId</Field>
					<RelatedField>VersionId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>ProductVersionKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>Warehouse</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>InventWarehouseEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>Warehouse</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>FixedProductWarehouseLocationsV2</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>InventWarehouseEntity_WarehouseId</Name>
					<Field>WarehouseId</Field>
					<RelatedField>WarehouseId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>WarehouseKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>WarehouseLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>WMSWarehouseLocationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>WarehouseLocation</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>FixedProductWarehouseLocationsV2</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WMSWarehouseLocationEntity_WarehouseId</Name>
					<Field>WarehouseId</Field>
					<RelatedField>WarehouseId</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WMSWarehouseLocationEntity_WarehouseLocationId</Name>
					<Field>WarehouseLocationId</Field>
					<RelatedField>WarehouseLocationId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ReleasedProduct</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResReleasedProductV2Entity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ReleasedProduct</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>FixedProductWarehouseLocationsV2</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>EcoResReleasedProductV2Entity_ItemNumber</Name>
					<Field>ItemNumber</Field>
					<RelatedField>ItemNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>WHSFixedProductWarehouseLocation</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>WHSFixedProductWarehouseLocation</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventDim</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventDim</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ProductVariantInventDimId</Field>
								<JoinDataSource>WHSFixedProductWarehouseLocation</JoinDataSource>
								<RelatedField>inventDimId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>