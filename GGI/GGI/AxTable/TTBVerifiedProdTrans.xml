<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TTBVerifiedProdTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     Verified production report records.
/// </summary>
public class TTBVerifiedProdTrans extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>ttbVerifiedProdTable</Name>
				<Source><![CDATA[
        /// <summary>
    ///     Gets the corresponding verified production header.
    /// </summary>
    /// <param name = "_forUpdate">
    ///     Determines if the verified production header is selected for update. Optional.
    /// </param>
    /// <returns>
    ///     The verified production header; otherwise, an empty buffer.
    /// </returns>
    public TTBVerifiedProdTable ttbVerifiedProdTable(boolean _forUpdate = false)
    {
        return TTBVerifiedProdTable::find(this.TTBVerifiedProdTable, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds a record based on its record ID.
    /// </summary>
    /// <param name = "_recId">
    ///     Record ID of the record to find.
    /// </param>
    /// <param name = "_forUpdate">
    ///     Determines if the found record is selected for update. Optional.
    /// </param>
    /// <returns>
    ///     The found record; otherwise, an empty buffer.
    /// </returns>
    public static TTBVerifiedProdTrans find(TTBVerifiedProdTransRecId _recId, boolean _forUpdate = false)
    {
        TTBVerifiedProdTrans    vprTrans;

        vprTrans.selectForUpdate(_forUpdate);
        select firstonly vprTrans
            where vprTrans.RecId == _recId;

        return vprTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines if a record specified by its record ID exists.
    /// </summary>
    /// <param name = "_recId">
    ///     Record ID of the record in question.
    /// </param>
    /// <returns>
    ///     true, if the record exists; otherwise, false.
    /// </returns>
    public static boolean exist(TTBVerifiedProdTransRecId _recId)
    {
        return (select TTBVerifiedProdTrans
                    where TTBVerifiedProdTrans.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findNaturalKey</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds a record based on its natural key.
    /// </summary>
    /// <param name = "_tank">
    ///     A tank location.
    /// </param>
    /// <param name = "_denaturantItemId">
    ///     Denaturant item number.
    /// </param>
    /// <param name = "_isDenaturantFromPhantom">
    ///     Determines if the denaturant is from a phantom formula item.
    /// </param>
    /// <param name = "_vprTableRecId">
    ///     Record ID of a VPR record header.
    /// </param>
    /// <param name = "_forUpdate">
    ///     Determines if the found record is selected for update. Optional.
    /// </param>
    /// <returns>
    ///     The found record; otherwise, an empty buffer.
    /// </returns>
    public static TTBVerifiedProdTrans findNaturalKey(TTBTank _tank, ItemId _denaturantItemId, boolean _isDenaturantFromPhantom, TTBVerifiedProdTableRecId _vprTableRecId, boolean _forUpdate = false)
    {
        TTBVerifiedProdTrans    vprTrans;

        vprTrans.selectForUpdate(_forUpdate);
        select firstonly vprTrans
            where vprTrans.Tank == _tank
                && vprTrans.DenaturantItemId == _denaturantItemId
                && vprTrans.IsDenaturantFromPhantom == _isDenaturantFromPhantom
                && vprTrans.TTBVerifiedProdTable == _vprTableRecId;

        return vprTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existNaturalKey</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines if a record based on its natural key exists.
    /// </summary>
    /// <param name = "_tank">
    ///     A tank location.
    /// </param>
    /// <param name = "_denaturantItemId">
    ///     Denaturant item number.
    /// </param>
    /// <param name = "_isDenaturantFromPhantom">
    ///     Determines if the denaturant is from a phantom formula item.
    /// </param>
    /// <param name = "_vprTableRecId">
    ///     Record ID of a VPR record header.
    /// </param>
    /// <returns>
    ///     true, if the record exists; otherwise, false.
    /// </returns>
    public static boolean existNaturalKey(TTBTank _tank, ItemId _denaturantItemId, boolean _isDenaturantFromPhantom, TTBVerifiedProdTableRecId _vprTableRecId)
    {
        return (select firstonly TTBVerifiedProdTrans
                    where TTBVerifiedProdTrans.Tank == _tank
                        && TTBVerifiedProdTrans.DenaturantItemId == _denaturantItemId
                        && TTBVerifiedProdTrans.IsDenaturantFromPhantom == _isDenaturantFromPhantom
                        && TTBVerifiedProdTrans.TTBVerifiedProdTable == _vprTableRecId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>alcoholType2VPRType</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Converts an alcohol type to a VPR type.
    /// </summary>
    /// <param name = "_alcoholType">
    ///     The alcohol type to convert.
    /// </param>
    /// <returns>
    ///     The equivalent VPR type.
    /// </returns>
    public static TTBVerifiedProdRecordType alcoholType2VPRType(TTBAlcoholType _alcoholType)
    {
        TTBVerifiedProdRecordType   vprType;

        return str2Enum(vprType, enum2Str(_alcoholType));
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Inserts this buffer to the database.
    /// </summary>
    public void insert()
    {
        ttsbegin;

        super();
        
        TTBVerifiedProdTransBucket  bucket;

        bucket.initValue();
        bucket.initFromTTBVerifiedProdTrans(this);
        bucket.insert();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Updates this record to the database.
    /// </summary>
    public void update()
    {
        super();
        
        TTBVerifiedProdTransBucket  bucket = TTBVerifiedProdTransBucket::findNaturalKey(this.RecId, true);

        if (!bucket)
        {
            bucket.initValue();
        }

        bucket.initFromTTBVerifiedProdTrans(this);
        bucket.write();
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalWineGallonsConsumed</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the total wine gallons consumed by production order.
    /// </summary>
    /// <param name = "_vprTableRecId">
    ///     Record ID of the VPR table record.
    /// </param>
    /// <returns>
    ///     The total wine gallons consumed.
    /// </returns>
    public static TTBWineGallonConsumed totalWineGallonsConsumed(TTBVerifiedProdTableRecId _vprTableRecId)
    {
        TTBVerifiedProdTrans    vprTrans;

        select sum(WineGallonConsumed)
            from vprTrans
            where vprTrans.TTBVerifiedProdTable == _vprTableRecId;

        return vprTrans.WineGallonConsumed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNextLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the next line number value.
    /// </summary>
    /// <param name = "_vprTableRecId">
    ///     Record ID of the parent record.
    /// </param>
    /// <returns>
    ///     The next line number.
    /// </returns>
    public static LineNum getNextLineNum(TTBVerifiedProdSerialTableRecId _vprTableRecId)
    {
        TTBVerifiedProdTrans    vprTrans;

        select maxof(LineNum)
            from vprTrans
            where vprTrans.TTBVerifiedProdTable == _vprTableRecId;

        return vprTrans.LineNum + 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds a record based on its line number and parent record ID.
    /// </summary>
    /// <param name = "_lineNum">
    ///     line number of the record to find.
    /// </param>
    /// <param name = "_recId">
    ///     The parent ID of the record to find.
    /// </param>
    /// <param name = "_forUpdate">
    ///     Determines if the found record is selected for update. Optional.
    /// </param>
    /// <returns>
    ///     The found record; otherwise, an empty buffer.
    /// </returns>
    public static TTBVerifiedProdTrans findLineNum(LineNum _lineNum, TTBVerifiedProdTableRecId _recId, boolean _forUpdate = false)
    {
        TTBVerifiedProdTrans    vprTrans;

        vprTrans.selectForUpdate(_forUpdate);
        select firstonly vprTrans
            where vprTrans.LineNum == _lineNum
                && vprTrans.TTBVerifiedProdTable == _recId;

        return vprTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateWineGallonProduced</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Updates the wine gallons produced by adding the specified wine gallon produced to the VPR specified by its line number.
    /// </summary>
    /// <param name = "_lineNum">
    ///     Line number of the VPR to update.
    /// </param>
    /// <param name = "_recId">
    ///     Parent ID of the record to find.
    /// </param>
    /// <param name = "_wineGallonProduced">
    ///     Wine gallons produced to be added.
    /// </param>
    public static void updateWineGallonProduced(LineNum _lineNum, TTBVerifiedProdTableRecId _recId, TTBWineGallonProduced _wineGallonProduced)
    {
        ttsbegin;

        TTBVerifiedProdTrans vprTrans = TTBVerifiedProdTrans::findLineNum(_lineNum, _recId, true);

        vprTrans.WineGallonProduced += _wineGallonProduced;
        vprTrans.update();

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@GGI:ContainsTransactionsOfVPRRecord</DeveloperDocumentation>
	<Label>@GGI:VerifiedProductionReportTransaction</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>Tank</TitleField1>
	<TitleField2>AlcoholType</TitleField2>
	<ReplacementKey>Tank_Idx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TTBVerifiedProdTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tank</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RAFQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AlcoholType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RAFUnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WineGallonConsumed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProofGallonConsumed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromInventSerialId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToInventSerialId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Tank</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DenaturantItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsDenaturantFromPhantom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TTBVerifiedProdTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Product</Name>
			<Label>@SYS312888</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RAFQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RAFUnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UOMClass</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Alcohol</Name>
			<Label>@GGI:Alcohol</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AlcoholType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PureWineGallonConsumed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProofGallonConsumed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WineGallonProduced</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Location</Name>
			<Label>@SYS3794</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Tank</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reference</Name>
			<Label>@SYS40441</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TTBVerifiedProdTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Denaturant</Name>
			<Label>@GGI:Denaturant</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DenaturantItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DenaturantItemName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DenaturantQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DenaturantUnitId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Total</Name>
			<Label>@SYS809</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WineGallonConsumed</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RawMaterial</Name>
			<Label>@SYS332340</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RawMaterialAlcoholType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemName</Name>
			<ExtendedDataType>ItemName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TTBVerifiedProdTable</Name>
			<ExtendedDataType>TTBVerifiedProdTableRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Tank</Name>
			<ExtendedDataType>TTBTank</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RAFQty</Name>
			<ExtendedDataType>TTBRAFQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AlcoholType</Name>
			<EnumType>TTBAlcoholType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RAFUnitId</Name>
			<ExtendedDataType>TTBRAFUnitId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>WineGallonConsumed</Name>
			<ExtendedDataType>TTBWineGallonConsumed</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ProofGallonConsumed</Name>
			<ExtendedDataType>TTBProofGallonConsumed</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FromInventSerialId</Name>
			<ExtendedDataType>TTBFromInventSerialId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ToInventSerialId</Name>
			<ExtendedDataType>TTBToInventSerialId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>WineGallonProduced</Name>
			<ExtendedDataType>TTBWineGallonProduced</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DenaturantItemId</Name>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@GGI:DenaturantItemId</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DenaturantItemName</Name>
			<ExtendedDataType>ItemName</ExtendedDataType>
			<Label>@GGI:DenaturantName</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DenaturantUnitId</Name>
			<ExtendedDataType>TTBRAFUnitId</ExtendedDataType>
			<Label>@GGI:DenaturantUOM</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DenaturantQty</Name>
			<ExtendedDataType>UnitQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Type</Name>
			<EnumType>TTBVerifiedProdRecordType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UOMClass</Name>
			<EnumType>TTBUOMClass</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsDenaturantFromPhantom</Name>
			<HelpText>@GGI:DeterminesIfDenaturantIsFromPhantom</HelpText>
			<Label>@GGI:DenaturantFromPhantomFormula</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PureWineGallonConsumed</Name>
			<ExtendedDataType>TTBWineGallonConsumed</ExtendedDataType>
			<Label>@GGI:PureWineGallonsConsumed</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RawMaterialAlcoholType</Name>
			<EnumType>TTBAlcoholType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Tank_Idx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Tank</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DenaturantItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>IsDenaturantFromPhantom</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TTBVerifiedProdTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LineNum_Idx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TTBVerifiedProdTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>TTBVerifiedProdTable</Name>
			<Cardinality>OneMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>TTBVerifiedProdTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TTBVerifiedProdTable</Name>
					<Field>TTBVerifiedProdTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>