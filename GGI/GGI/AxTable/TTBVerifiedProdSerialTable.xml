<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TTBVerifiedProdSerialTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     Master table of VPR serial numbers.
/// </summary>
public class TTBVerifiedProdSerialTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds a record by its record ID.
    /// </summary>
    /// <param name = "_recId">
    ///     The record ID of the record to find.
    /// </param>
    /// <param name = "_forUpdate">
    ///     Determines if the found record is selected for update. Optional.
    /// </param>
    /// <returns>
    ///     The found record; otherwise, an empty buffer.
    /// </returns>
    public static TTBVerifiedProdSerialTable find(TTBVerifiedProdSerialTableRecId _recId, boolean _forUpdate = false)
    {
        TTBVerifiedProdSerialTable   vprSerialTable;

        vprSerialTable.selectForUpdate(_forUpdate);
        select firstonly vprSerialTable
            where vprSerialTable.RecId == _recId;

        return vprSerialTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines if a record specified its record ID exists.
    /// </summary>
    /// <param name = "_recId">
    ///     The ID of the record in question.
    /// </param>
    /// <returns>
    ///     true, if the record exists; otherwise, false.
    /// </returns>
    public static boolean exist(TTBVerifiedProdSerialTableRecId _recId)
    {
        return (select TTBVerifiedProdSerialTable
                    where TTBVerifiedProdSerialTable.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findNaturalKey</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds a record by its natural key.
    /// </summary>
    /// <param name = "_date">
    ///     A date.
    /// </param>
    /// <param name = "_inventSiteId">
    ///     The inventory site.
    /// </param>
    /// <param name = "_forUpdate">
    ///     Determines if the found record is selected for update. Optional.
    /// </param>
    /// <returns>
    ///     The found record; otherwise, an empty buffer.
    /// </returns>
    public static TTBVerifiedProdSerialTable findNaturalKey(Date _date, InventSiteId _inventSiteId, boolean _forUpdate = false)
    {
        TTBVerifiedProdSerialTable   vprSerialTable;

        vprSerialTable.selectForUpdate(_forUpdate);
        select firstonly vprSerialTable
            where vprSerialTable.TransDate == _date
                && vprSerialTable.InventSiteId == _inventSiteId;

        return vprSerialTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existNaturalKey</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines if a record specified its record ID exists.
    /// </summary>
    /// <param name = "_date">
    ///     A date.
    /// </param>
    /// <param name = "_inventSiteId">
    ///     The inventory site number.
    /// </param>
    /// <returns>
    ///     true, if the record exists; otherwise, false.
    /// </returns>
    public static boolean existNaturalKey(Date _date, InventSiteId _inventSiteId)
    {
        return (select TTBVerifiedProdSerialTable
                    where TTBVerifiedProdSerialTable.TransDate == _date
                        && TTBVerifiedProdSerialTable.InventSiteId == _inventSiteId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Inserts the current buffer into the database.
    /// </summary>
    public void insert()
    {
        TTBNumberSequenceTableRecId vprNumberSequenceTableRecId = TTBInventSiteParameters::find(this.InventSiteId).VerifiedProdReportNumberSequenceTable;

        this.SerialId = NumberSeq::newGetNumFromId(vprNumberSequenceTableRecId).num();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds or creates a VPR serial number record based on its natural key.
    /// </summary>
    /// <param name = "_date">
    ///     A date.
    /// </param>
    /// <param name = "_inventSiteId">
    ///     The inventory site number.
    /// </param>
    /// <returns>
    ///     A VPR serial record.
    /// </returns>
    public static TTBVerifiedProdSerialTable findOrCreate(Date _date, InventSiteId _inventSiteId)
    {
        TTBVerifiedProdSerialTable vprSerialTable = TTBVerifiedProdSerialTable::findNaturalKey(_date, _inventSiteId);

        if (!vprSerialTable)
        {
            vprSerialTable.initValue();
            vprSerialTable.TransDate    = _date;
            vprSerialTable.InventSiteId = _inventSiteId;
            vprSerialTable.insert();
        }

        return vprSerialTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreateSerialId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds or creates a VPR serial number based on its natural key.
    /// </summary>
    /// <param name = "_date">
    ///     A date.
    /// </param>
    /// <param name = "_inventSiteId">
    ///     The inventory site number.
    /// </param>
    /// <returns>
    ///     The VPR serial number.
    /// </returns>
    public static TTBVPRSerialId findOrCreateSerialId(Date _date, InventSiteId _inventSiteId)
    {
        return TTBVerifiedProdSerialTable::findOrCreate(_date, _inventSiteId).SerialId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@GGI:VerifiedProductionReportSerialNumbers</DeveloperDocumentation>
	<Label>@GGI:VerfiedProductionSerialNumber</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>TransDate</TitleField1>
	<TitleField2>InventSiteId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ReplacementKey>TransDateIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SerialId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SerialId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SerialId</Name>
			<ExtendedDataType>TTBVPRSerialId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSiteId</Name>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TransDateIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventSiteId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>