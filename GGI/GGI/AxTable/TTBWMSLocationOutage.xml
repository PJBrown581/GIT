<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TTBWMSLocationOutage</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TTBWMSLocationOutage extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromWMSLocation</Name>
				<Source><![CDATA[
    /// <summary>
    ///		Populates record's location and warehouse fields on initialize
    /// </summary>
    /// <param name = "_wmsLocation">The location for outage chart</param>
    public void initFromWMSLocation(WMSLocation _wmsLocation)
    {
        this.InventLocationId   = _wmsLocation.inventLocationId;
        this.WMSLocationId      = _wmsLocation.wMSLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wmsLocation</Name>
				<Source><![CDATA[
    /// <summary>
    ///		Retrieves location record for outage chart
    /// </summary>
    /// <returns>WMSLocation record</returns>
    public WMSLocation wmsLocation()
    {
        return WMSLocation::find(this.WMSLocationId, this.InventLocationId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///		Retrieves Outage gauge table record based on given parameters
    /// </summary>
    /// <param name = "_wmsLocationId">The location for outage chart</param>
    /// <param name = "_inventLocationId">The Warehouse for outage chart</param>
    /// <param name = "_outageGauge">The outage value for the record</param>
    /// <param name = "_update">Optional set true to update data</param>
    /// <returns>Outage gauge table record</returns>
    public static TTBWMSLocationOutage find(
        WMSLocationId       _wmsLocationId,
        InventLocationId    _inventLocationId,
        TTBOutageGauge		_outageGauge,
        boolean             _update             = false)
    {
        TTBWMSLocationOutage     ttbWMSLocationOutage;

        ttbWMSLocationOutage.selectForUpdate(_update);

        if (_wmsLocationId && _inventLocationId && _outageGauge)
        {
            select firstonly ttbWMSLocationOutage
                where ttbWMSLocationOutage.WMSLocationId      == _wmsLocationId
                    && ttbWMSLocationOutage.OutageGauge		  == _outageGauge
                    && ttbWMSLocationOutage.InventLocationId  == _inventLocationId;
        }

        return ttbWMSLocationOutage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findNearestWineGallons</Name>
				<Source><![CDATA[
    /// <summary>
    ///		Retrieves Outage gauge table record Wine gallons based on given parameters
    /// </summary>
    /// <param name = "_wmsLocationId">The location for outage chart</param>
    /// <param name = "_inventLocationId">The Warehouse for outage chart</param>
    /// <param name = "_outageGauge">The outage value for the record</param>
    /// <returns>Outage gauge table record Wine gallons</returns>
    public static TTBWineGallon findNearestWineGallons(
        WMSLocationId       _wmsLocationId,
        InventLocationId    _inventLocationId,
        TTBOutageGauge		_outageGauge)
    {
        TTBWMSLocationOutage    ttbWMSLocationOutageHi;
        TTBWMSLocationOutage    ttbWMSLocationOutageLo;
        TTBWineGallon			wineGallons, difGalHi, difGalLo;

        if (_wmsLocationId && _inventLocationId && _outageGauge)
        {
            // first search for matching value
            ttbWMSLocationOutageHi = TTBWMSLocationOutage::find(_wmsLocationId, _inventLocationId, _outageGauge);
            if (ttbWMSLocationOutageHi.RecId)
            {
                return ttbWMSLocationOutageHi.WineGallons;
            }

            // otherwise, get nearest value above and below
            select firstonly ttbWMSLocationOutageHi
                order by ttbWMSLocationOutageHi.OutageGauge
                where ttbWMSLocationOutageHi.WMSLocationId      == _wmsLocationId
                    && ttbWMSLocationOutageHi.OutageGauge		>= _outageGauge
                    && ttbWMSLocationOutageHi.InventLocationId  == _inventLocationId;

            select firstonly ttbWMSLocationOutageLo
                order by ttbWMSLocationOutageLo.OutageGauge desc
                where ttbWMSLocationOutageLo.WMSLocationId      == _wmsLocationId
                    && ttbWMSLocationOutageLo.OutageGauge		<= _outageGauge
                    && ttbWMSLocationOutageLo.InventLocationId  == _inventLocationId;

            if (ttbWMSLocationOutageHi.RecId != 0 && ttbWMSLocationOutageLo.RecId == 0)
            {
                wineGallons = ttbWMSLocationOutageHi.WineGallons;
            }
            else if (ttbWMSLocationOutageHi.RecId == 0 && ttbWMSLocationOutageLo.RecId != 0)
            {
                wineGallons = ttbWMSLocationOutageLo.WineGallons;
            }
            else
            {
                difGalHi = ttbWMSLocationOutageHi.OutageGauge - _outageGauge;
                difGalLo = _outageGauge - ttbWMSLocationOutageLo.OutageGauge;

                if (difGalHi <= difGalLo)
                {
                    wineGallons = ttbWMSLocationOutageHi.WineGallons;
                }
                else
                {
                    wineGallons = ttbWMSLocationOutageLo.WineGallons;
                }
            }
        }

        return wineGallons;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WMSBasic</ConfigurationKey>
	<DeveloperDocumentation>@GGI:TTB006_032</DeveloperDocumentation>
	<Label>@GGI:TTB006_031</Label>
	<TableGroup>Reference</TableGroup>
	<TitleField1>InventLocationId</TitleField1>
	<TitleField2>WMSLocationId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>LocationIdx</ClusteredIndex>
	<Modules>Location</Modules>
	<PrimaryIndex>LocationIdx</PrimaryIndex>
	<ReplacementKey>LocationIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WMSLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OutageGauge</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WineGallons</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WMSLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OutageGauge</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WMSLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OutageGauge</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WineGallons</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WMSLocationId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>OutageGauge</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>TTBOutageGauge</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>WineGallons</Name>
			<ExtendedDataType>TTBWineGallon</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LocationIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>WMSLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>OutageGauge</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>WMSLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WMSLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationId</Name>
					<Field>InventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WMSLocationId</Name>
					<Field>WMSLocationId</Field>
					<RelatedField>WMSLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>