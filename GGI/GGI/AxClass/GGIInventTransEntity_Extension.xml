<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GGIInventTransEntity_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>GGIInventTransEntity_Extension</c> class contains code extensions for table GGIInventTransEntity.
/// </summary>
[ExtensionOf(tableStr(GGIInventTransEntity))]
public final class GGIInventTransEntity_Extension
{   
    
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getStatusIssue</Name>
				<Source><![CDATA[
    public static str getStatusIssue()
    {  
        str returnVal;

        SysDictEnum dictEnum = new SysDictEnum(enumNum(StatusIssue));
        Map mapping = SysComputedColumn::comparisionExpressionMap();

        for (int i = 0; i < dictEnum.values(); i++)
        {
            mapping.insert(
            SysComputedColumn::comparisonLiteral(dictEnum.index2Value(i)),
            SysComputedColumn::returnLiteral(dictEnum.index2Label(i)));
        }

        str comparisonField = SysComputedColumn::comparisonField(
        tableStr(GGIInventTransEntity),
        dataEntityDataSourceStr(GGIInventTransEntity, GGIInventTransView),
        fieldStr(GGIInventTransEntity, StatusIssue));

        return GGIInventTransEntity::switch(comparisonField, mapping, SysComputedColumn::returnLiteral(''));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReferenceCategory</Name>
				<Source><![CDATA[
    public static str getReferenceCategory()
    {
        str returnVal;

        SysDictEnum dictEnum = new SysDictEnum(enumNum(InventTransType));
        Map mapping = SysComputedColumn::comparisionExpressionMap();

        for (int i = 0; i < dictEnum.values(); i++)
        {
            mapping.insert(
            SysComputedColumn::comparisonLiteral(dictEnum.index2Value(i)),
            SysComputedColumn::returnLiteral(dictEnum.index2Label(i)));
        }

        str comparisonField = SysComputedColumn::comparisonField(
        tableStr(GGIInventTransEntity),
        dataEntityDataSourceStr(GGIInventTransEntity, GGIInventTransView),
        fieldStr(GGIInventTransEntity, ReferenceCategory));       

        return GGIInventTransEntity::switch(comparisonField, mapping, SysComputedColumn::returnLiteral(''));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStatusReceipt</Name>
				<Source><![CDATA[
    public static str getStatusReceipt()
    {
        str returnVal;

        SysDictEnum dictEnum = new SysDictEnum(enumNum(StatusReceipt));
        Map mapping = SysComputedColumn::comparisionExpressionMap();

        for (int i = 0; i < dictEnum.values(); i++)
        {
            mapping.insert(
            SysComputedColumn::comparisonLiteral(dictEnum.index2Value(i)),
            SysComputedColumn::returnLiteral(dictEnum.index2Label(i)));
        }

        str comparisonField = SysComputedColumn::comparisonField(
        tableStr(GGIInventTransEntity),
        dataEntityDataSourceStr(GGIInventTransEntity, GGIInventTransView),
        fieldStr(GGIInventTransEntity, StatusReceipt));

        return GGIInventTransEntity::switch(comparisonField, mapping, SysComputedColumn::returnLiteral('')); 
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>switch</Name>
				<Source><![CDATA[
    public static str switch(str _controlExpression, Map _comparisonExpressionMap, str _defaultExpression)
    {
        MapEnumerator  mapEnumerator;
        str caseExpression = '';
        str value = '';

        caseExpression ='CASE ' + _controlExpression;
        mapEnumerator = _comparisonExpressionMap.getEnumerator();
        while (mapEnumerator.moveNext())
        {   
            value = mapEnumerator.currentValue();
            if(value == "''")
            {
                value = "'None'";
            }
            caseExpression += ' WHEN ' + mapEnumerator.currentKey() + ' THEN ' + value;
        }
        caseExpression += ' ELSE ' + _defaultExpression;
        caseExpression += ' END';

        return caseExpression;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>