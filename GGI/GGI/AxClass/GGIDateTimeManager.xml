<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GGIDateTimeManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     Date time manager.
/// </summary>
class GGIDateTimeManager
{
    /// <summary>
    ///     Preferred time zone.
    /// </summary>
    public Timezone PreferredTimeZone   = DateTimeUtil::getUserPreferredTimeZone();
    
    /// <summary>
    ///     Preferred locale.
    /// </summary>
    public PreferredLocale  PreferredLocale = new xSession().preferredLocale();

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static GGIDateTimeManager construct()
    {
        return new GGIDateTimeManager();
    }

]]></Source>
			</Method>
			<Method>
				<Name>systemDateTimeGet</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the current system date and time.
    /// </summary>
    /// <returns>
    ///     The current system date and time.
    /// </returns>
    public static utcdatetime systemDateTimeGet()
    {
        return GGIDateTimeManager::construct().getSystemDateTime();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSystemDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the current system date.
    /// </summary>
    /// <returns>
    ///     The current system date.
    /// </returns>
    public date getSystemDate()
    {
        return DateTimeUtil::getSystemDate(PreferredTimeZone);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSystemDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the current system date time.
    /// </summary>
    /// <returns>
    ///     The current system date time.
    /// </returns>
    public utcdatetime getSystemDateTime()
    {
        return DateTimeUtil::getSystemDateTime();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEndOfYearDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the end of the calendar year based on the specified date.
    /// </summary>
    /// <param name = "_date">
    ///     A date to calculate the end of the year from. Optional.
    /// </param>
    /// <returns>
    ///     The end of the calendar year of the given date.
    /// </returns>
    public date getEndOfYearDate(date _date = this.getSystemDate())
    {
        return DateTimeUtil::getEndOfYearDate(PreferredLocale, _date);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStartOfYearDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the start of the calendar year based on the specified date.
    /// </summary>
    /// <param name = "_date">
    ///     A date to calculate the start of the year from. Optional.
    /// </param>
    /// <returns>
    ///     The start of the calendar year of the given date.
    /// </returns>
    public date getStartOfYearDate(date _date = this.getSystemDate())
    {
        return DateTimeUtil::getStartOfYearDate(PreferredLocale, _date);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMinDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the minimum date.
    /// </summary>
    /// <returns>
    ///     The minimum date.
    /// </returns>
    public static date getMinDate()
    {
        return DateTimeUtil::date(DateTimeUtil::minValue());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMaxDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the maximum date.
    /// </summary>
    /// <returns>
    ///     The maximum date.
    /// </returns>
    public static date getMaxDate()
    {
        return DateTimeUtil::date(DateTimeUtil::maxValue());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>