<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GGIJmgRegistrationTouchForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     Customizations to the job card device form.
/// </summary>
[ExtensionOf(classStr(JmgRegistrationTouchForm))]
final class GGIJmgRegistrationTouchForm_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>suggestedGoodQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Suggests good quantity to be report feedback progress for the production job.
    /// </summary>
    /// <param name = "_jobId">
    ///     Job number of the production job.
    /// </param>
    /// <returns>
    ///     The suggested good quantity.
    /// </returns>
    public JmgStartedQty suggestedGoodQuantity(JmgJobId _jobId)
    {
        JmgStartedQty proposedQty = next suggestedGoodQuantity(_jobId);

        ProdTable               prodTable   = GGIJobCardManager::newJobId(_jobId).prodTable();
        TTBItemAlcoholTypeView  itemAlcohol = TTBItemAlcoholTypeView::findItem(prodTable.ItemId);

        if (itemAlcohol.UOMClass == TTBUOMClass::Bulk && proposedQty != prodTable.QtyStUp)
        {
            proposedQty = prodTable.RemainInventPhysical;
        }

        return proposedQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>suggestedStartQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Suggests start quantity for the production job.
    /// </summary>
    /// <param name = "_jobId">
    ///     Job number of the production job.
    /// </param>
    /// <returns>
    ///     Suggested start quantity.
    /// </returns>
    public JmgStartedQty suggestedStartQuantity(JmgJobId _jobId)
    {
        JmgStartedQty proposedQty = next suggestedStartQuantity(_jobId);

        ProdTable               prodTable   = GGIJobCardManager::newJobId(_jobId).prodTable();
        TTBItemAlcoholTypeView  itemAlcohol = TTBItemAlcoholTypeView::findItem(prodTable.ItemId);

        if (itemAlcohol.UOMClass == TTBUOMClass::Bulk && proposedQty != prodTable.QtyStUp)
        {
            proposedQty = prodTable.RemainInventPhysical;
        }

        return proposedQty;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>