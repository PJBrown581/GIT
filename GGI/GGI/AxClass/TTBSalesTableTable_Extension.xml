<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TTBSalesTableTable_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     TTB customizations for <c>SalesTable</c> table.
/// </summary>
[ExtensionOf(tableStr(SalesTable))]
final class TTBSalesTableTable_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>ttbPermitTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the corresponding permit.
    /// </summary>
    /// <param name = "_forUpdate">
    ///     Determines if the corresponding record is selected for update. Optional.
    /// </param>
    /// <returns>
    ///     The corresponding permit; otherwise, an empty buffer.
    /// </returns>
    public TTBPermitTable ttbPermitTable(boolean _forUpdate = false)
    {
        return this.TTBHeaderTable::permitTable(_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initialize this sales order header from another sales order header.
    /// </summary>
    /// <param name = "_salesTable">
    ///     Sales order header to initialize this buffer from.
    /// </param>
    void initFromSalesTable(SalesTable _salesTable)
    {
        next initFromSalesTable(_salesTable);

        this.TTBHeaderTable::initFromTTBHeaderTable(_salesTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Modified field event.
    /// </summary>
    /// <param name = "_fieldId">
    ///     ID of the modified table field.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        next modifiedField(_fieldId);

        switch(_fieldId)
        {
            case fieldNum(SalesTable, CustAccount):
                // Modifying the customer account number affects the delivery address.
                this.modifiedField(fieldNum(SalesTable, DeliveryPostalAddress));
                break;
            case fieldNum(SalesTable, InventLocationId):
                // Modifying the warehouse affects the DSP permit.
                this.TTBHeaderTable::modifiedField(fieldNum(TTBHeaderTable, InventLocationId));
                break;
            case fieldNum(SalesTable, DeliveryPostalAddress):
                if (this.DeliveryPostalAddress != this.orig().DeliveryPostalAddress)
                {
                    this.TTBPermitTable = 0;
                }
                // fall through
            case fieldNum(SalesTable, TTBPermitTable):
                this.TTBHeaderTable::modifiedField(fieldNum(TTBHeaderTable, PermitTable));
                break;
        }

        SalesTableForm::setTTBHeaderAccess(FormDataUtil::getFormDataSource(this));
    }

]]></Source>
			</Method>
			<Method>
				<Name>canReleaseToWarehouse</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determine if the sales order passes alcohol validation and can be released to warehouse.
    /// </summary>
    /// <returns>
    ///     true, if the order can be released to the warehouse; otherwise, false.
    /// </returns>
    public boolean canReleaseToWarehouse()
    {
        SalesLine   salesLine;
        boolean     ret =  next canReleaseToWarehouse() ;

        if(! TTBHeaderTable::validateOrder(this, salesLine))
        {
            warning("@GGI:permitvalidation");
            ret = false;
        }

        if (TTBHeaderTable::PermitRequired(this.SalesId) && !this.TTBPermitTable)
        {
            ret = false;
        }
        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Updates record to the database.
    /// </summary>
    public void update()
    {
        if (this.SalesStatus == SalesStatus::Canceled)
        {
            if (this.TTBTransferBondShipmentId)
            {
                this.TTBHeaderTable::releaseTransferBondShipmentId();
            }
            if (this.TTBTaxPaidShipmentId)
            {
                this.TTBHeaderTable::releaseTaxPaidShipmentId();
            }
        }

        next update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initReturnFromSalesTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initialize a return order from a sales order.
    /// </summary>
    /// <param name = "_other">
    ///     A sales order.
    /// </param>
    void initReturnFromSalesTable(SalesTable _other)
    {
        next initReturnFromSalesTable(_other);
   
        this.TTBHeaderTable::initFromTTBHeaderTable(_other);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>