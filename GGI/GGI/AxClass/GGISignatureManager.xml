<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GGISignatureManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     Manager for electronic signatures.
/// </summary>
class GGISignatureManager
{
    public TableId TableId;
    public RefRecId RecId;

    /// <summary>
    ///     Cache.
    /// </summary>
    protected SIGSignatureLog   SignatureLog;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static GGISignatureManager construct()
    {
        return new GGISignatureManager();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Constructs this object with the specified record.
    /// </summary>
    /// <param name = "_record">
    ///     A record.
    /// </param>
    /// <returns>
    ///     This constructed object.
    /// </returns>
    public static GGISignatureManager newRecord(Common _record)
    {
        GGISignatureManager signatureManager = GGISignatureManager::construct();

        signatureManager.TableId    = _record.TableId;
        signatureManager.RecId      = _record.RecId;

        return signatureManager;
    }

]]></Source>
			</Method>
			<Method>
				<Name>signatureLog</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the signature log.
    /// </summary>
    /// <returns>
    ///     The signature log; otherwise, an empty buffer.
    /// </returns>
    protected SIGSignatureLog signatureLog()
    {
        if (TableId != SignatureLog.RefTableId || RecId != SignatureLog.RefRecId)
        {
            select firstonly SignatureLog
                where SignatureLog.RefTableId == TableId
                    && SignatureLog.RefRecId == RecId;
        }

        return SignatureLog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the date and time of the signature.
    /// </summary>
    /// <returns>
    ///     The date and time of the signature; otheriwse, the minimum date and time (null).
    /// </returns>
    public TransDateTime getDateTime()
    {
        return this.signatureLog().SignatureDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>signer</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the signer.
    /// </summary>
    /// <returns>
    ///     The signer.
    /// </returns>
    public PIPSigner signer()
    {
        return PIPSIGSignatureLogHelper::pipSignee(TableId, RecId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>