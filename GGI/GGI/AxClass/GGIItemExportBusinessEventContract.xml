<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GGIItemExportBusinessEventContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// the Data contract class for item export business event
/// </summary>
[DataContract]
public final class GGIItemExportBusinessEventContract extends BusinessEventsContract
{
    ItemId itemId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>Initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize private variables
    /// </summary>
    /// <param name = "_inventTable"> item record to utilize</param>         
    private void Initialize(InventTable _inventTable)
    {
        itemId = _inventTable.ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// override new. use construct method newfromInventTable
    /// </summary>
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromInventTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Construct a new instance of GGIItemExportBusinessEventContract
    /// </summary>
    /// <param name = "_inventTable">item record</param>
    /// <returns>business event contract</returns>
    public static GGIItemExportBusinessEventContract newFromInventTable(InventTable _inventTable)
    {
        var contract = new GGIItemExportBusinessEventContract();
        contract.initialize(_inventTable);
   
        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    /// <summary>
    /// sets or gets item Id
    /// </summary>
    /// <param name = "_itemId">Item Id to set</param>
    /// <returns>current item Id</returns>
    [DataMember('ItemId'),BusinessEventsDataMember('Item Id')]
    public ItemId parmItemId(ItemId _itemId = itemId)
    {
        itemId = _itemId;
        return itemId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>