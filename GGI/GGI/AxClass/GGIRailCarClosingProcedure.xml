<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GGIRailCarClosingProcedure</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>GGIRailCarClosingProcedure</c> handles the signing of the Railcar record closing process.
/// </summary>
public class GGIRailCarClosingProcedure extends SIGProcedureProvider
{
    TTBRailCarTable railCar;

    

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAuditFieldList</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Gets the list of signature controlled fields for this procedure.
    /// </summary>
    /// <returns>
    ///   The list of fields required for this railcar closing procedure.
    /// </returns>
    public container getAuditFieldList()
    {
        return [
                    [DatabaseLogType::Update, tablenum(TTBRailCarTable), fieldnum(TTBRailCarTable, RailCarStatus)],
                    [DatabaseLogType::Update, tablenum(TTBRailCarTable), fieldnum(TTBRailCarTable, ClosedBy)],
                    [DatabaseLogType::Update, tablenum(TTBRailCarTable), fieldnum(TTBRailCarTable, DateClosed)]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRailCar</Name>
				<Source><![CDATA[
    public TTBRailCarTable parmRailCar(TTBRailCarTable _railCar = railCar)
    {
        railCar = _railCar;

        return railCar;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Runs the actual signing of the documents.
    /// </summary>
    public void run()
    {
        super();

        if (signed)
        {   
            ttsbegin;
            railCar.selectForUpdate(true);
            railCar.update();
            ttscommit;     
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>sign</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Starts the signature process.
    /// </summary>
    /// <returns>
    ///   True if the documents of the provider have been signed; otherwise, false.
    /// </returns>
    public boolean sign()
    {
        SIGBaseDocument doc;

        docList = new List(Types::Class);
        railCar = TTBRailCarTable::find(railCar.RecId);        
    
        if (railCar.RailCarStatus == TTBRailCarStatus::Open)
        {
            railCar.ClosedBy        = HcmWorker::userId2Worker(curUserId());
            railCar.RailCarStatus   = TTBRailCarStatus::Closed;
            railCar.DateClosed      = DateTimeUtil::utcNow();       
        }

        doc = SIGBaseDocument::newDatabaseLog(DatabaseLogType::Update, railCar);
        docList.addEnd(doc);

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>signatureRequired</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Indicates whether the signature for this procedure is required.
    /// </summary>
    /// <returns>
    ///   True if the built-in signature requirement is enabled or one of the fields requires a signature.
    /// </returns>
    public boolean signatureRequired()
    {
        ClassId classId = classNum(GGIRailCarClosingProcedure);
        boolean ret = SIGProcSetup::classIdEnabled(classId)
                      || SIGProcSetupField::classIdFieldsEnabled(classId);        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupAllowed</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Indicates whether the procedure should be included in the signature setup.
    /// </summary>
    /// <returns>
    ///   Always returns true.
    /// </returns>
    public boolean setupAllowed()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static GGIRailCarClosingProcedure construct()
    {
        return new GGIRailCarClosingProcedure();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the descrription for the e-sig process.
    /// </summary>
    /// <returns>
    /// A descrription of the e-sig process.
    /// </returns>
    static public ClassDescription description()
    {
        return "@GGI:CloseRailcar";
    }

]]></Source>
			</Method>
			<Method>
				<Name>newRailCar</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the class from a railcar record.
    /// </summary>
    /// <param name = "_railCar">
    /// The <c>TTBRailCarTable</c> record to be signed.
    /// </param>
    /// <returns>
    /// An instance of class <c>GGIRailCarClosingProcedure</c>.
    /// </returns>
    public static GGIRailCarClosingProcedure newRailCar(TTBRailCarTable _railCar)
    {
        GGIRailCarClosingProcedure  procedure = GGIRailCarClosingProcedure::construct();
        procedure.parmRailCar(_railCar);
        return procedure;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>