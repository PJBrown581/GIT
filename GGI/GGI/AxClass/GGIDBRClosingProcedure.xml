<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GGIDBRClosingProcedure</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>GGIDBRClosingProcedure</c> handles the signing of the Dump and bottling record closing process.
/// </summary>
public class GGIDBRClosingProcedure extends SIGProcedureProvider
{
    GGIDumpAndBottlingRecord    dbr;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAuditFieldList</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Gets the list of signature controlled fields for this procedure.
    /// </summary>
    /// <returns>
    ///   The list of fields required for this bill of materials approve procedure.
    /// </returns>
    public container getAuditFieldList()
    {
        return [
                    [DatabaseLogType::Update, tablenum(GGIDumpAndBottlingRecord), fieldnum(GGIDumpAndBottlingRecord, Status)],
                    [DatabaseLogType::Update, tableNum(GGIDumpAndBottlingRecord), fieldNum(GGIDumpAndBottlingRecord, ClosedByWorker)],
                    [DatabaseLogType::Update, tableNum(GGIDumpAndBottlingRecord), fieldNum(GGIDumpAndBottlingRecord, ClosedDate)],
                    [DatabaseLogType::Update, tableNum(GGIDumpAndBottlingRecord), fieldNum(GGIDumpAndBottlingRecord, ClosedTime)]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDBR</Name>
				<Source><![CDATA[
    public GGIDumpAndBottlingRecord parmDBR(GGIDumpAndBottlingRecord _dbr = null)
    {
        dbr = _dbr;

        return dbr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Runs the actual signing of the documents.
    /// </summary>
    public void run()
    {
        super();

        if (signed)
        {   
            ttsbegin;
            dbr.selectForUpdate(true);
            dbr.update();
            ttscommit;     
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>sign</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Starts the signature process.
    /// </summary>
    /// <returns>
    ///   True if the documents of the provider have been signed; otherwise, false.
    /// </returns>
    public boolean sign()
    {
        SIGBaseDocument doc;

        docList = new List(Types::Class);
        dbr = GGIDumpAndBottlingRecord::find(dbr.DBRId);        
    
        if (dbr.Status == GGIDumpAndBottlingRecordStatus::Open)
        {
            dbr.ClosedByWorker  = HcmWorker::userId2Worker(curUserId());
            dbr.Status          = GGIDumpAndBottlingRecordStatus::Closed; 
            dbr.ClosedDate      = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
            dbr.ClosedTime      = DateTimeUtil::getTimeNow(DateTimeUtil::getUserPreferredTimeZone());
        }

        doc = SIGBaseDocument::newDatabaseLog(DatabaseLogType::Update, dbr);
        docList.addEnd(doc);

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>signatureRequired</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Indicates whether the signature for this procedure is required.
    /// </summary>
    /// <returns>
    ///   True if the built-in signature requirement is enabled or one of the fields requires a signature.
    /// </returns>
    public boolean signatureRequired()
    {
        ClassId classId = classNum(GGIDBRClosingProcedure);
        boolean ret = SIGProcSetup::classIdEnabled(classId)
                      || SIGProcSetupField::classIdFieldsEnabled(classId);        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupAllowed</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Indicates whether the procedure should be included in the signature setup.
    /// </summary>
    /// <returns>
    ///   Always returns true.
    /// </returns>
    public boolean setupAllowed()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static GGIDBRClosingProcedure construct()
    {
        return new GGIDBRClosingProcedure();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the descrription for the e-sig process.
    /// </summary>
    /// <returns>
    /// A descrription of the e-sig process.
    /// </returns>
    static public ClassDescription description()
    {
        return "@GGI:CloseDBR";
    }

]]></Source>
			</Method>
			<Method>
				<Name>newDBR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the class from a DBR record.
    /// </summary>
    /// <param name = "_dbr">
    /// The <c>GGIDumpAndBottlingRecord</c> record to be signed.
    /// </param>
    /// <returns>
    /// An instance of class <c>GGIDBRClosingProcedure</c>.
    /// </returns>
    public static GGIDBRClosingProcedure newDBR(GGIDumpAndBottlingRecord _dbr)
    {
        GGIDBRClosingProcedure  procedure = GGIDBRClosingProcedure::construct();
        procedure.parmDBR(_dbr);
        return procedure;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>