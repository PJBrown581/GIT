<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GGIPdsBatchAttribByItem_Handler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handle events in PdsBatchAttribByItem form
/// </summary>
internal final class GGIPdsBatchAttribByItem_Handler
{
    
    

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>PdsBatchAttribByItem_OnActivated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating sequence control for changes
    /// </summary>
    /// <param name="sender"><c>PdsBatchAttribByItem</c>data source</param>
    /// <param name="e">event args</param>
    [FormDataSourceEventHandler(formDataSourceStr(PdsBatchAttribByItem, PdsBatchAttribByItem), FormDataSourceEventType::Activated)]
    public static void PdsBatchAttribByItem_OnActivated(FormDataSource sender, FormDataSourceEventArgs e)
    {
        FormIntControl sequence = sender.formRun().design(0).controlName(literalStr(PdsBatchAttribByItem_GGIAttibuteSequence1));
        if (sequence.value() == 0)
        {
            sequence.enabled(true);
        }
        else
        {
            sequence.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>PdsBatchAttribByItem_GGIAttibuteSequence1_OnLostFocus</Name>
				<Source><![CDATA[
    /// <summary>
    ///  to control sequence text box
    /// </summary>
    /// <param name="sender">control</param>
    /// <param name="e">event args</param>
    [FormControlEventHandler(formControlStr(PdsBatchAttribByItem, PdsBatchAttribByItem_GGIAttibuteSequence1), FormControlEventType::LostFocus)]
    public static void PdsBatchAttribByItem_GGIAttibuteSequence1_OnLostFocus(FormControl sender, FormControlEventArgs e)
    {
        FormIntControl sequence = sender.formRun().design(0).controlName(literalStr(PdsBatchAttribByItem_GGIAttibuteSequence1));
        sequence.enabled(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>PdsBatchAttribByItem_GGIAttibuteSequence1_OnValidated</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Validating sequence
    /// </summary>
    /// <param name="sender">sequence control</param>
    /// <param name="e">event args</param>
    [FormControlEventHandler(formControlStr(PdsBatchAttribByItem, PdsBatchAttribByItem_GGIAttibuteSequence1), FormControlEventType::Validated)]
    public static void PdsBatchAttribByItem_GGIAttibuteSequence1_OnValidated(FormControl sender, FormControlEventArgs e)
    {
        PdsBatchAttribByItem lastBatchAttrib;
        FormIntControl valCtr = sender.formRun().design(0).controlName(literalStr(PdsBatchAttribByItem_GGIAttibuteSequence1));
        int val = valCtr.value();
        PdsBatchAttribByItem batchAttrib = sender.formRun().dataSource(tableStr(PdsBatchAttribByItem)).cursor();

        if (val > 0)
        {
            select GGIAttibuteSequence
                from lastBatchAttrib
                where lastBatchAttrib.PdsBatchAttribItemId          == batchAttrib.PdsBatchAttribItemId
                        && lastBatchAttrib.GGIAttibuteSequence      == val;

            if (lastBatchAttrib)
            {
                throw error (strFmt("@Benefits:Num_1AlreadyExists", val));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>PdsBatchAttribByItem_OnInitValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Auto increment field
    /// </summary>
    /// <param name="sender">data source</param>
    /// <param name="e">args</param>
    [FormDataSourceEventHandler(formDataSourceStr(PdsBatchAttribByItem, PdsBatchAttribByItem), FormDataSourceEventType::InitValue)]
    public static void PdsBatchAttribByItem_OnInitValue(FormDataSource sender, FormDataSourceEventArgs e)
    {
        PdsBatchAttribByItem lastBatchAttrib;
        PdsBatchAttribByItem batchAttrib = sender.cursor();

        select maxof(GGIAttibuteSequence)
            from lastBatchAttrib
            order by GGIAttibuteSequence desc
            where lastBatchAttrib.PdsBatchAttribItemId          == batchAttrib.PdsBatchAttribItemId
                    && lastBatchAttrib.PdsBatchAttribCode       == batchAttrib.PdsBatchAttribCode;
            

        batchAttrib.GGIAttibuteSequence = lastBatchAttrib.GGIAttibuteSequence +1;

    }

]]></Source>
			</Method>
			<Method>
				<Name>PdsBatchAttribByItem_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataSourceEventHandler(formDataSourceStr(PdsBatchAttribByItem, PdsBatchAttribByItem), FormDataSourceEventType::Initialized)]
    public static void PdsBatchAttribByItem_OnInitialized(FormDataSource sender, FormDataSourceEventArgs e)
    {
        sender.queryBuildDataSource().addSortField(fieldNum(PdsBatchAttribByItem, GGIAttibuteSequence), SortOrder::Ascending);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ButtonMoveUpLocation_OnClicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handle move up click
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormControlEventHandler(formControlStr(PdsBatchAttribByItem, ButtonMoveUpLocation), FormControlEventType::Clicked)]
    public static void ButtonMoveUpLocation_OnClicked(FormControl sender, FormControlEventArgs e)
    {
        PdsBatchAttribByItem upBuffer, curBuffer;
        GGIAttibuteSequence curSeq, prevSeq;

        curBuffer = sender.formRun().dataSource(tableStr(PdsBatchAttribByItem)).cursor();
        
        ttsbegin;

        curBuffer.selectForUpdate();
        curSeq = curBuffer.GGIAttibuteSequence;

        select forupdate upBuffer
            where upBuffer.PdsBatchAttribItemId == curBuffer.PdsBatchAttribItemId
                && upBuffer.GGIAttibuteSequence == curBuffer.GGIAttibuteSequence - 1;
        if (upBuffer)
        {
            prevSeq = upBuffer.GGIAttibuteSequence;
        }
        if(curBuffer.GGIAttibuteSequence > 1)
        {
            curBuffer.GGIAttibuteSequence = curBuffer.GGIAttibuteSequence - 1;
            curBuffer.doUpdate();
            if (upBuffer && curBuffer.GGIAttibuteSequence == prevSeq)
            {
                upBuffer.selectForUpdate();
                upBuffer.GGIAttibuteSequence = prevSeq + 1;
                upBuffer.doUpdate();
            }
        }
        ttscommit;

        //refresh datasource
        sender.formRun().dataSource().research(true);
        sender.formRun().dataSource().refresh();

    }

]]></Source>
			</Method>
			<Method>
				<Name>ButtonMoveDownLocation_OnClicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handle down click
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormControlEventHandler(formControlStr(PdsBatchAttribByItem, ButtonMoveDownLocation), FormControlEventType::Clicked)]
    public static void ButtonMoveDownLocation_OnClicked(FormControl sender, FormControlEventArgs e)
    {
        PdsBatchAttribByItem downBuffer, curBuffer;
        GGIAttibuteSequence curSeq, nextSeq;

        curBuffer = sender.formRun().dataSource(tableStr(PdsBatchAttribByItem)).cursor();
        
        ttsbegin;

        curBuffer.selectForUpdate();
        curSeq = curBuffer.GGIAttibuteSequence;

        select forupdate downBuffer
            where downBuffer.PdsBatchAttribItemId == curBuffer.PdsBatchAttribItemId
                && downBuffer.GGIAttibuteSequence == curBuffer.GGIAttibuteSequence + 1;
        if (downBuffer)
        {
            nextSeq = downBuffer.GGIAttibuteSequence;
            curBuffer.GGIAttibuteSequence = curBuffer.GGIAttibuteSequence + 1;
            curBuffer.doUpdate();
        }
        if (downBuffer && curBuffer.GGIAttibuteSequence == nextSeq)
        {
            downBuffer.selectForUpdate();
            downBuffer.GGIAttibuteSequence = nextSeq - 1;
            downBuffer.doUpdate();
        }
        ttscommit;

        //refresh datasource
        sender.formRun().dataSource().research(true);
        sender.formRun().dataSource().refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>GGIAssignSequence_OnClicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Assigns the next number sequence to the line
    /// </summary>
    /// <param name="sender">Sender</param>
    /// <param name="e">E</param>
    [FormControlEventHandler(formControlStr(PdsBatchAttribByItem, GGIAssignSequence), FormControlEventType::Clicked)]
    public static void GGIAssignSequence_OnClicked(FormControl sender, FormControlEventArgs e)
    {
        PdsBatchAttribByItem pdsBatchAttribByItem, pdsBatchAttribByItemMAXSEQ;
            
        pdsBatchAttribByItem = sender.formRun().dataSource(tableStr(PdsBatchAttribByItem)).cursor();
        
        if (pdsBatchAttribByItem.GGIAttibuteSequence == 0)
        {
            select maxof(GGIAttibuteSequence) from pdsBatchAttribByItemMAXSEQ
                where pdsBatchAttribByItemMAXSEQ.PdsBatchAttribItemId == pdsBatchAttribByItem.PdsBatchAttribItemId;

            ttsbegin;
            pdsBatchAttribByItem.selectForUpdate();
            pdsBatchAttribByItem.GGIAttibuteSequence = pdsBatchAttribByItemMAXSEQ.GGIAttibuteSequence + 1;
            pdsBatchAttribByItem.update();
            ttscommit;

            //refresh datasource
            sender.formRun().dataSource().research(true);
            sender.formRun().dataSource().refresh();
        }
        else
        {
            warning("@GGI:AssignSeqWarning");
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>