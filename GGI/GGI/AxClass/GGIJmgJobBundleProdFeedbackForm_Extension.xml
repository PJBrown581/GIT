<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GGIJmgJobBundleProdFeedbackForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Code extensions for class <c>JmgJobBundleProdFeedbackForm</c>.
/// </summary>
[ExtensionOf(classStr(JmgJobBundleProdFeedbackForm))]
public final class GGIJmgJobBundleProdFeedbackForm_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateCanClose</Name>
				<Source><![CDATA[
    protected boolean validateCanClose(JmgTmpJobBundleProdFeedback _jobBundleProdFeedback)
    {
        boolean ret = next validateCanClose(_jobBundleProdFeedback);

        JmgTmpJobBundleProdFeedback localJmgTmpJobBundleProdFeedback = this.getTmpJobBundleProdFeedback();
        JmgJobTable                 jmgJobTable = JmgJobTable::find(localJmgTmpJobBundleProdFeedback.JobId);
        GGIJmgJobEquipment          jmgJobEquipment;
        boolean                     isOperationFillingOrFlush  = (jmgJobTable.OprActId == GGIBatchRecord::Filling || jmgJobTable.OprActId == GGIBatchRecord::FlushOp);
        
        

        select firstonly jmgJobEquipment
            where jmgJobEquipment.JobTable == jmgJobTable.RecId;

        if (isOperationFillingOrFlush && !jmgJobEquipment)
        {
            ret = false;
            throw error("@GGI:EquipmentNotUsedError");
        }

        if (isOperationFillingOrFlush && !jmgJobTable.GGIVerifiedBy)
        {
            ret = false;
            throw error("@GGI:JmgVerificationRequired");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>