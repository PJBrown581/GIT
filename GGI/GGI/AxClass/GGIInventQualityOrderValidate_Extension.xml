<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GGIInventQualityOrderValidate_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Code extensions for class <c>InventQualityOrderValidate</c>.
/// </summary>
[ExtensionOf(classStr(InventQualityOrderValidate))]
public final class GGIInventQualityOrderValidate_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateInventQualityOrder</Name>
				<Source><![CDATA[
    protected void updateInventQualityOrder(InventTestOrderStatus _orderStatus)
    {
        next updateInventQualityOrder(_orderStatus);

        InventQualityOrderLine      orderLine;
        PdsBatchAttrib              pdsBatchAttrib;
        TTBRailCarLine              railCarLine;
        WhSWorkLine                 workLine;
        WHSWorkTable                workTable;
        TTBProof                    proof;
        TTBInventGaugeTable	        inventGaugeTable;
        TTBRailCarTable             railCarTable;
        InventTable                 inventTable = InventTable::find(inventQualityOrderTable.ItemId);
        boolean						doUpdate;

        inventQualityOrderTable = InventQualityOrderTable::find(inventQualityOrderId);

        if (inventQualityOrderTable.OrderStatus != InventTestOrderStatus::Pass)
        {
            return;
        }

        if (inventQualityOrderTable.ReferenceType == InventTestReferenceType::Purch
            || inventQualityOrderTable.ReferenceType == InventTestReferenceType::PIPTransfer)
        {
            railCarTable        = inventQualityOrderTable.ggiRailCarTable();
            inventGaugeTable    = inventQualityOrderTable.ggiInventGaugeTable();

            //see if any of the order lines batch attibutes are for proof
            select firstonly orderLine
                    where orderline.QualityOrderId          == inventQualityOrderTable.QualityOrderId
                    join pdsBatchAttrib
                    where pdsBatchAttrib.PdsBatchAttribId   == orderline.PdsBatchAttribId
                        && pdsBatchAttrib.TTBInventQualityProof;

            if (orderline)
            {
                proof = str2Num(orderLine.PdsAttribValue);

                TTBFormluaName	ttbFormulaName = TTBFormluaName::find(InventTable::find(inventGaugeTable.ItemId).TTBFormulaID);
                if (ttbFormulaName.AlcoholType == TTBAlcoholType::PURE)
                {
                    doUpdate = inventQualityOrderTable.ggiIsDlvModeRailcar();
                }

                if (doUpdate)
                {
                    inventGaugeTable.selectForUpdate(true);
                    ttsbegin;
                    inventGaugeTable.Proof = proof;
                    inventGaugeTable.update();
                    ttscommit;
                }
            }

            // if not type PURE use proof from Item
            if (inventTable.TTBAlcoholType() != TTBAlcoholType::PURE)
            {
                proof = inventTable.TTBProof;
            }

            // For transfer orders quality order does not get assigned initially, so need to update without checking for criteria below
            if (railCarTable && !railCarTable.InventQualityOrderId && proof)
            {
                railCarTable.selectForUpdate(true);
                ttsbegin;
                railCarTable.InventQualityOrderId = inventQualityOrderTable.QualityOrderId;
                railCarTable.doUpdate();
                ttscommit;
            }

            if (railCarTable
                && inventQualityOrderTable.ggiIsDlvModeRailcar()
                && inventGaugeTable
                && proof                
                && UnitOfMeasure::findBySymbol(inventTable.inventTableModuleInvent().UnitId).TTBUOMClass == TTBUOMClass::Bulk)
            {
                GGIRailCarRecordGainLoss railcarRecordGainLoss;

                switch (inventQualityOrderTable.ReferenceType)
                {
                    case InventTestReferenceType::Purch :
                        select * from workTable
                            where workTable.WorkTransType   == WHSWorkTransType::Purch
                                && workTable.OrderNum       == inventQualityOrderTable.InventRefId;
                        if (workTable)
                        {
                            railcarRecordGainLoss = GGIRailCarRecordGainLoss::construct(railCarTable, workTable, inventGaugeTable, TTBRailcarRecordSubclass::PoRegistration, proof);
                        }
                        break;
                    case InventTestReferenceType::PIPTransfer  :
                        select * from workTable
                            where workTable.WorkTransType   == WHSWorkTransType::TransferReceipt
                                && workTable.OrderNum       == inventQualityOrderTable.InventRefId;
                        if (workTable)
                        {                            
                            railcarRecordGainLoss = GGIRailCarRecordGainLoss::construct(railCarTable, workTable, inventGaugeTable, TTBRailcarRecordSubclass::TransferOrder, proof);
                        }
                        break;
                }

                if (railcarRecordGainLoss)
                {
                    railcarRecordGainLoss.run();
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>