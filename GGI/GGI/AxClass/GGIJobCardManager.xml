<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GGIJobCardManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     Manages job cards.
/// </summary>
class GGIJobCardManager
{
    /// <summary>
    ///     Job number.
    /// </summary>
    public JmgJobId JobId;

    /// <summary>
    ///     Cache.
    /// </summary>
    protected JmgJobTable   JobTableCache;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static GGIJobCardManager construct()
    {
        return new GGIJobCardManager();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newJobId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Constructs this object with a job number.
    /// </summary>
    /// <param name = "_jobId">
    ///     Job number.
    /// </param>
    /// <returns>
    ///     This constructed object.
    /// </returns>
    public static GGIJobCardManager newJobId(JmgJobId _jobId)
    {
        GGIJobCardManager   jobCardMgr = GGIJobCardManager::construct();

        jobCardMgr.JobId = _jobId;

        return jobCardMgr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jobTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the current job card.
    /// </summary>
    /// <param name = "_forUpdate">
    ///     Determnines if the current job card is selected for update. Optional.
    /// </param>
    /// <returns>
    ///     The current job card; otherwise, an empty buffer.
    /// </returns>
    public JmgJobTable jobTable(boolean _forUpdate = false)
    {
        if (JobId == JobTableCache.JobId)
        {
            JobTableCache.selectForUpdate(_forUpdate);
        }
        else
        {
            JobTableCache = JmgJobTable::find(JobId, _forUpdate);
        }

        return JobTableCache;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the corresponding production order.
    /// </summary>
    /// <param name = "_forUpdate">
    ///     Determines if the production order is selected for update. Optional.
    /// </param>
    /// <returns>
    ///     The corresponding production order; otherwise, an empty buffer.
    /// </returns>
    public ProdTable prodTable(boolean _forUpdate = false)
    {
        return ProdTable::find(this.jobTable().ModuleRefId, _forUpdate);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>