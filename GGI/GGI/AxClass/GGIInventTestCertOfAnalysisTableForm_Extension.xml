<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GGIInventTestCertOfAnalysisTableForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(InventTestCertOfAnalysisTable))]
final class GGIInventTestCertOfAnalysisTableForm_Extension
{
    private SalesId filterSalesId;

    

    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        Args    ggiArgs = this.args();
        
        next init();
        
        if (ggiArgs)
        {
            this.parmFilterSalesId(ggiArgs.parm());
        }
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFilterSalesId</Name>
				<Source><![CDATA[
    public SalesId parmFilterSalesId(SalesId _filterSalesId=filterSalesId)
    {
        filterSalesId = _filterSalesId;
        return filterSalesId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>GGIPrint_OnClicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Print COA with print management settings
    /// </summary>
    /// <param name="sender">sender</param>
    /// <param name="e">event args</param>
    [FormControlEventHandler(formControlStr(InventTestCertOfAnalysisTable, GGIPrint), FormControlEventType::Clicked)]
    public static void GGIPrint_OnClicked(FormControl sender, FormControlEventArgs e)
    {
        MultiSelectionHelper helper = MultiSelectionHelper::construct();
        PIPInventTestCustSpecificCOAController controller = new PIPInventTestCustSpecificCOAController();
        Args args = new Args();
        InventTestCertOfAnalysisTable inventTestCertOfAnalysisTable;
        
        helper.parmDatasource(sender.formRun().dataSource(tableStr(InventTestCertOfAnalysisTable)));
        inventTestCertOfAnalysisTable = helper.getFirst();

        while (inventTestCertOfAnalysisTable.RecId !=0)
        {
            args.record(inventTestCertOfAnalysisTable);
            args.parm(inventTestCertOfAnalysisTable.InventCertificateOfAnalysisId);
            args.menuItemName(menuItemOutputStr(InventTestCertOfAnalysis));
            args.menuItemType(MenuItemType::Output);
    
            // generate report
            controller.parmArgs(args);
            controller.parmReportName(ssrsReportStr(PIPInventTestCustSpecificCOA, Report));
            controller.parmShowDialog(false);
            controller.startOperation();
            inventTestCertOfAnalysisTable = helper.getNext();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>