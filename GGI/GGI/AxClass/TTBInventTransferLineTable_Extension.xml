<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TTBInventTransferLineTable_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     TTB customizations for <c>InventTransferLine</c> table.
/// </summary>
[ExtensionOf(tableStr(InventTransferLine))]
final class TTBInventTransferLineTable_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Modified database field event.
    /// </summary>
    /// <param name = "_fieldId">
    ///     ID of the modified database field.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        next modifiedField(_fieldId);

        switch(_fieldId)
        {
            case fieldNum(InventTransferLine, ItemId):
                this.TTBLineTable::setQuantities();
                break;
            case fieldNum(InventTransferLine, QtyTransfer):
                this.TTBLineTable::modifiedField(fieldNum(TTBLineTable, Qty));
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines if the record is valid to be written to the database.
    /// </summary>
    /// <returns>
    ///     true, if the record is valid; otherwise, false.
    /// </returns>
    public boolean validateWrite()
    {
        boolean isValid = next validateWrite();

        return isValid && this.TTBLineTable::validate(this.inventTransferTable().TTBPermitTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes the transfer quantity and the record in the <c>InventDim</c> table.
    /// </summary>
    /// <param name="_inventTable">
    ///     The record in the inventory table.
    /// </param>
    /// <param name="_inventDimId">
    ///     The inventory dimension id to be used for initializing.
    /// </param>
    public void initFromInventTable(InventTable _inventTable, InventDimId _inventDimId)
    {
        next initFromInventTable(_inventTable, _inventDimId);

        this.TTBLineTable::setQuantities();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts a record into the database.
    /// </summary>
    /// <param name="_dropEstimated">
    ///    Determines whether the estimated transactions related to the line is not updated.
    /// </param>
    public void insert(NoYes _dropEstimated)
    {
        ttsbegin;

        next insert(_dropEstimated);

        if (!TTBHeaderTable::validateOrder(this.inventTransferTable(), new DictTable(this.TableId).makeRecord()))
        {
            throw Exception::Error;
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>