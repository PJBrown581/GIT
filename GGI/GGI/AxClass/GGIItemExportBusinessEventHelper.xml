<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GGIItemExportBusinessEventHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// supporting methods for the item export business event
/// </summary>
class GGIItemExportBusinessEventHelper
{
    const str SellableProduct = "Production";

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>sendItemEvent</Name>
				<Source><![CDATA[
    /// <summary>
    /// send Business event for item export
    /// </summary>
    /// <param name = "_inventTable">active item</param>
    public void sendItemEvent(InventTable _inventTable)
    {
        GGIItemExportBusinessEvent businessEvent = GGIItemExportBusinessEvent::newfromInventTable(_inventTable);

        if(businessEvent)
        {
            businessEvent.send();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isItemSellable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Identify if item is sellable or was updated from sellable
    /// </summary>
    /// /// <param name = "_inventTable">item record to check</param>
    /// <param name = "_isUpDated">look at previous item data</param>
    /// <returns>true if item is/was sellable</returns>
    public boolean isItemSellable(InventTable _inventTable, boolean _isUpDated = false)
    {
        boolean ret;
        
        if(_inventTable.ProductLifecycleStateId == SellableProduct)
        {
            ret =true;
        }
        if(_isUpDated && _inventTable.ProductLifecycleStateId != SellableProduct)
        {
            InventTable origInventTable = _inventTable.orig();
            if(origInventTable.ProductLifecycleStateId == SellableProduct )
            {
                ret = true;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateItemTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// validate salesforce updated fields
    /// </summary>
    /// <param name = "_inventTbale">current item record</param>
    /// <returns>true if fields are changed</returns>
    public boolean validateItemTable(InventTable _inventTable)
    {
        boolean ret;
        InventTable original = _inventTable.orig();

        ret = _inventTable.NetWeight != original.NetWeight ||
        _inventTable.NameAlias != original.NameAlias? true : false;
        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateInventItemSalesSetup</Name>
				<Source><![CDATA[
    /// <summary>
    /// validate salesforce updated fields
    /// </summary>
    /// <param name = "_InventItemSalesSetup">current record</param>
    /// <returns>true if fields changes</returns>
    public boolean validateInventItemSalesSetup(InventItemSalesSetup _InventItemSalesSetup)
    {
        boolean ret;
        InventItemSalesSetup original = _InventItemSalesSetup.orig();
        
        ret  = original.stopped != _InventItemSalesSetup.Stopped? true : false; 
        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateInventItemSetupSupplyType</Name>
				<Source><![CDATA[
    /// <summary>
    /// validate salesforce updated fields
    /// </summary>
    /// <param name = "_InventItemSetupSupplyType">current record</param>
    /// <returns>true if fields are changed</returns>
    public boolean validateInventItemSetupSupplyType(InventItemSetupSupplyType _InventItemSetupSupplyType)
    {
        boolean ret;
        InventItemSetupSupplyType orignal = _InventItemSetupSupplyType.orig();

        ret = orignal.DefaultOrderType != _InventItemSetupSupplyType.DefaultOrderType? true :false;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateInventItemPurchSetup</Name>
				<Source><![CDATA[
    /// <summary>
    /// validate salesforce updated fields
    /// </summary>
    /// <param name = "_InventItemPurchSetup">current record</param>
    /// <returns>true if fields are changed</returns>
    public boolean validateInventItemPurchSetup(InventItemPurchSetup _InventItemPurchSetup)
    {
        boolean ret;
        InventItemPurchSetup orignal = _InventItemPurchSetup.orig();

        ret = orignal.leadTime != _InventItemPurchSetup.leadTime? true: false;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateInventTableModule</Name>
				<Source><![CDATA[
    /// <summary>
    /// validate salesforce updated fields
    /// </summary>
    /// <param name = "_InventTableModule">current record</param>
    /// <returns>true if fields are changed</returns>
    public boolean validateInventTableModule(InventTableModule _InventTableModule)
    {
        InventTableModule orignal = _InventTableModule.orig();
        boolean ret;
        switch ( _InventTableModule.ModuleType)
        {
            case ModuleInventPurchSales::Sales:
                ret = orignal.UnitId != _InventTableModule.UnitId? true : false;
                break;
            case ModuleInventPurchSales::Invent:
                ret = orignal.price != _InventTableModule.price? true :false;
                break;
        }      
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>