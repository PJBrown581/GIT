<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>GGICustAuthTableLookup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
/// <summary>
///     Lookup form for permits.
/// </summary>
[Form]
public class GGICustAuthTableLookup extends FormRun
{
    public GGIAuthManager authManager;
    Common  callerTable;
    formcontrol callerControl;

  


}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes the form.
    /// </summary>
    public void init()
    {
        callerControl = SysTableLookup::getCallerStringControl(element.args());
        callerTable  = SysTableLookup::getCallerControl(element.args()).dataSourceObject().cursor();
        callerTable = element.args().record();
        
        super();

    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean  ret;
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>GGICustAuthDisclaimerAddressTable</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// set datasource ranges and tables
        /// </summary>
        public void init()
        {
            super();
           
            QueryBuildDataSource    authTableQBDS = this.queryBuildDataSource();
            common                  localtabelRef = SysTableLookup::getCallerControl(element.args()).dataSourceObject().cursor();//  callerTable;
            switch(localtabelRef.TableId)
            {
                case tableNum(GGICustAuthDisclaimerAddressTable):
                    GGICustAuthDisclaimerAddressTable ggiCustAuthAddressTableBuf = localtabelRef as GGICustAuthDisclaimerAddressTable;
                    break;
            }
              
            FormRun     callerForm = element.args().caller();
            str callerFormName = element.args().caller().name();

            if(callerFormName == formStr(SalesTable))
            {
                LogisticsPostalAddress logisticsPostalAddress = callerForm.datasource("LogisticsPostalAddressDeliveryHeader").cursor();
                if(logisticsPostalAddress)
                {
                    authTableQBDS.addRange(fieldNum(GGICustAuthDisclaimerAddressTable, LogisticsLocationId)).value(queryValue(LogisticsLocation::find(logisticsPostalAddress.Location).LocationId));
                    authTableQBDS.addRange(fieldNum(GGICustAuthDisclaimerAddressTable, Disabled)).value(queryValue(NoYes::No));
                    /*
                    if(ggiCustAuthAddressTable.ExpirationDate != dateNull())
                    {
                        QueryBuildRange qbr = authTableQBDS.addRange(fieldNum(GGICustAuthAddressTable,ExpirationDate));
                        qbr.value(queryRange(today(),maxDate()));                            
                    } 
                     */
                }
            }
            
            //DirPartyLocation dirPartyLocation = callerForm.datasource("DirPartyLocation").cursor();

            //authManager = GGIAuthManager::newRecord(localtabelRef);
            /*
            if (PermitManager.onlyDSP())
            {
                QueryBuildDataSource    permitDSPAddressQBDS    = permitTableQBDS.addDataSource(tableNum(TTBPermitDSPAddress));
                    
                permitDSPAddressQBDS.joinMode(JoinMode::ExistsJoin);
                permitDSPAddressQBDS.relations(true);
                permitDSPAddressQBDS.addRange(fieldNum(TTBPermitDSPAddress, InventLocationIdFrom)).value(queryValue(PermitManager.getInventLocationId()));
            }
            
            if (authManager.PostalAddressRecId)
            {
                //QueryBuildDataSource    permitAddressQBDS   = permitTableQBDS.addDataSource(tableNum(TTBPermitAddress));

                // Filter permits that are associated with the postal address.
                authAddressQBDS.joinMode(JoinMode::ExistsJoin);
                authAddressQBDS.relations(true);
                authAddressQBDS.addRange(fieldNum(GGICustAuthAddressTable, LogisticsPostalAddress)).value(queryValue(authManager.PostalAddressRecId));
            }

            else if (localtabelRef.DeliveryPostalAddress)
            {
                // Filter permits that are associated with the postal address.
                permitAddressQBDS.joinMode(JoinMode::ExistsJoin);
                permitAddressQBDS.relations(true);
                permitAddressQBDS.addRange(fieldNum(TTBPermitAddress, LogisticsPostalAddress)).value(queryValue(localtabelRef.DeliveryPostalAddress));
            }  */

            
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>GGICustAuthDisclaimerAddressTable</Name>
			<Table>GGICustAuthDisclaimerAddressTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Disabled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpirationDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GGIAuthKey</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LogisticsLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LogisticsPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Num</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<Pattern xmlns="">LookupGridOnly</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">Lookup</Style>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>GGICustAuthAddressTable_grd</Name>
				<AllowEdit>No</AllowEdit>
				<HeightMode>SizeToContent</HeightMode>
				<Type>Grid</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>GGICustAuthAddressTable_grd_CustAccount</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>CustAccount</DataField>
						<DataSource>GGICustAuthDisclaimerAddressTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>GGICustAuthAddressTable_grd_LogisticsLocationId</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>LogisticsLocationId</DataField>
						<DataSource>GGICustAuthDisclaimerAddressTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>GGICustAuthAddressTable_grd_GGIAuthKey</Name>
						<Type>ReferenceGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<DataSource>GGICustAuthDisclaimerAddressTable</DataSource>
						<ReferenceField>GGIAuthKey</ReferenceField>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>GGICustAuthAddressTable_grd_Num</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Num</DataField>
						<DataSource>GGICustAuthDisclaimerAddressTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>GGICustAuthAddressTable_grd_Description</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Description</DataField>
						<DataSource>GGICustAuthDisclaimerAddressTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>GGICustAuthAddressTable_grd_ExpirationDate</Name>
						<Type>Date</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>ExpirationDate</DataField>
						<DataSource>GGICustAuthDisclaimerAddressTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>GGICustAuthAddressTable_grd_Disabled</Name>
						<Type>CheckBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Disabled</DataField>
						<DataSource>GGICustAuthDisclaimerAddressTable</DataSource>
					</AxFormControl>
				</Controls>
				<DataGroup>AutoReport</DataGroup>
				<DataSource>GGICustAuthDisclaimerAddressTable</DataSource>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>