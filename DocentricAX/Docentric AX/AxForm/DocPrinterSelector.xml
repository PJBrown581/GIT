<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>DocPrinterSelector</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class DocPrinterSelector extends FormRun
{
    FormRun callerForm;
    str callerSelectedPrinterName;
    boolean isTmpTableSavedOnCaller = false;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();
    
        if (element.args() == null || element.args().caller() == null)
        {
            DocGlobalHelper::handleException(funcName(), 'The form can be open only as a lookup form');
        }
        if (!(element.args().caller() is FormRun))
        {
            DocGlobalHelper::handleException(funcName(), 'The form can be open only as a lookup form');
        }

        // Lookup can be invoked only from the Print destination settings form.
        callerForm = element.args().caller() as FormRun;
        if (callerForm.name() != formStr(SRSPrintDestinationSettingsForm) 
            && callerForm.name() != formStr(DocPrintMgmtUtils))
        {
            DocGlobalHelper::handleException(funcName(), strFmt('Invalid caller form (%1)', callerForm.name()));
        }

        FormStringControl callerControl = SysTableLookup::getCallerStringControl(element.args(), false);
        if (callerControl == null)
        {
            DocGlobalHelper::handleException(funcName(), 'The form can be open only as a lookup form');
        }
        
        // Set the selected printer name from the caller lookup.
        callerSelectedPrinterName = callerControl.text();
        
        // A first call to this lookup form will populate the form data source temp table 
        // DocPrinterSelectorTmp, and store it in the caller form for successive use.
        DocPrinterSelectorTmp tmpTableLocal = callerForm.parmPrinterList_DC();
        select count(RecId) from tmpTableLocal;

        // First check if the temp table is already populated and stored in the caller form.
        if (tmpTableLocal.RecId > 0)
        {
            // If temp table was populated earlier, it must have at least 1 record
            // for the @DEFAULT_PRINTER@ token --> use that buffer
            DocPrinterSelectorTmp.setTmpData(tmpTableLocal);
            isTmpTableSavedOnCaller = true;
        }
        else
        {
            // First-time invoke of this form from the Print destination settings form => populate the temp table.
            str reportId = callerForm.getReportId();
            PrintMgmtDocumentType reportType = callerForm.getReportType();
            boolean reportTypeProvided = callerForm.isReportTypeProvided();

            DocPrinterSelectorTmp::fillTableWithPrintersActiveAndAllowedForReportAndUser(DocPrinterSelectorTmp, reportId, reportType, reportTypeProvided, curUserId(), true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeSelect</Name>
				<Source><![CDATA[
    [Replaceable]
    public void closeSelect(str _selectString)
    {
        str selectedPrinterName = DocPrinterSelectorTmp.PrinterName;

        // Set the caller control
        super(selectedPrinterName); 
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {      
        // Cache the temp table - store it in the caller print destination form
        if ((callerForm.name() == formStr(SRSPrintDestinationSettingsForm)
            || callerForm.name() == formStr(DocPrintMgmtUtils)) && !isTmpTableSavedOnCaller)
        {
            callerForm.parmPrinterList_DC(DocPrinterSelectorTmp);
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        // Find the selected printer and position to that record if found
        str selectedPrinterName = callerSelectedPrinterName;

        DocPrinterSelectorTmp tmpTableLocal;
        tmpTableLocal.setTmpData(DocPrinterSelectorTmp);

        select firstonly tmpTableLocal where tmpTableLocal.PrinterName == selectedPrinterName;

        try
        {
            element.args().lookupRecord(tmpTableLocal);
            DocPrinterSelectorTmp_ds.research(false);
        }
        catch
        {
            infolog.cut(infologLine(), infologLine());
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>DocPrinterSelectorTmp</Name>
			<Table>DocPrinterSelectorTmp</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Active</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrinterName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrinterPath</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@DocentricAX2:SelectPrinterName</Caption>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<Pattern xmlns="">LookupGridOnly</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">Lookup</Style>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<AllowEdit>No</AllowEdit>
				<HeightMode>SizeToContent</HeightMode>
				<Type>Grid</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DocUserPrinterSelectorTmp_PrinterName</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>PrinterName</DataField>
						<DataSource>DocPrinterSelectorTmp</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DocUserPrinterSelectorTmp_PrinterPath</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>PrinterPath</DataField>
						<DataSource>DocPrinterSelectorTmp</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DocUserPrinterSelectorTmp_Description</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Description</DataField>
						<DataSource>DocPrinterSelectorTmp</DataSource>
					</AxFormControl>
				</Controls>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>