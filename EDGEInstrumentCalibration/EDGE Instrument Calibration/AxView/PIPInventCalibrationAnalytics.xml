<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventCalibrationAnalytics</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PIPInventCalibrationAnalytics extends common
{
    #define.ViewName("PIPInventCalibrationAnalytics")
    #define.DataSourceName("PIPInventTestInstrumentCalibration")
    #define.FieldCalibrationStartedBy("CalibrationStartedBy")
    #define.FieldCalibrationCompletedBy("CalibrationCompletedBy")
    #define.FieldCalibrationApprovedBy("CalibrationApprovedBy")
    #define.FieldCalibrationStartDate("CalibrationStartedDate")
    #define.FieldCalibrationCompletedDate("CalibrationCompletedDate")
    #define.FieldCalibrationApprovedDate("CalibrationApprovedDate")
    #define.FieldCalibrationResult("CalibrationResult")
    #define.FieldCalibrationCompletedDate("CalibrationCompletedDate")

    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>daysToComplete</Name>
				<Source><![CDATA[
    private static server str daysToComplete()
    {
        str calibrationCompletionDate   = SysComputedColumn::returnField(#ViewName, #DataSourceName , #FieldCalibrationCompletedDate);
        str calibrationStartedDate      = SysComputedColumn::returnField(#ViewName, #DataSourceName , #FieldCalibrationStartDate);
        str isCompleted                 = SysComputedColumn::notEqualExpression(calibrationCompletionDate, SysComputedColumn::returnLiteral(""));

        return SysComputedColumn::if(
            isCompleted,
            SysComputedColumn::getDateDiff(
                SysComputedColumn::returnField(#ViewName, #DataSourceName , #FieldCalibrationStartDate),
                SysComputedColumn::returnField(#ViewName, #DataSourceName , #FieldCalibrationCompletedDate),
                SysComputedColumnDatePart::Day),
            SysComputedColumn::returnLiteral(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>closedCalibration</Name>
				<Source><![CDATA[
    private static server str closedCalibration()
    {
        str calibrationCompletionDate   = SysComputedColumn::returnField(#ViewName, #DataSourceName , #FieldCalibrationCompletedDate);
        str isCompleted                 = SysComputedColumn::notEqualExpression(calibrationCompletionDate, SysComputedColumn::returnLiteral(""));

        return SysComputedColumn::if(
            isCompleted,
            SysComputedColumn::returnLiteral(1),
            SysComputedColumn::returnLiteral(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>calibrationStatus</Name>
				<Source><![CDATA[
    private static server str calibrationStatus()
    {
        str calibrationStartedBy    = SysComputedColumn::returnField(#ViewName, #DataSourceName , #FieldCalibrationStartedBy);
        str calibrationCompletedBy  = SysComputedColumn::returnField(#ViewName, #DataSourceName , #FieldCalibrationCompletedBy);
        str calibrationApprovedBy   = SysComputedColumn::returnField(#ViewName, #DataSourceName , #FieldCalibrationApprovedBy);
        str calibrationResult       = SysComputedColumn::returnField(#ViewName, #DataSourceName , #FieldCalibrationResult);

        str isApproved              = SysComputedColumn::notEqualExpression(
                                        calibrationApprovedBy,
                                        SysComputedColumn::returnLiteral(""));
        str isCompleted             = SysComputedColumn::notEqualExpression(
                                        calibrationCompletedBy,
                                        SysComputedColumn::returnLiteral(""));
        str isCompletedAsPass       = SysComputedColumn::notEqualExpression(
                                        calibrationResult,
                                        SysComputedColumn::returnLiteral(PIPInventTestCalibrationResult::Fail));
        str isCompletedAsFail       = SysComputedColumn::equalExpression(
                                        calibrationResult,
                                        SysComputedColumn::returnLiteral(PIPInventTestCalibrationResult::Fail));
        str isStarted               = SysComputedColumn::notEqualExpression(
                                        calibrationStartedBy,
                                        SysComputedColumn::returnLiteral(""));

        return SysComputedColumn::if(                
                isApproved,
                SysComputedColumn::returnLiteral(enum2Str(PIPCalibrationStatusFilter::Approved)),
                SysComputedColumn::if(
                    isCompleted,
                    SysComputedColumn::if(
                        isCompletedAsPass,
                        SysComputedColumn::returnLiteral(enum2Str(PIPCalibrationStatusFilter::CompletedAsPass)),
                        SysComputedColumn::returnLiteral(enum2Str(PIPCalibrationStatusFilter::CompletedAsFail))),
                    SysComputedColumn::if(
                        isStarted,
                        SysComputedColumn::returnLiteral(enum2Str(PIPCalibrationStatusFilter::Started)),
                        SysComputedColumn::returnLiteral(enum2Str(PIPCalibrationStatusFilter::Created)))));
    }

]]></Source>
			</Method>
			<Method>
				<Name>completedMonth</Name>
				<Source><![CDATA[
    private static server str completedMonth()
    {
        return strFmt('select DATEPART(m, %1)', #FieldCalibrationCompletedDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>completedYear</Name>
				<Source><![CDATA[
    private static server str completedYear()
    {
        return strFmt('select DATEPART(yyyy, %1)', #FieldCalibrationCompletedDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>completedWeek</Name>
				<Source><![CDATA[
    private static server str completedWeek()
    {
        return strFmt('select DATEPART(ww, %1)', #FieldCalibrationCompletedDate);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TagNumber</Name>
			<DataField>TestInstrumentTagNumber</DataField>
			<DataSource>PIPInventTestInstrumentCalibration</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TestInstrument</Name>
			<DataField>InventTestInstrument</DataField>
			<DataSource>PIPInventTestInstrumentCalibration</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>DaysToComplete</Name>
			<Label>Days to complete</Label>
			<ViewMethod>daysToComplete</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>ClosedCalibration</Name>
			<Label>Closed calibration</Label>
			<ViewMethod>closedCalibration</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>CalibrationStatus</Name>
			<Label>@PIP4069</Label>
			<ViewMethod>calibrationStatus</ViewMethod>
			<StringSize>20</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CalibrationResult</Name>
			<DataField>CalibrationResult</DataField>
			<DataSource>PIPInventTestInstrumentCalibration</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>CompletedYear</Name>
			<Label>@PIP4066</Label>
			<ViewMethod>completedYear</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>CompletedMonth</Name>
			<Label>@PIP4067</Label>
			<ViewMethod>completedMonth</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>CompletedWeek</Name>
			<Label>@PIP4068</Label>
			<ViewMethod>completedWeek</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CompletedDate</Name>
			<DataField>CalibrationCompletedDate</DataField>
			<DataSource>PIPInventTestInstrumentCalibration</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CreatedDateAndTime</Name>
			<DataField>CreatedDateTime</DataField>
			<DataSource>PIPInventTestInstrumentCalibration</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>PIPInventTestInstrumentCalibration</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>PIPInventTestInstrumentCalibration</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>