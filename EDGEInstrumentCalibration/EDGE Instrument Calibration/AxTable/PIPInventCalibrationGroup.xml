<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventCalibrationGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PIPInventCalibrationGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();
    
        this.CalibrationMethod  = PIPCalibrationMethod::Manual;
        this.CalibrationPeriod  = PIPCalibrationPeriod::None;
        this.UsageIncrement     = 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        PIPInventCalibrationGroup   calibrationGroup    = this.orig();
        boolean                     dependentTagsExist  = PIPInventTestInstrumentTag::existByCalibrationGroup(this.Group);
    
        super(_fieldId);
    
        if (dependentTagsExist && _fieldId != fieldNum(PIPInventCalibrationGroup, Description))
        {
            this.data(calibrationGroup);
            throw error("@PIP832");
        }
    
        switch (_fieldId)
        {
            case fieldNum(PIPInventCalibrationGroup, CalibrationMethod):
                if (this.CalibrationMethod != PIPCalibrationMethod::Periodic)
                {
                    this.CalibrationPeriod = PIPCalibrationPeriod::None;
                    this.PeriodFrequency   = 0;
                }
                if (this.CalibrationMethod != PIPCalibrationMethod::Usage)
                {
                    this.CalibrationPeriod  = PIPCalibrationPeriod::None;
                    this.UsageUpdateMethod  = PIPCalibrationUsageUpdateMethod::None;
                    this.UsageIncrement     = 0;
                    this.UsageCountTrigger  = 0;
                    this.MaxUsage           = 0;
                    this.MaxUsageLifetime   = 0;
                }
                if (this.CalibrationMethod == PIPCalibrationMethod::Usage)
                {
                    this.UsageIncrement     = 1;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;
    
        #define.MaxNum2Digits(99)
        #define.MaxNum3Digits(999)
    
        ret = super(_fieldIdToCheck);
    
        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(PIPInventCalibrationGroup, PeriodFrequency):
                    if (this.PeriodFrequency > #MaxNum3Digits)
                    {
                        ret = checkFailed(strFmt("@PIP152", fieldPName(PIPInventCalibrationGroup, PeriodFrequency)));
                    }
                    break;
    
                case fieldNum(PIPInventCalibrationGroup, UsageIncrement):
                    if (this.UsageIncrement > #MaxNum2Digits)
                    {
                        ret = checkFailed(strFmt("@PIP673", fieldPName(PIPInventCalibrationGroup, UsageIncrement)));
                    }
                    break;
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();
    
        if (ret && this.UsageCountTrigger & this.MaxUsage && this.UsageCountTrigger > this.MaxUsage)
        {
            return checkFailed(strFmt("@SYS113786", fieldPName(PIPInventCalibrationGroup, MaxUsage), fieldPName(PIPInventCalibrationGroup, UsageCountTrigger)));
        }
    
        if (ret && this.MaxUsage && this.MaxUsageLifetime && this.MaxUsage > this.MaxUsageLifetime)
        {
            return checkFailed(strFmt("@SYS113787", fieldPName(PIPInventCalibrationGroup, MaxUsage), fieldPName(PIPInventCalibrationGroup, MaxUsageLifetime)));
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines if the specified record in the <c>PIPInventCalibrationGroup</c> table exists.
    /// </summary>
    /// <param name="_calibrationGroup">
    ///     The calibration group to check.
    /// </param>
    /// <returns>
    ///     True if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(PIPCalibrationGroup _calibrationGroup)
    {
        return (select PIPInventCalibrationGroup
                     where PIPInventCalibrationGroup.Group == _calibrationGroup).RecId !=0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>PIPInventCalibrationGroup</c> table.
    /// </summary>
    /// <param name="_calibrationGroup">
    ///     The calibration group to find.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record in the <c>PIPInventCalibrationGroup</c> table; otherwise, an empty record.
    /// </returns>
    public static PIPInventCalibrationGroup find(PIPCalibrationGroup _calibrationGroup, boolean _forUpdate = false)
    {
        PIPInventCalibrationGroup inventCalibrationGroup;
    
        if (_calibrationGroup)
        {
            inventCalibrationGroup.selectForUpdate(_forUpdate);
    
            select firstOnly inventCalibrationGroup
                where inventCalibrationGroup.Group == _calibrationGroup;
        }
    
        return inventCalibrationGroup;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PIPTIC</ConfigurationKey>
	<DeveloperDocumentation>@PIP660</DeveloperDocumentation>
	<FormRef>PIPInventCalibrationGroup</FormRef>
	<Label>@PIP658</Label>
	<TitleField1>Group</TitleField1>
	<TitleField2>Description</TitleField2>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CalibrationMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CalibrationPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Group</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UsageUpdateMethod</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CalibrationMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CalibrationPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Group</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CalibrationMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Group</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CalibrationPeriod</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PeriodicSetup</Name>
			<Label>@PIP686</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CalibrationPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodFrequency</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>UsageSetup</Name>
			<Label>@PIP685</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>UsageUpdateMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UsageIncrement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UsageCountTrigger</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaxUsage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaxUsageLifetime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CalibrationMethod</Name>
			<Mandatory>Yes</Mandatory>
			<EnumType>PIPCalibrationMethod</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CalibrationPeriod</Name>
			<EnumType>PIPCalibrationPeriod</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>PIPDescription</ExtendedDataType>
			<HelpText>@PIP665</HelpText>
			<StringSize>30</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Group</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>PIPCalibrationGroup</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MaxUsage</Name>
			<ExtendedDataType>PIPMaxUsage</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MaxUsageLifetime</Name>
			<ExtendedDataType>PIPMaxUsageLifetime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>PeriodFrequency</Name>
			<ExtendedDataType>PIPCalibrationPeriodFrequency</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>UsageCountTrigger</Name>
			<ExtendedDataType>PIPCalibrationUsageCountTrigger</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>UsageIncrement</Name>
			<ExtendedDataType>PIPUsageIncrement</ExtendedDataType>
			<HelpText>@PIP1044</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UsageUpdateMethod</Name>
			<EnumType>PIPCalibrationUsageUpdateMethod</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventCalibrationGroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Group</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>