<?xml version="1.0" encoding="utf-8"?>
<AxQuery xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns=""
	i:type="AxQuerySimple">
	<Name>PIPInventTestInstrumentTagsDueCalibration</Name>
	<SourceCode>
		<Methods>
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Query]
public class PIPInventTestInstrumentTagsDueCalibration extends QueryRun
{
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        Query localQuery = this.query();
        
        QueryBuildDataSource qbdsTestInstrumentTag   = localQuery.dataSourceTable(tableNum(PIPInventTestInstrumentTag));
        QueryBuildDataSource qbdsCalibrationGroup    = qbdsTestInstrumentTag.addDataSource(tableNum(PIPInventCalibrationGroup), tableStr(PIPInventCalibrationGroup));

        qbdsCalibrationGroup.joinMode(JoinMode::ExistsJoin);
        
        QueryBuildRange qbr1    = qbdsTestInstrumentTag.addRange(fieldNum(PIPInventTestInstrumentTag, RecId));
        QueryBuildRange qbr2    = qbdsCalibrationGroup.addRange(fieldNum(PIPInventCalibrationGroup, RecId));

        qbr2.value(strFmt('((((%1.%2 == %3) || (%1.%2 == %4)) && (%1.%5 != %6) && (%1.%5 <= %7)) || ((%1.%2 == %8) && (%9.%10 > %11) && (%1.%12 >= %9.%10)))',        
            qbdsTestInstrumentTag.name(),
            fieldStr(PIPInventTestInstrumentTag, CalibrationMethod),
            any2Int(PIPCalibrationMethod::Manual),
            any2Int(PIPCalibrationMethod::Periodic),
            fieldStr(PIPInventTestInstrumentTag, CalibrationNextDate),
            date2StrXpp(dateNull()),
            date2StrXpp(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())), 
            any2Int(PIPCalibrationMethod::Usage),
            qbdsCalibrationGroup.name(), 
            fieldStr(PIPInventCalibrationGroup, UsageCountTrigger), 
            queryValue(0), 
            fieldStr(PIPInventTestInstrumentTag, UsageCountSinceLastCalibration)));
       }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DataSources>
		<AxQuerySimpleRootDataSource>
			<Name>PIPInventTestInstrumentTag</Name>
			<DynamicFields>Yes</DynamicFields>
			<Table>PIPInventTestInstrumentTag</Table>
			<DataSources />
			<DerivedDataSources />
			<Fields />
			<Ranges>
				<AxQuerySimpleDataSourceRange>
					<Name>UsageStatus</Name>
					<Field>UsageStatus</Field>
					<Status>Locked</Status>
					<Value>!Calibration</Value>
				</AxQuerySimpleDataSourceRange>
			</Ranges>
			<GroupBy />
			<Having />
			<OrderBy />
		</AxQuerySimpleRootDataSource>
	</DataSources>
</AxQuery>