<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInstrumentCalibrationCertTaskService</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>PIPInstrumentCalibrationCertTaskService</c> class handles the generation of instrument calibration certificates
///     through the Sys Operation Framework.
/// </summary>
public class PIPInstrumentCalibrationCertTaskService extends SysOperationServiceBase
{
    boolean isExecutionModeSynchronous;
    PIPInventTestInstrumentCalibration  calibration;
    #define.reportName("PIPInstrumentCalibrationCertificate.Report")
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>process</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets up run time tasks for the service.
    /// </summary>
    /// <param name="_calibrationCertContract">
    ///     An object of the <c>PIPInstrumentCalibrationCertContract</c> class.
    /// </param>
    /// <param name="sRSPrintDestinationSettings">
    ///     An object of the <c>SRSPrintDestinationSettings</c> class.
    /// </param>
    public void process(
        PIPInstrumentCalibrationCertContract    _calibrationCertContract,
        SRSPrintDestinationSettings             sRSPrintDestinationSettings)
    {
        BatchHeader calibrationReportBatchHeader;
    
        if (this.isExecutingInBatch())
        {
            if (!calibrationReportBatchHeader)
            {
                calibrationReportBatchHeader = BatchHeader::getCurrentBatchHeader();
            }
    
            if (!calibrationReportBatchHeader.parmRuntimeJob())
            {
                PIPInstrumentCalibrationCertController::launchReport(_calibrationCertContract, sRSPrintDestinationSettings);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExecutionModeSynchronous</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets the execution mode of the batch tasks to be synchronous.
    /// </summary>
    /// <param name="_isExecutionModeSynchronous">
    ///     A Boolean value that indicates whether to set the execution mode of the batch tasks to synchronous.
    /// </param>
    /// <returns>
    ///     true if the execution mode of batch tasks to be processed is true.
    /// </returns>
    public boolean setExecutionModeSynchronous(boolean _isExecutionModeSynchronous)
    {
        isExecutionModeSynchronous = _isExecutionModeSynchronous;
        return isExecutionModeSynchronous;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>