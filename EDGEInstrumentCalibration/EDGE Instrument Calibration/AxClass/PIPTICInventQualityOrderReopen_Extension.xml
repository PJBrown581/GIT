<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPTICInventQualityOrderReopen_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(InventQualityOrderReopen))]
public final class PIPTICInventQualityOrderReopen_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pipUpdateUsageOnOrderLineResults</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Clears out usage counts on associated order line results.
    /// </summary>
    private void pipUpdateUsageOnOrderLineResults()
    {
        InventQualityOrderLineResults inventQualityOrderLineResults;
    
        update_recordSet inventQualityOrderLineResults
            setting
                PIPTestInstrumentUsageIncrement = 0
            where inventQualityOrderLineResults.QualityOrderId == this.parmInventQualityOrderTable().QualityOrderId
                && inventQualityOrderLineResults.PIPTestInstrumentTagNumber
                && inventQualityOrderLineResults.PIPTestInstrumentUsageIncrement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>InventQualityOrderReopen_Post_run</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="args"></param>
    [PostHandlerFor(classStr(InventQualityOrderReopen), methodStr(InventQualityOrderReopen, run))]
    public static void InventQualityOrderReopen_Post_run(XppPrePostArgs args)
    {
        InventQualityOrderReopen _this = args.getThis() as InventQualityOrderReopen;
            
        if (#PIPTICEnabled)
        {
            _this.pipUpdateUsageOnOrderLineResults();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>