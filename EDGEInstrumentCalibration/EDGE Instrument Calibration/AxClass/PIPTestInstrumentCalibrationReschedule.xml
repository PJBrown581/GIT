<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPTestInstrumentCalibrationReschedule</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c></c> class reschedules the calibration for a given test instrument with tag.
/// </summary>
/// <remarks>
///     Sets the next calibration date to the user defined date.
/// </remarks>
public class PIPTestInstrumentCalibrationReschedule extends RunBase
{
    PIPInventTestInstrumentTag  inventTestInstrumentTag;
    PIPCalibrationNextDate      nextCalibrationDate;

    DialogField                 rescheduleDate;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        Dialog      dialog = super();
    
        dialog.caption("@PIP749");
    
        dialog.addFieldValue(extendedTypeStr(InventTestInstrumentId), inventTestInstrumentTag.TestInstrumentId).allowEdit(false);
        dialog.addFieldValue(extendedTypeStr(PIPTestInstrumentTagNumber), inventTestInstrumentTag.TagNumber).allowEdit(false);
        dialog.addFieldValue(extendedTypeStr(PIPCalibrationApprovedDate), inventTestInstrumentTag.CalibrationApprovedDate, "@PIP750").allowEdit(false);
        dialog.addFieldValue(extendedTypeStr(PIPCalibrationNextDate), inventTestInstrumentTag.CalibrationNextDate).allowEdit(false);
    
        rescheduleDate = dialog.addField(extendedTypeStr(PIPCalibrationNextDate), "@PIP751");
    
        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        boolean ret;
    
        ret = super();
    
        if (ret)
        {
            nextCalibrationDate = rescheduleDate.value();
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTestInstrumentTag</Name>
				<Source><![CDATA[
    public PIPInventTestInstrumentTag parmInventTestInstrumentTag(PIPInventTestInstrumentTag _inventTestInstrumentTag = inventTestInstrumentTag)
    {
        inventTestInstrumentTag = _inventTestInstrumentTag;
    
        return inventTestInstrumentTag;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        inventTestInstrumentTag.selectForUpdate();
    
        ttsBegin;
    
        inventTestInstrumentTag.CalibrationNextDate = nextCalibrationDate;
        inventTestInstrumentTag.update();
    
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that the required parameters have been set.
    /// </summary>
    /// <param name="calledFrom">
    ///    The object that called this class; optional.
    /// </param>
    /// <returns>
    ///    true if the requires parameters have been set; otherwise, false.
    /// </returns>
    public boolean validate(Object calledFrom = null)
    {
        boolean ret;
    
        ret = super(calledFrom);
    
        if (!inventTestInstrumentTag)
        {
            ret = checkFailed(strFmt("@SYS134996",tableStr(PIPInventTestInstrumentTag)));
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PIPTestInstrumentCalibrationReschedule construct()
    {
        return new PIPTestInstrumentCalibrationReschedule();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static public ClassDescription description()
    {
        return "@PIP749";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        PIPTestInstrumentCalibrationReschedule  calibrationReschedule = new PIPTestInstrumentCalibrationReschedule();
    
        if (_args.dataset() != tableNum(PIPInventTestInstrumentTag))
        {
            throw error(error::missingRecord(tableStr(PIPInventTestInstrumentTag)));
        }
    
        calibrationReschedule.parmInventTestInstrumentTag(_args.record());
    
        if (calibrationReschedule.prompt())
        {
            calibrationReschedule.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>