<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventTestRelatedOperationsForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(InventTestRelatedOperations))]
public final class PIPInventTestRelatedOperationsForm_Extension
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmPIPInventNonConformanceTable</Name>
				<Source><![CDATA[
    public InventNonConformanceTable parmPIPInventNonConformanceTable(InventNonConformanceTable _inventNonConformanceTable = inventNonConformanceTable)
    {
        inventNonConformanceTable = _inventNonConformanceTable;

        return inventNonConformanceTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>PIPInventNonConformanceAddOperations_OnClicked</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormControlEventHandler(formControlStr(InventTestRelatedOperations, PIPInventNonConformanceAddOperations), FormControlEventType::Clicked)]
    public static void PIPInventNonConformanceAddOperations_OnClicked(FormControl sender, FormControlEventArgs e)
    {
        Args                        args                        = new Args();
        FormRun                     formRun                     = sender.formRun();
        InventNonConformanceTable   inventNonConformanceTable   = formRun.parmPIPInventNonConformanceTable();

        args.record(inventNonConformanceTable);
        args.caller(formRun);

        MenuFunction menuFunction = new MenuFunction(menuItemDisplayStr(PIPInventNonConformanceAddOperations), MenuItemType::Display);

        menuFunction.run(args);          
    }

]]></Source>
			</Method>
			<Method>
				<Name>InventTestRelatedOperations_Post_executeOnActive</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="args"></param>
    [PostHandlerFor(formStr(InventTestRelatedOperations), formMethodStr(InventTestRelatedOperations, executeOnActive))]
    public static void InventTestRelatedOperations_Post_executeOnActive(XppPrePostArgs args)
    {
        
        FormRun                     formRun                     = args.getThis() as FormRun;
        InventNonConformanceTable   inventNonConformanceTable   = formRun.parmPIPInventNonConformanceTable();        

        formRun.design().controlName(formControlStr(InventTestRelatedOperations, PIPInventNonConformanceAddOperations)).enabled(!inventNonConformanceTable.Closed);        
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>