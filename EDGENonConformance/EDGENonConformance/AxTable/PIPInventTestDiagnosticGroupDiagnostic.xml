<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventTestDiagnosticGroupDiagnostic</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PIPInventTestDiagnosticGroupDiagnostic extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>PIPInventTestDiagnosticGroupDiagnostic</c>.
    /// </summary>
    /// <param name = "_diagnosticGroupId">
    ///     The diagnostic group Id of the record to find.
    /// </param>
    /// <param name = "_diagnosticTypeId">
    ///     The diagnostic type Id of the record to find.
    /// </param>
    /// <param name = "_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record in the <c>PIPInventTestDiagnosticGroupDiagnostic</c> table.
    /// </returns>
    public static PIPInventTestDiagnosticGroupDiagnostic find(PIPInventDiagnosticGroupId _diagnosticGroupId, InventDiagnosticTypeId _diagnosticTypeId, boolean _forUpdate = false)
    {
        PIPInventTestDiagnosticGroupDiagnostic inventTestDiagnosticGroupDiagnostic;
    
        if (_diagnosticGroupId && _diagnosticTypeId)
        {
            inventTestDiagnosticGroupDiagnostic.selectForUpdate(_forUpdate);
    
            select firstOnly inventTestDiagnosticGroupDiagnostic
                where inventTestDiagnosticGroupDiagnostic.DiagnosticGroupId == _diagnosticGroupId
                && inventTestDiagnosticGroupDiagnostic.DiagnosticTypeId     == _diagnosticTypeId;
        }
    
        return inventTestDiagnosticGroupDiagnostic;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines if the specified record in the <c>PIPInventTestDiagnosticGroupDiagnostic</c> table exists.
    /// </summary>
    /// <param name = "_diagnosticGroupId">
    ///     The diagnostic group Id of the record to find.
    /// </param>
    /// <param name = "_diagnosticTypeId">
    ///     The diagnostic type Id of the record to find.
    /// </param>
    /// <returns>
    ///     True if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(PIPInventDiagnosticGroupId _diagnosticGroupId, InventDiagnosticTypeId _diagnosticTypeId)
    {
        return (select PIPInventTestDiagnosticGroupDiagnostic
                    where PIPInventTestDiagnosticGroupDiagnostic.DiagnosticGroupId  == _diagnosticGroupId
                        && PIPInventTestDiagnosticGroupDiagnostic.DiagnosticTypeId  == _diagnosticTypeId).RecId !=0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>diagnosticTypeDescription</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Retrieves the diagnostic type description.
    /// </summary>
    /// <returns>
    ///     The associated diagnostic type's description.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    public display Description diagnosticTypeDescription()
    {
        return InventTestDiagnosticType::find(this.DiagnosticTypeId).Description;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PIPNonConformance</ConfigurationKey>
	<DeveloperDocumentation>@PIP5022</DeveloperDocumentation>
	<Label>@PIP5021</Label>
	<TitleField1>DiagnosticGroupId</TitleField1>
	<TitleField2>DiagnosticTypeId</TitleField2>
	<ClusteredIndex>InventTestDiagnosticGroupDiagnosticIdx</ClusteredIndex>
	<PrimaryIndex>InventTestDiagnosticGroupDiagnosticIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DiagnosticGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiagnosticTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResponsibleWorker</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DiagnosticGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiagnosticTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResponsibleWorker</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DiagnosticType</Name>
			<Label>@SYS113641</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DiagnosticTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>diagnosticTypeDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResponsibleWorker</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DiagnosticGroup</Name>
			<Label>@PIP5019</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DiagnosticGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DiagnosticGroupId</Name>
			<ExtendedDataType>PIPInventDiagnosticGroupId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DiagnosticTypeId</Name>
			<ExtendedDataType>InventDiagnosticTypeId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ResponsibleWorker</Name>
			<ExtendedDataType>HcmWorkerRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventTestDiagnosticGroupDiagnosticIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>DiagnosticGroupId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DiagnosticTypeId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>PIPInventTestDiagnosticGroup</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>PIPInventTestDiagnosticGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DiagnosticGroupId</Name>
					<SourceEDT>PIPInventDiagnosticGroupId</SourceEDT>
					<Field>DiagnosticGroupId</Field>
					<RelatedField>DiagnosticGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTestDiagnosticType</Name>
			<Cardinality>OneMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventTestDiagnosticType</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DiagnosticTypeId</Name>
					<Field>DiagnosticTypeId</Field>
					<RelatedField>DiagnosticTypeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ResponsibleWorker</Name>
			<Cardinality>OneMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ResponsibleWorker</Name>
					<Field>ResponsibleWorker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>