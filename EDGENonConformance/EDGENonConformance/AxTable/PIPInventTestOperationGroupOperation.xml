<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventTestOperationGroupOperation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PIPInventTestOperationGroupOperation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>PIPInventTestOperationGroupOperation</c>.
    /// </summary>
    /// <param name = "_testOperationGroupId">
    ///     The non conformance operation group Id of the record to find.
    /// </param>
    /// <param name = "_inventTestOperationId">
    ///     The operation Id of the record to find.
    /// </param>
    /// <param name = "_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record in the <c>PIPInventTestOperationGroupOperation</c> table.
    /// </returns>
    public static PIPInventTestOperationGroupOperation find(PIPInventTestOperationGroupId _testOperationGroupId, InventTestOperationId _testOperationId, boolean _forUpdate = false)
    {
        PIPInventTestOperationGroupOperation inventTestOperationGroupOperation;
    
        if (_testOperationGroupId && _testOperationId)
        {
            inventTestOperationGroupOperation.selectForUpdate(_forUpdate);
    
            select firstOnly inventTestOperationGroupOperation
                where inventTestOperationGroupOperation.OperationGroupId    == _testOperationGroupId
                && inventTestOperationGroupOperation.OperationId        == _testOperationId;
        }
    
        return inventTestOperationGroupOperation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines if the specified record in the <c>PIPInventTestOperationGroupOperation</c> table exists.
    /// </summary>
    /// <param name = "_testOperationGroupId">
    ///     The non conformance operation group Id of the record to find.
    /// </param>
    /// <param name = "_inventTestOperationId">
    ///     The operation Id of the record to find.
    /// </param>
    /// <returns>
    ///     True if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(PIPInventTestOperationGroupId _testOperationGroupId, InventTestOperationId _testOperationId)
    {
        return (select PIPInventTestOperationGroupOperation
                    where PIPInventTestOperationGroupOperation.OperationGroupId == _testOperationGroupId
                        && PIPInventTestOperationGroupOperation.OperationId     == _testOperationId).RecId !=0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>operationDescription</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Retrieves the operation description.
    /// </summary>
    /// <returns>
    ///     The associated operation's description.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    public display Description operationDescription()
    {
        return InventTestOperation::find(this.OperationId).Description;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PIPNonConformance</ConfigurationKey>
	<DeveloperDocumentation>@PIP5018</DeveloperDocumentation>
	<Label>@PIP5014</Label>
	<TitleField1>OperationGroupId</TitleField1>
	<TitleField2>OperationId</TitleField2>
	<ClusteredIndex>InventTestOperationGroupOperationIdx</ClusteredIndex>
	<PrimaryIndex>InventTestOperationGroupOperationIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OperationGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OperationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OperationGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OperationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Operations</Name>
			<Label>@SYS55953</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OperationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>operationDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OperationGroup</Name>
			<Label>@SYS4007348</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OperationGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OperationGroupId</Name>
			<ExtendedDataType>PIPInventTestOperationGroupId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OperationId</Name>
			<ExtendedDataType>InventTestOperationId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventTestOperationGroupOperationIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>OperationGroupId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>OperationId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTestOperationGroup</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>PIPInventTestOperationGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OperationGroupId</Name>
					<SourceEDT>PIPInventTestOperationGroupId</SourceEDT>
					<Field>OperationGroupId</Field>
					<RelatedField>OperationGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTestOperation</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventTestOperation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OperationId</Name>
					<SourceEDT>InventTestOperationId</SourceEDT>
					<Field>OperationId</Field>
					<RelatedField>OperationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>