<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPCaseUpdateStatus_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(CaseUpdateStatus))]
public final class PIPCaseUpdateStatus_Extension
{
    private PIPSIGCAPAProcedure procedure;
    private boolean signatureRequired;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmPIPSIGProcedure</Name>
				<Source><![CDATA[
    public PIPSIGCAPAProcedure parmPIPSIGProcedure(PIPSIGCAPAProcedure _procedure = procedure)
    {
        procedure = _procedure;
        return procedure;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPIPSignatureRequired</Name>
				<Source><![CDATA[
    public boolean parmPIPSignatureRequired(boolean _signatureRequired = signatureRequired)
    {
        signatureRequired = _signatureRequired;

        return signatureRequired;
    }

]]></Source>
			</Method>
			<Method>
				<Name>CaseUpdateStatus_preUpdateStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="_args"></param>
    [SubscribesTo(classStr(CaseUpdateStatus), staticDelegateStr(CaseUpdateStatus, preUpdateStatus))]
    public static void CaseUpdateStatus_preUpdateStatus(CaseUpdateStatusEventArgs _args)
    {
        if (_args.parmBreakStatementExecution())
        {
            return;
        }

        CaseUpdateStatus caseUpdateStatus = _args.parmCaseUpdateStatus();
        CaseDetailBase caseDetailBase = _args.parmCaseDetailBase();

        PIPSIGCAPAProcedure procedure = PIPSIGCAPAProcedure::newCaseDetailBase(caseDetailBase);
        caseUpdateStatus.parmPIPSIGProcedure(procedure);
    
        switch(_args.parmCaseStatus())
        {
            case CaseStatus::InProcess:
            case CaseStatus::Planned:
                if (procedure.signatureRequired()
                    && (caseDetailBase.Status == CaseStatus::Cancelled || caseDetailBase.Status == CaseStatus::Closed))
                {
                    if (procedure.sign())
                    {
                        caseUpdateStatus.parmPIPSignatureRequired(true);
                    }
                    else
                    {
                        _args.parmBreakStatementExecution(true);
                    }
                }
                break;
    
            case CaseStatus::Closed:
            case CaseStatus::Cancelled:
                if (procedure.signatureRequired())
                {
                    if (procedure.sign())
                    {
                        caseUpdateStatus.parmPIPSignatureRequired(true);
                    }
                    else
                    {
                        _args.parmBreakStatementExecution(true);
                    }
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCaseDetailBaseStatus</Name>
				<Source><![CDATA[
    protected void updateCaseDetailBaseStatus()
    {
        if (procedure && procedure.signatureRequired() && signatureRequired)
        {
            CaseDetailBase caseDetailBase = this.caseDetailBase;

            //This triggers the Database logging for the signature
            caseDetailBase.PIPActivateSignature = !caseDetailBase.PIPActivateSignature;
            procedure.captureDelayedSignature(caseDetailBase);
        }

        next updateCaseDetailBaseStatus();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>