<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventParametersHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>PIPInventParametersHandler</c> class provides method event subscription handlers for the <c>InventParameters</c>
///    table.
/// </summary>
public class PIPInventParametersHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateFieldPost</Name>
				<Source><![CDATA[
    [PostHandlerFor(tableStr(InventParameters), tableMethodStr(InventParameters, validateField))]
    /// <summary>
    ///     Executes logic in the post event for the <c>InventParameters</c> <see cref="validateField method"/> method.
    /// </summary>
    /// <param name="_args">
    ///     The arguments passed by the event hanlder.
    /// </param>
    public static void validateFieldPost(XppPrePostArgs _args)
    {
        InventParameters    inventParameters = _args.getThis();
        FieldId             fieldIdToCheck   = _args.getArg('_fieldIdToCheck');
        boolean             ret              = _args.getReturnValue();
    
        HcmWorker           worker;
    
        if (ret)
        {
            switch (fieldIdToCheck)
            {
                case fieldNum(InventParameters, PIPCAPAAdministrator):
                    if (inventParameters.PIPCAPAAdministrator)
                    {
                        worker = HcmWorker::find(inventParameters.PIPCAPAAdministrator);
                        if (!worker.pipUserId())
                        {
                            ret = checkFailed("@PIP551");
                        }
                    }
                    break;
    
                case fieldNum(InventParameters, PIPUseCaseManagementWorkflow):
                    if (!inventParameters.PIPUseCaseManagementWorkflow && CaseDetailBase::pipNumberOfCAPACasesUsingActiveWorkflow())
                    {
                        ret = checkFailed("@PIP578");
                    }
                    break;
            }
        }
    
        _args.setReturnValue(ret);
    }

]]></Source>
			</Method>
			<Method>
				<Name>InventParameters_onUpdating</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [DataEventHandler(tableStr(InventParameters), DataEventType::Updating)]
    public static void InventParameters_onUpdating(Common sender, DataEventArgs e)
    {
        // This handles upgrade to D365 8.0 when there are existing CAPA Cases and fills in the mandatory CategoryRecId to the selected "Empty" (dummy) reference
        InventParameters inventParameters = sender as InventParameters;
        if (inventParameters.PIPNullCaseCategoryRecId != inventParameters.orig().PIPNullCaseCategoryRecId && inventParameters.orig().PIPNullCaseCategoryRecId == 0)
        {
            ttsbegin;

            CaseDetailBase caseDetailBase;

            caseDetailBase.skipDataMethods(true);

            update_recordset caseDetailBase
                setting CategoryRecId = inventParameters.PIPNullCaseCategoryRecId
                where CaseDetailBase.CategoryRecId == 0
                    && CaseDetailBase.PIPIsCAPA;

            ttscommit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>