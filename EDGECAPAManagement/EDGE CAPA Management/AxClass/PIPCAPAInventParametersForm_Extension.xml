<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPCAPAInventParametersForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(InventParameters))]
public final class PIPCAPAInventParametersForm_Extension
{
    private PIPCAPAWorkerLookup pipCAPAAdminWorkerLookup;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>InventParameters_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormEventHandler(formStr(InventParameters), FormEventType::Initialized)]
    public void InventParameters_OnInitialized(xFormRun sender, FormEventArgs e)
    {
        pipCAPAAdminWorkerLookup = PIPCAPAWorkerLookup::newForAdministrator();

        // see standard class CaseDetailEventHandler for an example of how this was done
        var adminControl = this.design().controlName(formControlStr(InventParameters, PIPCAPA_PIPCAPAAdministrator)) as FormReferenceGroupControl;
        adminControl.registerOverrideMethod(methodStr(FormReferenceControl, lookupReference), methodStr(PIPCAPAInventParametersForm_Extension, onAdminWorkerLookupReference), this);
        adminControl.registerOverrideMethod(methodStr(FormReferenceControl, resolveReference), methodStr(PIPCAPAInventParametersForm_Extension, onAdminWorkerResolveReference), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onAdminWorkerLookupReference</Name>
				<Source><![CDATA[
    public Common onAdminWorkerLookupReference(FormReferenceControl _sender)
    {
        return pipCAPAAdminWorkerLookup.workerLookupReference(_sender);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onAdminWorkerResolveReference</Name>
				<Source><![CDATA[
    public Common onAdminWorkerResolveReference(FormReferenceControl _sender)
    {
        return pipCAPAAdminWorkerLookup.workerResolveReference(_sender);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>