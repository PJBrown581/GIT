<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPCaseDetailBaseCaseAssociationProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// Plug in for case associations.
/// </summary>
[ExportMetadataAttribute('CaseIAssociation', 'PIPCAPACase'), ExportAttribute('Dynamics.AX.Application.CaseIAssociation')]
class PIPCaseDetailBaseCaseAssociationProvider implements CaseIAssociation
{
    private static RecId lastCaseRecId;
    private static CaseEntityType lastCaseEntityType;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertCaseAssociation</Name>
				<Source><![CDATA[
    public void insertCaseAssociation(CaseAssociation _caseAssociation)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLinkedCompany</Name>
				<Source><![CDATA[
    public SelectableDataArea getLinkedCompany(RefRecId _parentRecId)
    {
        CaseDetailBase caseDetailBase;

        select crosscompany DataAreaId from caseDetailBase
            where caseDetailBase.RecId == _parentRecId;

        return caseDetailBase.company();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLinkedId</Name>
				<Source><![CDATA[
    public CaseAssociationLinkId getLinkedId(RefRecId _parentRecId)
    {
        CaseDetailBase caseDetailBase;

        select crosscompany CaseId from caseDetailBase
            where caseDetailBase.RecId == _parentRecId;

        return caseDetailBase.CaseId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRecIdWithNaturalKey</Name>
				<Source><![CDATA[
    public RefRecId getRecIdWithNaturalKey(CaseAssociationLinkId _naturalKey)
    {
        CaseDetailBase caseDetailBase;

        select RecId from caseDetailBase
            where caseDetailBase.CaseId == _naturalKey;
       
        return caseDetailBase.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLinkedName</Name>
				<Source><![CDATA[
    public CaseLinkedName getLinkedName(RefRecId _parentRecId)
    {
        CaseDetailBase caseDetailBase;

        select crosscompany Description from caseDetailBase
            where caseDetailBase.RecId == _parentRecId;

        return caseDetailBase.Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJumpRefMenuItem</Name>
				<Source><![CDATA[
    public str getJumpRefMenuItem(args _args, CaseAssociation _association)
    {
        CaseDetailBase caseDetailBase;

        select crosscompany * from caseDetailBase
            where caseDetailBase.RecId == _association.RefRecId;
       
        _args.record(caseDetailBase);
        return menuitemdisplaystr(PIPCAPACaseDetail);
    }

]]></Source>
			</Method>
			<Method>
				<Name>performLookup</Name>
				<Source><![CDATA[
    public void performLookup(FormStringControl callerControl, CaseAssociation _caseAssociation)
    {
        SysTableLookup oSysTableLookup = SysTableLookup::newParameters(tablenum(CaseDetailBase), callerControl);

        Query oQuery = new Query();
        QueryBuildDataSource oqbds = oQuery.addDataSource(tablenum(CaseDetailBase));
        oqbds.addSortField(fieldnum(CaseDetailBase, CaseId), SortOrder::Descending);
        oqbds.addRange(fieldNum(CaseDetailBase, PIPIsCAPA)).value(queryValue(NoYes::Yes));

        oSysTableLookup.addLookupfield(fieldnum(CaseDetailBase, CaseId));
        oSysTableLookup.addLookupfield(fieldnum(CaseDetailBase, Party));
        oSysTableLookup.addLookupfield(fieldnum(CaseDetailBase, Status));
        oSysTableLookup.addLookupfield(fieldnum(CaseDetailBase, Description));
        oSysTableLookup.parmQuery(oQuery);
        oSysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>CaseAssociationProvider_Post_getCaseEntityType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Subscribes to the <c>CaseAssociationProvider.getCaseEntityType()</c> event.
    /// </summary>
    /// <param name="_args">The arguments for the event.</param>
    [PostHandlerFor(classStr(CaseAssociationProvider), staticMethodStr(CaseAssociationProvider, getCaseEntityType))]
    public static void CaseAssociationProvider_Post_getCaseEntityType(XppPrePostArgs _args)
    {
        TableId refTableId = _args.getArg('_refTableId');
        CaseAssociationGetEntityTypeEventArgs eventArgs = _args.getArg('_eventArgs');

        if (refTableId == tableNum(CaseDetailBase))
        {
            if (lastCaseRecId == eventArgs.parmRefRecId())
            {
                eventArgs.parmEntityType(lastCaseEntityType);
            }
            else
            {
                CaseDetailBase caseDetailBase;
                select firstonly PIPIsCAPA from caseDetailBase where caseDetailBase.RecId == eventArgs.parmRefRecId();

                if (caseDetailBase.PIPIsCAPA)
                {
                    eventArgs.parmEntityType(CaseEntityType::PIPCAPACase);
                }

                lastCaseRecId = eventArgs.parmRefRecId();
                lastCaseEntityType = eventArgs.parmEntityType();
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>