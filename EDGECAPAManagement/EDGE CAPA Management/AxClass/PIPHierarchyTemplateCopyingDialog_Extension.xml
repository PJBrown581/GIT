<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPHierarchyTemplateCopyingDialog_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(HierarchyTemplateCopyingDialog))]
public final class PIPHierarchyTemplateCopyingDialog_Extension
{
    private boolean isHierarchyCAPA;

    private const int CurrentVersion = 100;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmPIPIsHierarchyCAPA</Name>
				<Source><![CDATA[
    public boolean parmPIPIsHierarchyCAPA(boolean _isHierarchyCAPA = isHierarchyCAPA)
    {
        isHierarchyCAPA = _isHierarchyCAPA;
    
        return isHierarchyCAPA;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCopyingDialog</Name>
				<Source><![CDATA[
    protected void initCopyingDialog(Args _args, HierarchyTemplateCopyingDialog _hierarchyTemplateCopyingDialog)
    {
        #PIPCAPAManagement
   
        if (_args.parm() == #CAPA)
        {
            _hierarchyTemplateCopyingDialog.parmPIPIsHierarchyCAPA(true);
        }

        next initCopyingDialog(_args, _hierarchyTemplateCopyingDialog);
    }

]]></Source>
			</Method>
			<Method>
				<Name>HierarchyTemplateCopyingDialog_Post_dialog</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="args"></param>
    [PostHandlerFor(classStr(HierarchyTemplateCopyingDialog), methodStr(HierarchyTemplateCopyingDialog, dialog))]
    public static void HierarchyTemplateCopyingDialog_Post_dialog(XppPrePostArgs _args)
    {
        HierarchyTemplateCopyingDialog _this = _args.getThis() as HierarchyTemplateCopyingDialog;
        Dialog dialog = _args.getReturnValue();

        if (_this.isHierarchyCAPA)
        {
            DialogField isActiveField = dialog.pipFindFieldByType(extendedTypeStr(NoYesId), "@SYS26201", "@SYS102356");
            if (isActiveField)
            {
                FormBuildControl activeControl = isActiveField.fieldControl() as FormBuildControl;
                if (activeControl.visible())
                {
                    isActiveField.visible(false);
                    isActiveField.value(false);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>HierarchyTemplateCopyingDialog_Post_pack</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="args"></param>
    [PostHandlerFor(classStr(HierarchyTemplateCopyingDialog), methodStr(HierarchyTemplateCopyingDialog, pack))]
    public static void HierarchyTemplateCopyingDialog_Post_pack(XppPrePostArgs args)
    {
        HierarchyTemplateCopyingDialog dialog = args.getThis();
        container ret = args.getReturnValue();

        ret = [CurrentVersion, dialog.isHierarchyCAPA, ret];

        args.setReturnValue(ret);
    }

]]></Source>
			</Method>
			<Method>
				<Name>HierarchyTemplateCopyingDialog_Pre_unpack</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="args"></param>
    [PreHandlerFor(classStr(HierarchyTemplateCopyingDialog), methodStr(HierarchyTemplateCopyingDialog, unpack))]
    public static void HierarchyTemplateCopyingDialog_Pre_unpack(XppPrePostArgs _args)
    {
        HierarchyTemplateCopyingDialog dialog = _args.getThis();
        container packedClass = _args.getArg('_packedclass');
        Integer version = RunBase::getVersion(packedClass);

        container newPackedClass;
        switch (version)
        {
            case CurrentVersion:
                [version, dialog.isHierarchyCAPA, newPackedClass] = packedClass;
                break;

            default:
                newPackedClass = [-1]; // Invalidate the parameter so the original will return false
                break;
        }

        _args.setArg('_packedclass', newPackedClass);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>