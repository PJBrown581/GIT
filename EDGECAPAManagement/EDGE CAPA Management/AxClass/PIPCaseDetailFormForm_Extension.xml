<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPCaseDetailFormForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles events for the <c>CaseDetail</c> form.
/// </summary>
[ExtensionOf(formStr(CaseDetail))]
public final class PIPCaseDetailFormForm_Extension
{
    private static readonly DictClass extClass = new DictClass(classNum(PIPCaseDetailFormForm_Extension));

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>PIPNewDependentCAPACase_OnClicked</Name>
				<Source><![CDATA[
    /// <summary>
    ///     On Clicked Event Handlers that marks a newly created dependent case as CAPA.
    /// </summary>
    /// <param name = "sender">PIPNewDependentCAPACase Button.</param>
    /// <param name = "e">Event Args.</param>
    [FormControlEventHandler(formControlStr(CaseDetail, PIPNewDependentCAPACase), FormControlEventType::Clicked)]
    public static void PIPNewDependentCAPACase_OnClicked(FormControl sender, FormControlEventArgs e)
    {
        extClass.callStatic(methodStr(PIPCaseDetailFormForm_Extension, OnCreateDependentCAPACase), sender.formRun());
    }

]]></Source>
			</Method>
			<Method>
				<Name>OnCreateDependentCAPACase</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Marks the case that is going to be created as dependent and as CAPA.
    /// </summary>
    private void OnCreateDependentCAPACase()
    {
        this.createDependentCase = true;
        this.parmCaseDetailForm().parmPIPCAPAMode(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>CaseDetail_Process_OnLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Lookup Event Handler for CAPA Process.
    /// </summary>
    /// <param name = "sender">CaseDetail_Process Edit field.</param>
    /// <param name = "e">Event Args.</param>
    [FormControlEventHandler(formControlStr(CaseDetail, CaseDetail_Process), FormControlEventType::Lookup)]
    public static void CaseDetail_Process_OnLookup(FormControl sender, FormControlEventArgs e)
    {
        Hierarchy::pipLookupProcess(sender, false);

        FormControlCancelableSuperEventArgs ce = e as FormControlCancelableSuperEventArgs;
        ce.CancelSuperCall();
    }

]]></Source>
			</Method>
			<Method>
				<Name>CaseDetailBase_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initialized Event Handler to add CAPA pieces to form.
    /// </summary>
    /// <param name = "sender">CaseDetailBase Datasource</param>
    /// <param name = "e">Event Args.</param>
    [FormDataSourceEventHandler(formDataSourceStr(CaseDetail, CaseDetailBase), FormDataSourceEventType::Initialized)]
    public static void CaseDetailBase_OnInitialized(FormDataSource sender, FormDataSourceEventArgs e)
    {
        QueryBuildDataSource qbdsCaseDetailBase = sender.query().dataSourceTable(tableNum(CaseDetailBase));

        qbdsCaseDetailBase.addRange(fieldNum(CaseDetailBase, PIPIsCAPA)).value(queryValue(NoYes::No));      
    }

]]></Source>
			</Method>
			<Method>
				<Name>CaseDetailBase_OnPostLinkActive</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Post Link Active Event Handler to properly filter for CAPA.
    /// </summary>
    /// <param name = "sender">CaseDetailBase Datasource</param>
    /// <param name = "e">Event Args.</param>
    [FormDataSourceEventHandler(formDataSourceStr(CaseDetail, CaseDetailBase), FormDataSourceEventType::PostLinkActive)]
    public static void CaseDetailBase_OnPostLinkActive(FormDataSource sender, FormDataSourceEventArgs e)
    {
        /* This is required as of D356 Update 8 in combination with several things in CAPA extension:
         *   > CAPA put a range on all CaseDetailBase data source (see CaseDetailBase_OnInitialized, above) which cause the standard CaseDetail form to call a new instance of the form when creating a new record
         *   > Update 8 (July 2017) adds a Case Link Association Provider class, which means the new instance of the CaseDetail form will attempt to show only cases that are associatd with the current Case record (but that is a newly created record so there can be no associations yet and this would be associatd with itself)
         * The linkActive method could be fixed to put case tablenUm(CaseDetail) in the switch statement next to the case label for CaseDetailBase which would resolve the problem. So this needs
         * to disable the association link added in the standard logic and just set the range on the main data source to be limited to the passed in Case record.
         */
        Args args = sender.formRun().args();
        if (args && args.dataset() == tableNum(CaseDetail))
        {
            QueryBuildDataSource associationDS = sender.query().dataSourceTable(tablenum(CaseAssociation));
            if (associationDS)
            {
                associationDS.enabled(false);
                sender.query().dataSourceTable(tableNum(CaseDetailBase)).addRange(fieldNum(CaseDetailBase, RecId)).value(queryValue(args.record().RecId));
                sender.executeQuery();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showMoreInformation</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Set only the CAPA Case control group to visible.
    /// </summary>
    public void showMoreInformation()
    {
        next showMoreInformation();

        if (caseAssociation.EntityType == CaseEntityType::PIPCAPACase)
        {
            caseMoreInformation_Case.visible(true);
            caseMoreInformation_None.visible(false);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>