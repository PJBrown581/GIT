<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPCaseDetailCreateForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Extension class for the <c>CaseDetailCreate</c> form.
/// </summary>
[ExtensionOf(formStr(CaseDetailCreate))]
public final class PIPCaseDetailCreateForm_Extension
{   
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>CaseDetailBase_Process_OnLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormControlEventHandler(formControlStr(CaseDetailCreate, CaseDetailBase_Process), FormControlEventType::Lookup)]
    public static void CaseDetailBase_Process_OnLookup(FormControl sender, FormControlEventArgs e)
    {
        Query query = new Query();

        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(Hierarchy), sender);

        sysTableLookup.addLookupField(fieldNum(Hierarchy, Name));

        QueryBuildDataSource queryBuildDataSource = query.addDataSource(tableNum(Hierarchy));
        queryBuildDataSource.addRange(fieldNum(Hierarchy, PIPIsCAPA)).value(queryValue(NoYes::Yes));
        queryBuildDataSource.addRange(fieldNum(Hierarchy, IsTemplate)).value(queryValue(NoYes::Yes));
        queryBuildDataSource.addRange(fieldNum(Hierarchy, PIPApproved)).value(queryValue(NoYes::Yes));

        sysTableLookup.parmQuery(query);

        sysTableLookup.performFormLookup();

        FormControlCancelableSuperEventArgs ce = e as FormControlCancelableSuperEventArgs;
        ce.CancelSuperCall();
    }

]]></Source>
			</Method>
			<Method>
				<Name>GeneralGroup_PIPCAPASubCategory_OnLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormControlEventHandler(formControlStr(CaseDetailCreate, GeneralGroup_PIPCAPASubCategory), FormControlEventType::Lookup)]
    public static void GeneralGroup_PIPCAPASubCategory_OnLookup(FormControl sender, FormControlEventArgs e)
    { 
        CaseDetailBase  caseDetailBase  = sender.formRun().dataSource(1).cursor();

        CaseDetailBase::pipLookupCAPASubCategory(sender, caseDetailBase);       

        FormControlCancelableSuperEventArgs ce = e as FormControlCancelableSuperEventArgs;
        ce.CancelSuperCall();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ProcessGroup_Process_OnLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormControlEventHandler(formControlStr(CaseDetailCreate, ProcessGroup_Process), FormControlEventType::Lookup)]
    public static void ProcessGroup_Process_OnLookup(FormControl sender, FormControlEventArgs e)
    {
        Query query = new Query();
        
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(Hierarchy), sender);
        
        sysTableLookup.addLookupField(fieldNum(Hierarchy, Name));
        
        QueryBuildDataSource queryBuildDataSource = query.addDataSource(tableNum(Hierarchy));
        queryBuildDataSource.addRange(fieldNum(Hierarchy, PIPIsCAPA)).value(sysquery::valueEmptyString());
        queryBuildDataSource.addRange(fieldNum(Hierarchy, HierarchyType)).value(queryValue(HierarchyType::Case));
        queryBuildDataSource.addRange(fieldNum(Hierarchy, IsTemplate)).value(sysquery::valueNotEmptyString());
        queryBuildDataSource.addRange(fieldNum(Hierarchy, IsActive)).value(sysquery::valueNotEmptyString());
        
        sysTableLookup.parmQuery(query);
        
        sysTableLookup.performFormLookup();

        FormControlCancelableSuperEventArgs ce = e as FormControlCancelableSuperEventArgs;
        ce.CancelSuperCall();
    }

]]></Source>
			</Method>
			<Method>
				<Name>CaseDetailCreate_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormEventHandler(formStr(CaseDetailCreate), FormEventType::Initialized)]
    public void CaseDetailCreate_OnInitialized(xFormRun sender, FormEventArgs e)
    {
        if (#PIPCAPAManagementenabled && caseDetailForm.parmPIPCAPAMode())
        {
            // MSBUG: Added due to compiler issues in Update5/6
            CaseDetailBase caseDetailBase = CaseDetailBase_ds.cursor();

            this.design().controlName(formControlStr(CaseDetailCreate, Other)).visible(false);
            this.design().controlName(formControlStr(CaseDetailCreate, PIPCAPAProcessGroup)).visible(true);
            this.design().controlName(formControlStr(CaseDetailCreate, GeneralGroup_CAPACategory)).visible(true);
            this.design().controlName(formControlStr(CaseDetailCreate, GeneralGroup_PIPCAPASubCategory)).visible(true);
            this.design().controlName(formControlStr(CaseDetailCreate, CaseCategoryHierarchyDetail_CaseCategory)).visible(false);
            this.design().controlName(formControlStr(CaseDetailCreate, CaseCategoryHierarchyDetail_CategoryType)).visible(false);
            this.design().controlName(formControlStr(CaseDetailCreate, OwnerGroup_Department)).visible(false);
            this.design().controlName(formControlStr(CaseDetailCreate, SLAGroup)).visible(false);

            caseDetailBase_DS.object(fieldNum(CaseDetailBase, PIPCategory)).mandatory(true);         
            caseDetailBase_DS.object(fieldNum(CaseDetailBase, PIPCAPASubCategory)).allowEdit(false);

            this.design().caption("@PIP70");

            caseDetailBase.PIPIsCAPA = true;    
        }  
    }

]]></Source>
			</Method>
			<Method>
				<Name>CaseDetailBase_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataSourceEventHandler(formDataSourceStr(CaseDetailCreate, CaseDetailBase), FormDataSourceEventType::Initialized)]
    public void CaseDetailBase_OnInitialized(FormDataSource sender, FormDataSourceEventArgs e)
    {       
        //overrides
        if (caseDetailForm.parmPIPCAPAMode())
        {
            FormDataObject caseProcess = sender.object(fieldnum(CaseDetailBase, Process));
            caseProcess.registerOverrideMethod(methodStr(FormDataObject, jumpRef), methodStr(PIPCaseDetailCreateForm_Extension, caseProcess_OnJumpRef), this);

            FormDataObject caseSubCategory = sender.object(fieldnum(CaseDetailBase, PIPCAPASubCategory));
            caseSubCategory.registerOverrideMethod(methodStr(FormDataObject, jumpRef), methodStr(PIPCaseDetailCreateForm_Extension, capaSubCategory_OnJumpRef), this);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>CaseDetailBase_OnCreated</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataSourceEventHandler(formDataSourceStr(CaseDetailCreate, CaseDetailBase), FormDataSourceEventType::Created)]
    public void CaseDetailBase_OnCreated(FormDataSource sender, FormDataSourceEventArgs e)
    {
        // MSBUG: Added due to compiler issues in Update5/6
        CaseDetailBase caseDetailBase = sender.cursor();

        caseDetailBase.PIPIsCAPA = caseDetailForm.parmPIPCAPAMode();
    }

]]></Source>
			</Method>
			<Method>
				<Name>PIPCategory_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataFieldEventHandler(formDataFieldStr(CaseDetailCreate, CaseDetailBase, PIPCategory), FormDataFieldEventType::Modified)]
    public void PIPCategory_OnModified(FormDataObject sender, FormDataFieldEventArgs e)
    {
        PIPCAPACategories pipCAPACategory = PIPCAPACategories::find(caseDetailBase.PIPCategory); 
            
        caseDetailBase_DS.object(fieldNum(CaseDetailBase, PIPCAPASubCategory)).allowEdit(pipCAPACategory.SubCategoryEntityType == PIPCAPASubCategoryEntityType::UserDefined);
    }

]]></Source>
			</Method>
			<Method>
				<Name>caseProcess_OnJumpRef</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the open main table functionality for an item.
    /// </summary>
    /// <param name = "_sender">The control initiating the jumpref.</param>
    public void caseProcess_OnJumpRef(FormDataObject _sender)
    {
        smmUtility::openMenuItemForm(menuitemDisplayStr(PIPCAPAProcessDefinition), null, this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>capaSubCategory_OnJumpRef</Name>
				<Source><![CDATA[
    /// <summary>
    /// Launches the <c>PIPCAPASubcategory</c> form for the specified case category.
    /// </summary>
    /// <param name="_referenceObject">
    /// The form data field reference object.
    /// </param>
    public void capaSubCategory_OnJumpRef(FormDataObject _sender)
    {
        if (!caseDetailBase.PIPCategory)
        {
            return;
        }

        Args args = new Args();
        args.caller(this);
        args.record(PIPCAPACategories::find(caseDetailBase.PIPCategory));

        MenuFunction menuFunction = new MenuFunction(menuitemdisplaystr(PIPCAPASubCategory), MenuItemType::Display);
        menuFunction.run(args);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>