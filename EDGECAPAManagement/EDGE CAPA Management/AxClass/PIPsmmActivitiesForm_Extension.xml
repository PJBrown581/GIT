<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPsmmActivitiesForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(smmActivities))]
public final class PIPsmmActivitiesForm_Extension
{
    private static readonly DictClass extClass = new DictClass(classNum(PIPsmmActivitiesForm_Extension));

    private boolean isCAPAActivity;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pipIsCAPA</Name>
				<Source><![CDATA[
    private boolean pipIsCAPA()
    {
        return isCAPAActivity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>smmActivities_OnInitializing</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormEventHandler(formStr(smmActivities), FormEventType::Initializing)]
    public void smmActivities_OnInitializing(xFormRun sender, FormEventArgs e)
    {
        #PIPCAPAManagement

        if (#PIPCAPAManagementEnabled)
        {
            if (this.args().dataset())
            {
                switch(this.args().dataset())
                {
                    case tableNum(smmActivities):
                        // We need to retrieve the record as the caller sometimes has a reduced set of selection fields which may not include our custom field
                        smmActivities smmActivities = smmActivities::findWithRecId(this.args().record().RecId);
                        isCAPAActivity = smmActivities.PIPIsCAPA;
                        break;

                    case tableNum(CaseDetailBase):
                        CaseDetailBase caseDetailBase = this.args().record();
                        isCAPAActivity = caseDetailBase.PIPIsCAPA;
                        break;
                }
            }
            else
            {
                isCAPAActivity = this.args().parm() == #CAPA;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>HierarchyDetail_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormEventHandler(formStr(smmActivities), FormEventType::Initialized)]
    public void HierarchyDetail_OnInitialized(xFormRun sender, FormEventArgs e)
    {
        if (isCAPAActivity)
        {
            this.design().caption("@PIP4060");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>smmActivities_Post_init</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="args"></param>
    [PostHandlerFor(formStr(smmActivities), formMethodStr(smmActivities, init))]
    public static void smmActivities_Post_init(XppPrePostArgs args)
    {
        FormRun formRun = args.getThis();
        formRun.pipOverrideWorkerLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pipOverrideWorkerLookup</Name>
				<Source><![CDATA[
    private void pipOverrideWorkerLookup()
    {
        if (isCAPAActivity)
        {
            this.hcmWorkerLookupCurrentCompany = PIPCAPAWorkerLookup::newStandardOptions();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCategoryForActivitiesDataSource</Name>
				<Source><![CDATA[
    protected void setCategoryForActivitiesDataSource(smmActivities _smmActivities, smmActivityCategory _category)
    {
        next setCategoryForActivitiesDataSource(_smmActivities, _category);
        _smmActivities.PIPIsCAPA = isCAPAActivity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>smmActivities_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataSourceEventHandler(formDataSourceStr(smmActivities, smmActivities), FormDataSourceEventType::Initialized)]
    public void smmActivities_OnInitialized(FormDataSource sender, FormDataSourceEventArgs e)
    {
        if (smmActivities.PIPIsCAPA && this.args().dataset() == tableNum(CaseDetailBase))
        {
            // MSBUG: Added due to compiler issues in Update5/6
            smmActivities smmActivities = sender.cursor();

            smmActivities.ResponsibleWorker = smmProcessInstance::construct(this.args().record()).pipHierarchyNodeForCurrentStage().pipGetWorker();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>smmActivities_OnActivated</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataSourceEventHandler(formDataSourceStr(smmActivities, smmActivities), FormDataSourceEventType::Activated)]
    public void smmActivities_OnActivated(FormDataSource sender, FormDataSourceEventArgs e)
    {
        if (#PIPCAPAManagementEnabled)
        {
            Responsible.visible(!smmActivities.PIPIsCAPA);
            PIPCAPAResponsible.visible(smmActivities.PIPIsCAPA);
            PIPCAPAResolution.visible(smmActivities.PIPIsCAPA);
            smmActivities_PIPCAPAPrintOnReport.visible(smmActivities.PIPIsCAPA);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>