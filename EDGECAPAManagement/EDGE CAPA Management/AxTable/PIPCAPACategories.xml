<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPCAPACategories</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PIPCAPACategories extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean             ret;
        CaseDetailBase      caseDetailBase;
    
        ret = super();
    
        select firstOnly RecId, PIPCategory from caseDetailBase
            where caseDetailBase.PIPCategory == this.Category;
    
        if (caseDetailBase)
        {
            ret = ret && checkFailed("@PIP200");
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines if the specified record in the <c>PIPCAPACategories</c> table exists.
    /// </summary>
    /// <param name="_category">
    ///     The category of the record to check.
    /// </param>
    /// <returns>
    ///     True if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(PIPCategory _category)
    {
        return (select PIPCAPACategories
                     where PIPCAPACategories.Category == _category).RecId !=0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>PIPCAPACategories</c>.
    /// </summary>
    /// <param name="_category">
    ///     The category of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record in the <c>PIPApprovedCustomerGroup</c> table; otherwise, an empty record.
    /// </returns>
    public static pipCAPACategories find(PIPCategory _category, boolean _forUpdate = false)
    {
        PIPCAPACategories capaCategories;
    
        if (_category)
        {
            capaCategories.selectForUpdate(_forUpdate);
    
            select firstOnly capaCategories
                where capaCategories.Category == _category;
        }
    
        return capaCategories;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupCAPACategory</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Performs a lookup on the <c>PIPCAPACategories</c> table.
    /// </summary>
    /// <param name="_ctrl">
    ///     The <c>FormStringControl</c> control that the lookup will be attached to.
    /// </param>
    public client static void lookupCAPACategory(FormStringControl _ctrl)
    {
        SysTableLookup          sysTableLookup   = SysTableLookup::newParameters(tableNum(PIPCAPACategories), _ctrl);
    
        Query                   query            = new Query();
        QueryBuildDataSource    qbds;
    
        sysTableLookup.addLookupField(fieldnum(PIPCAPACategories, Category));
        sysTableLookup.addLookupField(fieldnum(PIPCAPACategories, Description));
    
        qbds = query.addDataSource(tablenum(PIPCAPACategories));
    
        sysTableLookup.parmQuery(query);
    
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PIPCAPAManagement</ConfigurationKey>
	<DeveloperDocumentation>@PIP40</DeveloperDocumentation>
	<Label>@PIP16</Label>
	<TableGroup>Worksheet</TableGroup>
	<TitleField1>Category</TitleField1>
	<TitleField2>Description</TitleField2>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@PIP41</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubCategoryEntityType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Category</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>PIPCategory</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<StringSize>20</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
			<StringSize>60</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SubCategoryEntityType</Name>
			<EnumType>PIPCAPASubCategoryEntityType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CategoryIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Category</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>