<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPCAPASubCategoryUserDefined</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PIPCAPASubCategoryUserDefined extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean             ret;
        PIPCAPACategories   capaCategory = PIPCAPACategories::find(this.CAPACategory);
    
        ret = super();
    
        if (ret && capaCategory.SubCategoryEntityType != PIPCAPASubCategoryEntityType::UserDefined)
        {
            ret = checkFailed("@PIP582");
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines if the specified record in the <c>PIPCAPASubCategoryUserDefined</c> table exists.
    /// </summary>
    /// <param name="_capaCategory">
    ///    The CAPA category of the record to check.
    /// </param>
    /// <param name="_subCategory">
    ///     The sub-category of the record to check.
    /// </param>
    /// <returns>
    ///     True if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(PIPCategory _capaCategory, PIPCAPASubCategory _subCategory)
    {
        return (select PIPCAPASubCategoryUserDefined
                    where PIPCAPASubCategoryUserDefined.CAPACategory == _capaCategory
                        && PIPCAPASubCategoryUserDefined.SubCategory == _subCategory).RecId !=0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>PIPCAPASubCategoryUserDefined</c>.
    /// </summary>
    /// <param name="_capaCategory">
    ///    The CAPA category of the record to find.
    /// </param>
    /// <param name="_subCategory">
    ///     The sub-category of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record in the <c>PIPCAPASubCategoryUserDefined</c> table; otherwise, an empty record.
    /// </returns>
    public static PIPCAPASubCategoryUserDefined find(PIPCategory _capaCategory, PIPCAPASubCategory _subCategory, boolean _forUpdate = false)
    {
        PIPCAPASubCategoryUserDefined capaSubCategory;
    
        if (_capaCategory && _subCategory)
        {
            capaSubCategory.selectForUpdate(_forUpdate);
    
            select firstOnly capaSubCategory
                where capaSubCategory.CAPACategory == _capaCategory
                    && capaSubCategory.SubCategory == _subCategory;
        }
    
        return capaSubCategory;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PIPCAPAManagement</ConfigurationKey>
	<DeveloperDocumentation>@PIP1072</DeveloperDocumentation>
	<FormRef>PIPCAPASubCategory</FormRef>
	<Label>@PIP1071</Label>
	<TitleField1>SubCategory</TitleField1>
	<TitleField2>CAPACategory</TitleField2>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CAPACategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubCategory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CAPACategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubCategory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CAPACategory</Name>
			<ExtendedDataType>PIPCategory</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<StringSize>20</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
			<StringSize>60</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SubCategory</Name>
			<ExtendedDataType>PIPCAPASubCategory</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<StringSize>20</StringSize>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PIPCAPASubCategoryIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CAPACategory</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SubCategory</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PIPCAPACategories</Name>
			<Cardinality>OneMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>PIPCAPACategories</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CAPACategory</Name>
					<Field>CAPACategory</Field>
					<RelatedField>Category</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CategoryIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>