<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventQualityOrderTableAnalytics</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PIPInventQualityOrderTableAnalytics extends common
{
    #define.ViewName("PIPInventQualityOrderTableAnalytics")
    #define.DataSourceName("InventQualityOrderTable")
    #define.FieldOrderStatus("OrderStatus")
    #define.FieldReferenceType("ReferenceType")  

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>referencePurchStatusClosed</Name>
				<Source><![CDATA[
    private static server str referencePurchStatusClosed()
    {
        return SysComputedColumn::if(
            SysComputedColumn::and2(
                SysComputedColumn::notEqualExpression(
                    SysComputedColumn::comparisonField(#ViewName, #DataSourceName , #FieldOrderStatus),
                    SysComputedColumn::comparisonLiteral(InventTestOrderStatus::Open)),
                SysComputedColumn::equalExpression(
                    SysComputedColumn::comparisonField(#ViewName, #DataSourceName , #FieldReferenceType),
                    SysComputedColumn::comparisonLiteral(InventTestReferenceType::Purch))),
            SysComputedColumn::returnLiteral(1),
            SysComputedColumn::returnLiteral(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>referencePurchStatusFail</Name>
				<Source><![CDATA[
    private static server str referencePurchStatusFail()
    {
        return SysComputedColumn::if(
            SysComputedColumn::and2(
                SysComputedColumn::equalExpression(
                    SysComputedColumn::comparisonField(#ViewName, #DataSourceName , #FieldOrderStatus),
                    SysComputedColumn::comparisonLiteral(InventTestOrderStatus::Fail)),
                SysComputedColumn::equalExpression(
                    SysComputedColumn::comparisonField(#ViewName, #DataSourceName , #FieldReferenceType),
                    SysComputedColumn::comparisonLiteral(InventTestReferenceType::Purch))),
            SysComputedColumn::returnLiteral(1),
            SysComputedColumn::returnLiteral(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>referenceNonPurchStatusFail</Name>
				<Source><![CDATA[
    private static server str referenceNonPurchStatusFail()
    {
        return SysComputedColumn::if(
            SysComputedColumn::and2(
                SysComputedColumn::equalExpression(
                    SysComputedColumn::comparisonField(#ViewName, #DataSourceName , #FieldOrderStatus),
                    SysComputedColumn::comparisonLiteral(InventTestOrderStatus::Fail)),
                SysComputedColumn::notEqualExpression(
                    SysComputedColumn::comparisonField(#ViewName, #DataSourceName , #FieldReferenceType),
                    SysComputedColumn::comparisonLiteral(InventTestReferenceType::Purch))),
            SysComputedColumn::returnLiteral(1),
            SysComputedColumn::returnLiteral(0));   
    }

]]></Source>
			</Method>
			<Method>
				<Name>referenceNonPurchStatusClosed</Name>
				<Source><![CDATA[
    private static server str referenceNonPurchStatusClosed()
    {
        return SysComputedColumn::if(
            SysComputedColumn::and2(
                SysComputedColumn::notEqualExpression(
                    SysComputedColumn::comparisonField(#ViewName, #DataSourceName , #FieldOrderStatus),
                    SysComputedColumn::comparisonLiteral(InventTestOrderStatus::Open)),
                SysComputedColumn::notEqualExpression(
                    SysComputedColumn::comparisonField(#ViewName, #DataSourceName , #FieldReferenceType),
                    SysComputedColumn::comparisonLiteral(InventTestReferenceType::Purch))),
            SysComputedColumn::returnLiteral(1),
            SysComputedColumn::returnLiteral(0));    
    }

]]></Source>
			</Method>
			<Method>
				<Name>openOrder</Name>
				<Source><![CDATA[
    private static server str openOrder()
    { 
        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(#ViewName, #DataSourceName , #FieldOrderStatus),
                SysComputedColumn::comparisonLiteral(InventTestOrderStatus::Open)),
            SysComputedColumn::returnLiteral(1),
            SysComputedColumn::returnLiteral(0));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Query>PIPInventQualityOrderTableAnalytics</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>QualityOrderId</Name>
			<DataField>QualityOrderId</DataField>
			<DataSource>InventQualityOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemId</Name>
			<DataField>ItemId</DataField>
			<DataSource>InventQualityOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AccountRelation</Name>
			<DataField>AccountRelation</DataField>
			<DataSource>InventQualityOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PdsCWBlockingQty</Name>
			<DataField>PdsCWBlockingQty</DataField>
			<DataSource>InventQualityOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemName</Name>
			<DataField>ItemName</DataField>
			<DataSource>InventQualityOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>OrderStatus</Name>
			<DataField>OrderStatus</DataField>
			<DataSource>InventQualityOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PdsCWQty</Name>
			<DataField>PdsCWQty</DataField>
			<DataSource>InventQualityOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Qty</Name>
			<DataField>Qty</DataField>
			<DataSource>InventQualityOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ValidatedDateTime</Name>
			<DataField>ValidatedDateTime</DataField>
			<DataSource>InventQualityOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CreatedDateAndTime</Name>
			<DataField>CreatedDateTime</DataField>
			<DataSource>InventQualityOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CustAccount</Name>
			<DataField>AccountNum</DataField>
			<DataSource>CustTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>VendAccount</Name>
			<DataField>AccountNum</DataField>
			<DataSource>VendTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventBatchId</Name>
			<DataField>inventBatchId</DataField>
			<DataSource>InventDim</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ReferenceType</Name>
			<DataField>ReferenceType</DataField>
			<DataSource>InventQualityOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventRefId</Name>
			<DataField>InventRefId</DataField>
			<DataSource>InventQualityOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CountOfRecords</Name>
			<Label>@SYS62581</Label>
			<Aggregation>Count</Aggregation>
			<DataField>RecId</DataField>
			<DataSource>InventQualityOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>ReferencePurchStatusClosed</Name>
			<Label>Closed purchase order</Label>
			<ViewMethod>referencePurchStatusClosed</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>ReferencePurchStatusFail</Name>
			<Label>Failed purchase order</Label>
			<ViewMethod>referencePurchStatusFail</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>ReferenceNonPurchStatusClosed</Name>
			<Label>Closed order not of type purchase</Label>
			<ViewMethod>referenceNonPurchStatusClosed</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>ReferenceNonPurchStatusFail</Name>
			<Label>Failed order not of type purchase</Label>
			<ViewMethod>referenceNonPurchStatusFail</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>OpenOrder</Name>
			<Label>@SYS24576</Label>
			<ViewMethod>openOrder</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources />
	</ViewMetadata>
</AxView>