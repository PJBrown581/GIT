<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventTransferUpdReceive_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(InventTransferUpdReceive))]
public final class PIPInventTransferUpdReceive_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>commitLedger</Name>
				<Source><![CDATA[
    protected void commitLedger()
    {
        next commitLedger();

        InventQualityManagementCreateHandler::pipTransferOrderReceiveAfter(inventTransferParmTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>InventTransferUpdReceive_Pre_run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes additional logic in the pre-method event for the <see cref="run method"/> on this class.
    /// </summary>
    /// <param name="_ppArgs"></param>
    [PreHandlerFor(classStr(InventTransferUpdReceive), methodStr(InventTransferUpdReceive, run))]
    public static void InventTransferUpdReceive_Pre_run(XppPrePostArgs _ppArgs)
    {
        InventTransferUpdReceive inventTransferUpdReceive = _ppArgs.getThis() as InventTransferUpdReceive;
        InventQualityManagementCreateHandler::pipTransferOrderReceiveBefore(inventTransferUpdReceive.parmParmBuffer() as InventTransferParmTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateInventTransferLine</Name>
				<Source><![CDATA[
    protected void updateInventTransferLine(InventTransferParmLine _inventTransferParmLine)
    {
        if (isConfigurationKeyEnabled(configurationkeynum(InventQualityManagement)))
        {
            InventTransferLine inventTransferLine = InventTransferLine::findTransIdReceive(_inventTransferParmLine.InventTransId, true);
    
            InventQualityManagementBlockHandler::pipBlockTransferReceive(inventTransferLine);
        }
        
        next updateInventTransferLine(_inventTransferParmLine);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>