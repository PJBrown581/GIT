<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventTrackingDimTracingCriteria_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(InventTrackingDimTracingCriteria))]
public final class PIPInventTrackingDimTracingCriteria_Extension
{
    private int argTableNum;
    private boolean skipCriteriaForm;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pipParmArgTableNum</Name>
				<Source><![CDATA[
    public int pipParmArgTableNum(int _argTableNum = argTableNum)
    {
        argTableNum = _argTableNum;
    
        return argTableNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromRecord</Name>
				<Source><![CDATA[
    protected boolean initFromRecord(Common _common)
    {
        boolean ret = next initFromRecord(_common);

        argTableNum = _common.TableId;

        if (!ret)
        {
            switch(_common.TableId)
            {
                case tableNum(InventQualityOrderTable):
                    InventQualityOrderTable inventQualityOrderTable = _common as InventQualityOrderTable;
                    this.parmItemIdCriteria(inventQualityOrderTable.ItemId);
                    this.parmInventDimCriteria().initFromInventDim(inventQualityOrderTable.inventDim(), InventDim::dimFieldsList());
                    this.parmTraceDirection(ForwardBackward::Backward);

                    skipCriteriaForm = true;

                    ret = true;
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pipSkipCriteriaForm</Name>
				<Source><![CDATA[
    public boolean pipSkipCriteriaForm(boolean _skipCriteriaForm = skipCriteriaForm)
    {
        skipCriteriaForm = _skipCriteriaForm;

        return skipCriteriaForm;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>