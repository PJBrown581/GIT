<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventTransferUpdPick_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(InventTransferUpdPick))]
public final class PIPInventTransferUpdPick_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>commitLedger</Name>
				<Source><![CDATA[
    protected void commitLedger()
    {
        next commitLedger();

        InventQualityManagementCreateHandler::pipTransferOrderPickingListAfter(inventTransferParmTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pipRunPre</Name>
				<Source><![CDATA[
    [PreHandlerFor(classStr(InventTransferUpdPick), methodStr(InventTransferUpdPick, run))]
    /// <summary>
    ///    Executes additional logic in the pre-method event for the <see cref="run method"/> on this class.
    /// </summary>
    /// <param name="_ppArgs">
    ///    The standard pre-/post- arguments for a static method event handler.
    /// </param>
    public static void pipRunPre(XppPrePostArgs _ppArgs)
    {
        InventTransferUpdPick   inventTransferUpdPick   = _ppArgs.getThis();
    
        InventQualityManagementCreateHandler::pipTransferOrderPickingListBefore(inventTransferUpdPick.inventTransferParmTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateInventTransferLine</Name>
				<Source><![CDATA[
    protected void updateInventTransferLine(InventTransferParmLine _inventTransferParmLine)
    {
        if (isConfigurationKeyEnabled(configurationkeynum(InventQualityManagement)))
        {
            InventTransferLine inventTransferLine = InventTransferLine::findTransIdShip(_inventTransferParmLine.InventTransId, true);
    
            InventQualityManagementBlockHandler::pipBlockTransferPickingList(inventTransferLine);
        }

        next updateInventTransferLine(_inventTransferParmLine);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>