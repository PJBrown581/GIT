<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventQualityManagementBlockHandler_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(InventQualityManagementBlockHandler))]
public final class PIPInventQualityManagementBlockHandler_Extension
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pipBlockTransferPickingList</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Handles process blocking for a transfer picking list.
    /// </summary>
    /// <param name="_inventTransferLine">
    ///    A <c>InventTransferLine</c> buffer.
    /// </param>
    public static void pipBlockTransferPickingList(InventTransferLine _inventTransferLine)
    {
        if (!InventParameters::find().UseQualityManagement)
        {
            return;
        }
    
        InventQualityManagementBlock::blockPerQualityAssociations(_inventTransferLine, InventTestBlockProcess::PickingList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pipBlockTransferReceive</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Handles process blocking for the receipt of a transfer order.
    /// </summary>
    /// <param name="_inventTransferLine">
    ///    A <c>InventTransferLine</c> buffer.
    /// </param>
    public static void pipBlockTransferReceive(InventTransferLine _inventTransferLine)
    {
        try 
        {
            if (!InventParameters::find().UseQualityManagement)
            {
                return;
            }
    
            // Because of the differences in Transfer Receive and other Transfer related Quality Orders we need to run the block twice, once for Quality Orders created 
            // before Receipt and once for those create as part of Receipt
            PIPThreadVariable::save(InventQualityReferenceType::SharedVarIsReceive, true);
            InventQualityManagementBlock::blockPerQualityAssociations(_inventTransferLine, InventTestBlockProcess::PIPReceive);
            
            PIPThreadVariable::save(InventQualityReferenceType::SharedVarTransferReceiveBlocking, true);
            InventQualityManagementBlock::blockPerQualityAssociations(_inventTransferLine, InventTestBlockProcess::PIPReceive);
        }
        finally
        {
            PIPThreadVariable::remove(InventQualityReferenceType::SharedVarIsReceive);
            PIPThreadVariable::remove(InventQualityReferenceType::SharedVarTransferReceiveBlocking);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>pipBlockTransferShip</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Handles process blocking for the shipment of a transfer order.
    /// </summary>
    /// <param name="_inventTransferLine">
    ///    A <c>InventTransferLine</c> buffer.
    /// </param>
    public static void pipBlockTransferShip(InventTransferLine _inventTransferLine)
    {
        if (!InventParameters::find().UseQualityManagement)
        {
            return;
        }
    
        InventQualityManagementBlock::blockPerQualityAssociations(_inventTransferLine, InventTestBlockProcess::PIPShipTransfer);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>