<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventTrackingDimTracingCriteriaForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(InventTrackingDimTracingCriteria))]
public final class PIPInventTrackingDimTracingCriteriaForm_Extension
{
    private static readonly DictClass extClass = new DictClass(classNum(PIPInventTrackingDimTracingCriteriaForm_Extension));
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>InventTrackingDimTracingCriteria_OnInitializing</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormEventHandler(formStr(InventTrackingDimTracingCriteria), FormEventType::Initializing)]
    public static void InventTrackingDimTracingCriteria_OnInitializing(xFormRun sender, FormEventArgs e)
    {
        extClass.callStatic(methodStr(PIPInventTrackingDimTracingCriteriaForm_Extension, pipInit), sender);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pipInit</Name>
				<Source><![CDATA[
    private void pipInit()
    {
        var criteria = this.inventTrackingDimTracingCriteria;
        if (criteria.pipSkipCriteriaForm())
        {
            InventTrackingDimTracingFormInterface callerForm = this.args().caller() as InventTrackingDimTracingFormInterface;
            if (callerForm)
            {
                callerForm.onTraceClicked();
            }

            this.close();

            criteria.pipSkipCriteriaForm(false);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>