<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventQualityReferenceTypeReturn</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PIPInventQualityReferenceTypeReturn</c> class is a sales return reference document.
/// </summary>
[InventTestReferenceTypeFactory(InventTestReferenceType::PIPReturn)]
public class PIPInventQualityReferenceTypeReturn extends InventQualityReferenceTypeSales
{
    boolean createdFromForm;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>inventRefQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the <c>InventQty</c> value for this reference document.
    /// </summary>
    /// <returns>
    ///    The appropriate <c>InventQty</c> value.
    /// </returns>
    public InventQty inventRefQty()
    {
        return abs(super());
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEligibleForQualityManagement</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates whether the reference document is eligible for quality management.
    /// </summary>
    /// <returns>
    ///    true if the reference document is eligible; otherwise, false.
    /// </returns>
    public boolean isEligibleForQualityManagement()
    {
        if (!createdFromForm && !salesLine.returnDispositionCode().PIPCheckQuallityAssociation)
        {
            return false;
        }
    
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromForm</Name>
				<Source><![CDATA[
    public static PIPInventQualityReferenceTypeReturn newFromForm(boolean _isFromForm)
    {
        PIPInventQualityReferenceTypeReturn ret = PIPInventQualityReferenceTypeReturn::construct();
        
        ret.parmCreatedFromForm(_isFromForm);
        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCreatedFromForm</Name>
				<Source><![CDATA[
    public boolean parmCreatedFromForm(boolean _createdFromForm = createdFromForm)
    {
        createdFromForm = _createdFromForm;
    
        return createdFromForm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWInventRefQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the <c>PdsCWInventQty</c> value for this reference document.
    /// </summary>
    /// <returns>
    ///    The appropriate <c>PdsCWInventQty</c> value.
    /// </returns>
    public PdsCWInventQty pdsCWInventRefQty()
    {
        return abs(super());
    }

]]></Source>
			</Method>
			<Method>
				<Name>referenceType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the <c>InventTestReferenceType</c> value of this reference document.
    /// </summary>
    /// <returns>
    ///    The appropriate <c>InventTestReferenceType</c> value.
    /// </returns>
    public InventTestReferenceType referenceType()
    {
        return InventTestReferenceType::PIPReturn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStatusIssueRangeValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets a range value for the <c>StatusIssue</c> field on the data source of the <c>InventTrans</c>
    ///    table that is based on the document status and test execution values.
    /// </summary>
    /// <param name="_qbrStatusIssue">
    ///    A query build range object.
    /// </param>
    /// <param name="_inventTestDocumentStatus">
    ///    A document status value.
    /// </param>
    /// <param name="_inventTestExecution">
    ///    A test execution value.
    /// </param>
    protected void setStatusIssueRangeValue(
        QueryBuildRange             _qbrStatusIssue,
        InventTestDocumentStatus    _inventTestDocumentStatus,
        InventTestExecution         _inventTestExecution)
    {
        _qbrStatusIssue.value(queryValue(StatusIssue::None));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStatusReceiptRangeValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets a range value for the <c>StatusReceipt</c> field on the data source of the <c>InventTrans</c>
    ///    table that is based on the document status and test execution values.
    /// </summary>
    /// <param name="_qbrStatusReceipt">
    ///    A query build range object.
    /// </param>
    /// <param name="_inventTestDocumentStatus">
    ///    A document status value.
    /// </param>
    /// <param name="_inventTestExecution">
    ///    A test execution value.
    /// </param>
    protected void setStatusReceiptRangeValue(
        QueryBuildRange             _qbrStatusReceipt,
        InventTestDocumentStatus    _inventTestDocumentStatus,
        InventTestExecution         _inventTestExecution)
    {
        if (_inventTestExecution == InventTestExecution::Before)
        {
            _qbrStatusReceipt.value(queryValue(StatusReceipt::Registered));
        }
        else
        {
            _qbrStatusReceipt.value(queryValue(StatusReceipt::Received));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PIPInventQualityReferenceTypeReturn construct()
    {
        return new PIPInventQualityReferenceTypeReturn();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>