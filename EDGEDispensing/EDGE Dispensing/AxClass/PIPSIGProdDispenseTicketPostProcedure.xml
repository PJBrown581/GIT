<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPSIGProdDispenseTicketPostProcedure</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>PIPSIGProdPickListdJournalPostProcedure</c> class is for the built-in dispensing ticket production journal posting based signature providers.
/// </summary>
[PIPSIGProdJournalPostProcedureAttribute(ProdJournalType::Picklist, 'Dispensing')]
public class PIPSIGProdDispenseTicketPostProcedure extends PIPSIGProdPickListJournalPostProcedure
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pipActivationChangeAllowed</Name>
				<Source><![CDATA[
    public boolean pipActivationChangeAllowed(boolean activated)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PIPSIGProdDispenseTicketPostProcedure construct()
    {
        return new PIPSIGProdDispenseTicketPostProcedure();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static public ClassDescription description()
    {
        return "@PIP908";
    }

]]></Source>
			</Method>
			<Method>
				<Name>PIPSIGProdJournalPostProcedure_OnDetermineSubJournalType</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="_prodJournalTable"></param>
    /// <param name="_result"></param>
    [SubscribesTo(classStr(PIPSIGProdJournalPostProcedure), staticDelegateStr(PIPSIGProdJournalPostProcedure, OnDetermineSubJournalType))]
    public static void PIPSIGProdJournalPostProcedure_OnDetermineSubJournalType(ProdJournalTable _prodJournalTable, EventHandlerResult _result)
    {
        if (!_result.hasResult() && _prodJournalTable.PIPIsDispensingJournal)
        {
            _result.result('Dispensing');
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>