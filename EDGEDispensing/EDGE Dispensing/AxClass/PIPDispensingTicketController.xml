<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPDispensingTicketController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///   The <c>PIPDispensingTicketController</c> class is a controller for the dispensing ticket report.
/// </summary>
public class PIPDispensingTicketController extends SrsReportRunController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    protected void prePromptModifyContract()
    {
        Query                       query;
        QueryBuildDataSource        queryBuildDataSource;
        QueryBuildRange             queryBuildRange;
        ProdJournalBOM              prodJournalBOM;
    
        if (this.parmArgs() && this.parmArgs().dataset() == tableNum(ProdJournalBOM))
        {
            prodJournalBOM = this.parmArgs().record();
            query = this.parmReportContract().parmQueryContracts().lookup(this.getFirstQueryContractKey());
            queryBuildDataSource = SysQuery::findOrCreateDataSource(query, tableNum(ProdJournalBOM));
            queryBuildRange      = SysQuery::findOrCreateRange(queryBuildDataSource, fieldNum(ProdJournalBOM, JournalId));
            queryBuildRange.value(ProdJournalBOM.JournalId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PIPDispensingTicketController construct()
    {
        return new PIPDispensingTicketController();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        PIPDispensingTicketController controller  = PIPDispensingTicketController::construct();
        controller.parmReportName(ssrsReportStr(PIPDispensingTicket, Report));
        controller.parmArgs(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>