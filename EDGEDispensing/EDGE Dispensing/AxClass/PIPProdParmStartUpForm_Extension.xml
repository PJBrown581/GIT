<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPProdParmStartUpForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(ProdParmStartUp))]
public final class PIPProdParmStartUpForm_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>ProdParmStartUp_PIPDispensingJournalNameId_OnLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormControlEventHandler(formControlStr(ProdParmStartUp, ProdParmStartUp_PIPDispensingJournalNameId), FormControlEventType::Lookup)]
    public static void ProdParmStartUp_PIPDispensingJournalNameId_OnLookup(FormControl sender, FormControlEventArgs e)
    {
        ProdJournalName::pipLookupJournalName(sender, ProdJournalType::Picklist, NoYes::Yes);

        FormControlCancelableSuperEventArgs ce = e as FormControlCancelableSuperEventArgs;
        ce.CancelSuperCall();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ProdParmStartUp_OnActivated</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataSourceEventHandler(formDataSourceStr(ProdParmStartUp, ProdParmStartUp), FormDataSourceEventType::Activated)]
    public void ProdParmStartUp_OnActivated(FormDataSource sender, FormDataSourceEventArgs e)
    {
        boolean dispenseControlled = #PIPDispensingEnabled && ProdParmStartUp.prodTable().pipHasDispensingControlledItem();
        ProdParmStartUp_ds.object(fieldNum(ProdParmStartUp, PIPDispensingJournalNameId)).visible(dispenseControlled);
        prodParmStartUp_ds.object(fieldNum(ProdParmStartUp, PostNowBOM)).allowEdit(!dispenseControlled);
        prodParmStartUp_ds.object(fieldNum(ProdParmStartUp, ReducePhysical)).allowEdit(!dispenseControlled);
        prodParmStartUp_ds.object(fieldNum(ProdParmStartUp, EndPicklist)).allowEdit(!dispenseControlled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowEditOnProdParmStartUpControls</Name>
				<Source><![CDATA[
    protected void allowEditOnProdParmStartUpControls()
    {
        next allowEditOnProdParmStartUpControls();

        // MSBUG: Added due to compiler issues in Update5/6
        ProdParmStartUp prodParmStartUp = ProdParmStartUp_ds.cursor();

        boolean allowEdit = prodParmStartUp_ds.object(fieldNum(ProdParmStartUp, PostNowBOM)).allowEdit() && #PIPDispensingEnabled && !prodParmStartUp.prodTable().pipHasDispensingControlledItem();
        
        if (!allowEdit)
        {
            prodParmStartUp.PostNowBOM = false;
            prodParmStartUp.EndPicklist = false;

            prodParmStartUp_ds.object(fieldNum(ProdParmStartUp, PostNowBOM)).allowEdit(false);
            prodParmStartUp_ds.object(fieldNum(ProdParmStartUp, EndPicklist)).allowEdit(false);
        }
        
        if (SIGProcedureProvider::pipIsActivated(classNum(PIPSIGProdPickListJournalPostProcedure)))
        {
            prodParmStartUp.PostNowBOM = false;
            prodParmStartUp.EndPicklist = false;
            prodParmStartUp.ReducePhysical = false;
        
            prodParmStartUp_ds.object(fieldNum(ProdParmStartUp, PostNowBOM)).allowEdit(false);
            prodParmStartUp_ds.object(fieldNum(ProdParmStartUp, EndPickList)).allowEdit(false);
            prodParmStartUp_ds.object(fieldNum(ProdParmStartUp, ReducePhysical)).allowEdit(false);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>