<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPProdSetupReleaseForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(ProdSetupRelease))]
public final class PIPProdSetupReleaseForm_Extension
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pipCtrlPrintButton</Name>
				<Source><![CDATA[
    private void pipCtrlPrintButton(boolean setActive)
    {
        printOptionsButton.enabled(setActive);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ProdSetupRelease_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormEventHandler(formStr(ProdSetupRelease), FormEventType::Initialized)]
    public void ProdSetupRelease_OnInitialized(xFormRun sender, FormEventArgs e)
    {
        PickingListJournal.visible(ProdParametersDim::pipAnyDispensingEnabled());
    }

]]></Source>
			</Method>
			<Method>
				<Name>ProdSetupRelease_OnPostRun</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormEventHandler(formStr(ProdSetupRelease), FormEventType::PostRun)]
    public void ProdSetupRelease_OnPostRun(xFormRun sender, FormEventArgs e)
    {
        this.pipCtrlPrintButton(ProdParmRelease.PIPPrintPickList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ProdParmRelease_OnQueryExecuted</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataSourceEventHandler(formDataSourceStr(ProdSetupRelease, ProdParmRelease), FormDataSourceEventType::QueryExecuted)]
    public void ProdParmRelease_OnQueryExecuted(FormDataSource sender, FormDataSourceEventArgs e)
    {
        // MSBUG: Added due to compiler issues in Update5/6
        ProdParmRelease prodParmRelease = sender.cursor();

        if (prodParmRelease.PIPReducePhysical && prodParmRelease.PIPDrawNegative)
        {
            prodParmRelease.PIPReducePhysical = NoYes::No; // cannot both be set.
        }
        
        prodParmRelease_ds.object(fieldnum(ProdParmRelease, PIPDrawNegative)).allowEdit(!prodParmRelease.PIPReducePhysical);
        prodParmRelease_ds.object(fieldnum(ProdParmRelease, PIPReducePhysical)).allowEdit(!prodParmRelease.PIPDrawNegative);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ProdParmRelease_PIPDispensingJournalNameId_OnLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormControlEventHandler(formControlStr(ProdSetupRelease, ProdParmRelease_PIPDispensingJournalNameId), FormControlEventType::Lookup)]
    public void ProdParmRelease_PIPDispensingJournalNameId_OnLookup(FormControl sender, FormControlEventArgs e)
    {
        ProdJournalName::pipLookupJournalName(sender, ProdJournalType::Picklist, NoYes::Yes);

        FormControlCancelableSuperEventArgs ce = e as FormControlCancelableSuperEventArgs;
        ce.CancelSuperCall();
    }

]]></Source>
			</Method>
			<Method>
				<Name>PIPDrawNegative_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataFieldEventHandler(formDataFieldStr(ProdSetupRelease, ProdParmRelease, PIPDrawNegative), FormDataFieldEventType::Modified)]
    public void PIPDrawNegative_OnModified(FormDataObject sender, FormDataFieldEventArgs e)
    {
        prodParmRelease_ds.object(fieldnum(ProdParmRelease, PIPReducePhysical)).allowEdit(!prodParmRelease.PIPDrawNegative);
    }

]]></Source>
			</Method>
			<Method>
				<Name>PIPReducePhysical_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataFieldEventHandler(formDataFieldStr(ProdSetupRelease, ProdParmRelease, PIPReducePhysical), FormDataFieldEventType::Modified)]
    public void PIPReducePhysical_OnModified(FormDataObject sender, FormDataFieldEventArgs e)
    {
        prodParmRelease_ds.object(fieldnum(ProdParmRelease, PIPDrawNegative)).allowEdit(!prodParmRelease.PIPReducePhysical);
    }

]]></Source>
			</Method>
			<Method>
				<Name>PIPSetupPrintPickList_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataFieldEventHandler(formDataFieldStr(ProdSetupRelease, ProdParmRelease, PIPSetupPrintPickList), FormDataFieldEventType::Modified)]
    public void PIPSetupPrintPickList_OnModified(FormDataObject sender, FormDataFieldEventArgs e)
    {
        this.pipCtrlPrintButton(prodParmRelease.PIPPrintPickList);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>