<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventSum_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(tableStr(InventSum))]
public final class PIPInventSum_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pipBaseAttributeValue</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute]
    public display PDSBaseValueNum pipBaseAttributeValue()
    {
        PIPPotencyActiveCache potencyActiveCache = this.pipGetFormCacheForPotencyValues();
        if (potencyActiveCache)
        {
            return potencyActiveCache.lookup(this, this.getInventDimFormDataSource()).baseValue();
        }
        else
        {
            return 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>pipBaseAttributeId</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute]
    public display PDSBaseAttributeId pipBaseAttributeId()
    {
        PIPPotencyActiveCache potencyActiveCache = this.pipGetFormCacheForPotencyValues();
        if (potencyActiveCache)
        {
            return potencyActiveCache.lookup(this, this.getInventDimFormDataSource()).baseAttributeId();
        }
        else
        {
            return '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>pipActiveQty</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute]
    public display PDSActiveQty pipActiveQty()
    {
        PIPPotencyActiveCache potencyActiveCache = this.pipGetFormCacheForPotencyValues();
        if (potencyActiveCache)
        {
            return potencyActiveCache.lookup(this, this.getInventDimFormDataSource()).activeQty();
        }
        else
        {
            return 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>pipGetFormCacheForPotencyValues</Name>
				<Source><![CDATA[
    public PIPPotencyActiveCache pipGetFormCacheForPotencyValues()
    {
        if (!#PDSPotencyEnabled || !this.isFormDataSource())
        {
            return null;
        }

        FormRun formRun = this.dataSource().formRun();
        PIPPotencyActiveCache cache;
        if (formRun.hasExtensionInstance(classStr(PIPPotencyActiveCache)))
        {
            cache = formRun.getExtensionInstance(classStr(PIPPotencyActiveCache));
        }
        else
        {
            cache = PIPPotencyActiveCache::construct();
            cache.init();
            formRun.registerExtensionInstance(classStr(PIPPotencyActiveCache), cache);
        }

        return cache;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventDimFormDataSource</Name>
				<Source><![CDATA[
    private FormDataSource getInventDimFormDataSource()
    {
        return getJoinChildFormDataSource(this.dataSource(), tableNum(InventDim));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>