<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPProdParmReleaseForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(ProdParmRelease))]
public final class PIPProdParmReleaseForm_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>ProdParmRelease_OnActivated</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataSourceEventHandler(formDataSourceStr(ProdParmRelease, ProdParmRelease), FormDataSourceEventType::Activated)]
    public void ProdParmRelease_OnActivated(FormDataSource sender, FormDataSourceEventArgs e)
    {
        boolean allowPostNow;
        boolean dispenseControlled = #PIPDispensingEnabled && ProdParmRelease.prodTable().pipHasDispensingControlledItem();
        PickingListJournal.visible(dispenseControlled);
        
        if (dispenseControlled)
        {
            if (!#PDSPotencyEnabled)
            {
                this.pipCtrlPrintButton(prodParmRelease.PIPPrintPickList);
            }
            else
            {
                allowPostNow = prodParmRelease.prodTable().pipAllowPostNow();
        
                prodParmRelease_ds.object(fieldNum(ProdParmRelease, PIPBOMAutoConsump)).allowEdit(allowPostNow);
        
                this.pipCtrlPrintButton(prodParmRelease.PIPPrintPickList && allowPostNow);
            }

            // For any dispensing controlled item these fields are always disallowed; but shown for consistency with the startup form
            prodParmRelease_ds.object(fieldNum(ProdParmRelease, PIPPostNowBOM)).allowEdit(!dispenseControlled);
            prodParmRelease_ds.object(fieldNum(ProdParmRelease, PIPEndPickList)).allowEdit(!dispenseControlled);
        
            prodParmRelease_ds.object(fieldNum(ProdParmRelease, PIPDrawNegative)).allowEdit(!prodParmRelease.PIPReducePhysical);
            prodParmRelease_ds.object(fieldNum(ProdParmRelease, PIPReducePhysical)).allowEdit(!prodParmRelease.PIPDrawNegative);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>pipCtrlPrintButton</Name>
				<Source><![CDATA[
    private void pipCtrlPrintButton(boolean setActive)
    {
        printOptionsButton.enabled(setActive);
    }

]]></Source>
			</Method>
			<Method>
				<Name>PIPPrintPickList_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataFieldEventHandler(formDataFieldStr(ProdParmRelease, ProdParmRelease, PIPPrintPickList), FormDataFieldEventType::Modified)]
    public void PIPPrintPickList_OnModified(FormDataObject sender, FormDataFieldEventArgs e)
    {
        this.pipCtrlPrintButton(prodParmRelease.PIPPrintPickList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>PIPDrawNegative_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataFieldEventHandler(formDataFieldStr(ProdParmRelease, ProdParmRelease, PIPDrawNegative), FormDataFieldEventType::Modified)]
    public void PIPDrawNegative_OnModified(FormDataObject sender, FormDataFieldEventArgs e)
    {
        prodParmRelease_ds.object(fieldNum(ProdParmRelease, PIPReducePhysical)).allowEdit(!ProdParmRelease.PIPDrawNegative);
    }

]]></Source>
			</Method>
			<Method>
				<Name>PIPReducePhysical_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataFieldEventHandler(formDataFieldStr(ProdParmRelease, ProdParmRelease, PIPReducePhysical), FormDataFieldEventType::Modified)]
    public void PIPReducePhysical_OnModified(FormDataObject sender, FormDataFieldEventArgs e)
    {
        prodParmRelease_ds.object(fieldNum(ProdParmRelease, PIPDrawNegative)).allowEdit(!prodParmRelease.PIPReducePhysical);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ProdParmRelease_PIPDispensingJournalNameId_OnLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormControlEventHandler(formControlStr(ProdParmRelease, ProdParmRelease_PIPDispensingJournalNameId), FormControlEventType::Lookup)]
    public void ProdParmRelease_PIPDispensingJournalNameId_OnLookup(FormControl sender, FormControlEventArgs e)
    {
        ProdJournalName::pipLookupJournalName(sender, ProdJournalType::Picklist, NoYes::Yes);

        FormControlCancelableSuperEventArgs ce = e as FormControlCancelableSuperEventArgs;
        ce.CancelSuperCall();
    }

]]></Source>
			</Method>
			<Method>
				<Name>PrintOptionsButton_OnClicked</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormControlEventHandler(formControlStr(ProdParmRelease, PrintOptionsButton), FormControlEventType::Clicked)]
    public void PrintOptionsButton_OnClicked(FormControl sender, FormControlEventArgs e)
    {
        Args args  = new Args();
        args.record(prodParmRelease);
        
        MenuFunction menuFunction = new MenuFunction(menuitemOutputStr(ProdPickListShowDialog), MenuItemType::Output);
        menuFunction.run(args);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>