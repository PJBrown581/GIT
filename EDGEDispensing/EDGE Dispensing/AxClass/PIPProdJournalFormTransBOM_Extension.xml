<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPProdJournalFormTransBOM_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(ProdJournalFormTransBOM))]
public final class PIPProdJournalFormTransBOM_Extension
{
    private FormControl dispensedItemDisplayControl;
    private FormControl dispensingGroup;   
 
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setupCWFormControl</Name>
				<Source><![CDATA[
    protected void setupCWFormControl(FormRun _formRun)
    {
        next setupCWFormControl(_formRun);

        var dispensingFieldSetup = [
            fieldNum(ProdJournalBOM, PIPDispensedQty),
            fieldNum(ProdJournalBOM, PIPDispensedCWQty),
            true,
            fieldNum(ProdJournalBOM, BOMUnitId)
            ];
        
        Map fieldMap = cwFormCtrl.parmFieldIds();
        MapEnumerator me = PdsCWValidation::fieldMapFromContainers([dispensingFieldSetup]).getEnumerator();
        while (me.moveNext())
        {
            fieldMap.insert(me.currentKey(), me.currentValue());
        }
        cwFormCtrl.parmFieldIds(fieldMap);
    }

]]></Source>
			</Method>
			<Method>
				<Name>datasourceLinkActivePre</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Executes additional logic for the form data source <c>linkActive</c> method.
    /// </summary>
    public void datasourceLinkActivePre()
    {
        next datasourceLinkActivePre();

        if (journalTableData)
        {
            ProdJournalTable prodJournalTable = journalTableData.journalTable();
            FormRun formRun = this.formRun;
            if (prodJournalTable.PIPIsDispensingJournal)
            {
                formRun.design().caption("@PIP905");
            }
            else
            {
                formRun.design().caption("@SYS25899");
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsActive</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Enables or disable fields on the form when a new record on the main data source becomes active.
    /// </summary>
    public void enableFieldsActive()
    {
        next enableFieldsActive();

        ProdJournalTable    prodJournalTable    = this.journalTableData().journalTable();
        boolean             dispensingPossible  = prodJournalTable.PIPIsDispensingJournal;
    
        if (dispensedItemDisplayControl)
        {
            dispensedItemDisplayControl.visible(dispensingPossible);
        }
    
        if (dispensingGroup)
        {
            dispensingGroup.visible(dispensingPossible);
        }
    
        this.journalTrans_ds().object(fieldNum(ProdJournalBOM, PIPDispensedQty)).visible(dispensingPossible);
        this.journalTrans_ds().object(fieldNum(ProdJournalBOM, PIPDispensedCWQty)).visible(dispensingPossible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPIPDispensedItemDisplayControl</Name>
				<Source><![CDATA[
    public FormControl parmPIPDispensedItemDisplayControl(FormControl _dispensedItemDisplayControl = dispensedItemDisplayControl)
    {
        dispensedItemDisplayControl = _dispensedItemDisplayControl;
    
        return dispensedItemDisplayControl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPIPDispensingGroup</Name>
				<Source><![CDATA[
    public FormControl parmPIPDispensingGroup(FormControl _dispensingGroup = dispensingGroup)
    {
        dispensingGroup = _dispensingGroup;
    
        return dispensingGroup;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>