<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPUserManagementHandlers</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PIPUserManagementHandlers</c> class contains event handlers for the <c>SysUserManagement</c> form extension.
/// </summary>
public static class PIPUserManagementHandlers
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>PIPUserInfo_OnValidatingWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes logic on validating write for the <c>PIPUserInfo</c> data source.
    /// </summary>
    /// <param name="sender">The form data source.</param>
    /// <param name="e">The event args.</param>
    [FormDataSourceEventHandler(formDataSourceStr(SysUserManagement, PIPUserInfo), FormDataSourceEventType::ValidatingWrite)]
    public static void PIPUserInfo_OnValidatingWrite(FormDataSource sender, FormDataSourceEventArgs e)
    {
        UserInfo userInfo = sender.formRun().dataSource(formDataSourceStr(SysUserManagement, UserInfo)).cursor() as UserInfo;
        PIPUserInfo pipUserInfo = sender.cursor() as PIPUserInfo;

        pipUserInfo.UserId = userInfo.Id;
    }

]]></Source>
			</Method>
			<Method>
				<Name>SysUserManagement_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes logic on form initialized for the <c>UserManagement</c> form.
    /// </summary>
    /// <param name="sender">The form.</param>
    /// <param name="e">The form event args.</param>
    [FormEventHandler(formStr(SysUserManagement), FormEventType::Initialized)]
    public static void SysUserManagement_OnInitialized(xFormRun sender, FormEventArgs e)
    {
        FormDataSource PIPUserInfo_ds = sender.dataSource(formDataSourceStr(SysUserManagement, PIPUserInfo));
        PIPUserInfo_ds.object(fieldNum(PIPUserInfo, AuthorizedForDispensing)).enabled(ProdParametersDim::pipAnyDispensingEnabled(true));
    }

]]></Source>
			</Method>
			<Method>
				<Name>UserInfo_OnDeleting</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Delete related record from <c>PIPUserInfo</c> table when a <c>UserInfo</c> record is deleted.
    /// </summary>
    /// <param name="sender">Form data source record that is being deleted from.</param>
    /// <param name="e">Event args parameter.</param>
    [FormDataSourceEventHandler(formDataSourceStr(SysUserManagement, UserInfo), FormDataSourceEventType::Deleting)]
    public static void UserInfo_OnDeleting(FormDataSource sender, FormDataSourceEventArgs e)
    {
        UserInfo userInfo = sender.cursor() as UserInfo;

        PIPUserInfo pipUserInfo = pipUserInfo::find(userInfo.id, true);

        ttsbegin;
        if (pipUserInfo)
        {
            pipUserInfo.delete();
        }
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>